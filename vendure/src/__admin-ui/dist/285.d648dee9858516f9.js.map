{"version":3,"file":"285.d648dee9858516f9.js","mappings":"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","names":["AdjustmentType","AssetType","CurrencyCode","DeletionResult","ErrorCode","GlobalFlag","HistoryEntryType","JobState","LanguageCode","LogicalOperator","MetricInterval","MetricType","OrderType","Permission","SortOrder","StockMovementType","exports","DISTRIBUTED_ORDER_PROMOTION","OTHER","PROMOTION","BINARY","IMAGE","VIDEO","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STN","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VES","VND","VUV","WST","XAF","XCD","XOF","XPF","YER","ZAR","ZMW","ZWL","DELETED","NOT_DELETED","ALREADY_REFUNDED_ERROR","CANCEL_ACTIVE_ORDER_ERROR","CANCEL_PAYMENT_ERROR","CHANNEL_DEFAULT_LANGUAGE_ERROR","COUPON_CODE_EXPIRED_ERROR","COUPON_CODE_INVALID_ERROR","COUPON_CODE_LIMIT_ERROR","CREATE_FULFILLMENT_ERROR","DUPLICATE_ENTITY_ERROR","EMAIL_ADDRESS_CONFLICT_ERROR","EMPTY_ORDER_LINE_SELECTION_ERROR","FACET_IN_USE_ERROR","FULFILLMENT_STATE_TRANSITION_ERROR","GUEST_CHECKOUT_ERROR","INELIGIBLE_SHIPPING_METHOD_ERROR","INSUFFICIENT_STOCK_ERROR","INSUFFICIENT_STOCK_ON_HAND_ERROR","INVALID_CREDENTIALS_ERROR","INVALID_FULFILLMENT_HANDLER_ERROR","ITEMS_ALREADY_FULFILLED_ERROR","LANGUAGE_NOT_AVAILABLE_ERROR","MANUAL_PAYMENT_STATE_ERROR","MIME_TYPE_ERROR","MISSING_CONDITIONS_ERROR","MULTIPLE_ORDER_ERROR","NATIVE_AUTH_STRATEGY_ERROR","NEGATIVE_QUANTITY_ERROR","NOTHING_TO_REFUND_ERROR","NO_ACTIVE_ORDER_ERROR","NO_CHANGES_SPECIFIED_ERROR","ORDER_LIMIT_ERROR","ORDER_MODIFICATION_ERROR","ORDER_MODIFICATION_STATE_ERROR","ORDER_STATE_TRANSITION_ERROR","PAYMENT_METHOD_MISSING_ERROR","PAYMENT_ORDER_MISMATCH_ERROR","PAYMENT_STATE_TRANSITION_ERROR","PRODUCT_OPTION_IN_USE_ERROR","QUANTITY_TOO_GREAT_ERROR","REFUND_AMOUNT_ERROR","REFUND_ORDER_STATE_ERROR","REFUND_PAYMENT_ID_MISSING_ERROR","REFUND_STATE_TRANSITION_ERROR","SETTLE_PAYMENT_ERROR","UNKNOWN_ERROR","FALSE","INHERIT","TRUE","CUSTOMER_ADDED_TO_GROUP","CUSTOMER_ADDRESS_CREATED","CUSTOMER_ADDRESS_DELETED","CUSTOMER_ADDRESS_UPDATED","CUSTOMER_DETAIL_UPDATED","CUSTOMER_EMAIL_UPDATE_REQUESTED","CUSTOMER_EMAIL_UPDATE_VERIFIED","CUSTOMER_NOTE","CUSTOMER_PASSWORD_RESET_REQUESTED","CUSTOMER_PASSWORD_RESET_VERIFIED","CUSTOMER_PASSWORD_UPDATED","CUSTOMER_REGISTERED","CUSTOMER_REMOVED_FROM_GROUP","CUSTOMER_VERIFIED","ORDER_CANCELLATION","ORDER_COUPON_APPLIED","ORDER_COUPON_REMOVED","ORDER_CUSTOMER_UPDATED","ORDER_FULFILLMENT","ORDER_FULFILLMENT_TRANSITION","ORDER_MODIFIED","ORDER_NOTE","ORDER_PAYMENT_TRANSITION","ORDER_REFUND_TRANSITION","ORDER_STATE_TRANSITION","CANCELLED","COMPLETED","FAILED","PENDING","RETRYING","RUNNING","af","ak","am","ar","as","az","be","bg","bm","bn","bo","br","bs","ca","ce","co","cs","cu","cy","da","de","de_AT","de_CH","dz","ee","el","en","en_AU","en_CA","en_GB","en_US","eo","es","es_ES","es_MX","et","eu","fa","fa_AF","ff","fi","fo","fr","fr_CA","fr_CH","fy","ga","gd","gl","gu","gv","ha","he","hi","hr","ht","hu","hy","ia","id","ig","ii","is","it","ja","jv","ka","ki","kk","kl","km","kn","ko","ks","ku","kw","ky","la","lb","lg","ln","lo","lt","lu","lv","mg","mi","mk","ml","mn","mr","ms","mt","my","nb","nd","ne","nl","nl_BE","nn","ny","om","or","os","pa","pl","ps","pt","pt_BR","pt_PT","qu","rm","rn","ro","ro_MD","ru","rw","sa","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","st","su","sv","sw","sw_CD","ta","te","tg","th","ti","tk","to","tr","tt","ug","uk","ur","uz","vi","vo","wo","xh","yi","yo","zh","zh_Hans","zh_Hant","zu","AND","OR","Daily","AverageOrderValue","OrderCount","OrderTotal","Aggregate","Regular","Seller","Authenticated","CreateAdministrator","CreateAsset","CreateCatalog","CreateChannel","CreateCollection","CreateCountry","CreateCustomer","CreateCustomerGroup","CreateFacet","CreateOrder","CreatePaymentMethod","CreateProduct","CreatePromotion","CreateSeller","CreateSettings","CreateShippingMethod","CreateStockLocation","CreateSystem","CreateTag","CreateTaxCategory","CreateTaxRate","CreateZone","DeleteAdministrator","DeleteAsset","DeleteCatalog","DeleteChannel","DeleteCollection","DeleteCountry","DeleteCustomer","DeleteCustomerGroup","DeleteFacet","DeleteOrder","DeletePaymentMethod","DeleteProduct","DeletePromotion","DeleteSeller","DeleteSettings","DeleteShippingMethod","DeleteStockLocation","DeleteSystem","DeleteTag","DeleteTaxCategory","DeleteTaxRate","DeleteZone","Owner","Public","ReadAdministrator","ReadAsset","ReadCatalog","ReadChannel","ReadCollection","ReadCountry","ReadCustomer","ReadCustomerGroup","ReadFacet","ReadOrder","ReadPaymentMethod","ReadProduct","ReadPromotion","ReadSeller","ReadSettings","ReadShippingMethod","ReadStockLocation","ReadSystem","ReadTag","ReadTaxCategory","ReadTaxRate","ReadZone","SuperAdmin","UpdateAdministrator","UpdateAsset","UpdateCatalog","UpdateChannel","UpdateCollection","UpdateCountry","UpdateCustomer","UpdateCustomerGroup","UpdateFacet","UpdateGlobalSettings","UpdateOrder","UpdatePaymentMethod","UpdateProduct","UpdatePromotion","UpdateSeller","UpdateSettings","UpdateShippingMethod","UpdateStockLocation","UpdateSystem","UpdateTag","UpdateTaxCategory","UpdateTaxRate","UpdateZone","ASC","DESC","ADJUSTMENT","ALLOCATION","CANCELLATION","RELEASE","RETURN","SALE","ProductOptionsEditorComponent_button_20_Template","rf","ctx","_r1","i0","ctx_r1","save","detailForm","pristine","invalid","ProductOptionsEditorComponent_form_22_vdr_card_2_ng_container_11_Template","optionGroup_r3","$implicit","optionGroupCustomFields","get","updatePermission","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_3_Template","optionControl_r5","item","value","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_6_Template","optionControl_r6","createdAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_9_Template","optionControl_r7","updatedAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_12_Template","optionControl_r8","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_15_Template","optionControl_r9","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_18_Template","optionControl_r10","optionCustomFields","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_Template","_r4","$event","paginationSettings","currentPage","options_r11","ngIf","itemsPerPage","length","ProductOptionsEditorComponent_form_22_vdr_card_2_Template","i_r12","index","code","getOptions","ProductOptionsEditorComponent_form_22_Template","getOptionGroups","CreateProductOptionGroupDialogComponent_ng_template_0_Template","CreateProductOptionGroupDialogComponent_ng_template_8_Template","cancel","confirm","form","CreateProductVariantDialogComponent_ng_template_0_Template","CreateProductVariantDialogComponent_vdr_form_field_3_Template","optionGroup_r1","name","options","CreateProductVariantDialogComponent_clr_alert_4_Template","CreateProductVariantDialogComponent_div_5_Template","existingVariant","sku","CreateProductVariantDialogComponent_ng_template_16_Template","_r3","product","optionGroups","_c0","_c1","OptionValueInputComponent_div_1_vdr_chip_1_Template","option_r4","ctx_r4","removeOption","i_r6","updateOption","cancelBubble","editName","isLast_r7","last","lastSelected","locked","groupName","editingIndex","OptionValueInputComponent_div_1_Template","optionValues","ProductVariantsEditorComponent_div_2_Template","group_r2","i_r3","ctx_r3","addOption","removeOptionGroup","isNew","values","ProductVariantsEditorComponent_ng_template_20_Template","variant_r5","ProductVariantsEditorComponent_ng_template_23_Template","variant_r6","ProductVariantsEditorComponent_ng_template_26_Template","variant_r7","ProductVariantsEditorComponent_ng_template_29_Template","variant_r8","ProductVariantsEditorComponent_ng_template_32_Template","variant_r9","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_vdr_chip_0_Template","option_r10","optionGroup_r11","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_ng_template_1_Template","_r12","variant_r13","setOptionToAddToVariant","addOptionToVariant","optionsToAddToVariant","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_Template","selectOption_r14","getOption","ProductVariantsEditorComponent_vdr_dt2_column_33_Template","ProductVariantsEditorComponent_ng_template_37_Template","variant_r15","price","currencyCode","ProductVariantsEditorComponent_ng_template_40_Template","variant_r16","priceWithTax","ProductVariantsEditorComponent_ng_template_43_Template","_r17","variant_r18","deleteVariant","ApplyFacetDialogComponent_ng_template_0_Template","ApplyFacetDialogComponent_ng_template_2_Template","selectValues","selectedValues","_c2","AssetDetailComponent_button_5_Template","_c3","_c4","_c5","a0","channel","_c6","channelCode","AssignProductsToChannelDialogComponent_ng_template_0_ng_container_0_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_template_1_Template","AssignProductsToChannelDialogComponent_ng_template_0_Template","productModeTitle_r1","isProductVariantMode","AssignProductsToChannelDialogComponent_ng_template_29_Template","selectedChannel","AssignProductsToChannelDialogComponent_ng_template_30_Template","AssignProductsToChannelDialogComponent_tr_33_ng_template_7_Template","row_r3","pricePreview","defaultCurrencyCode","AssignProductsToChannelDialogComponent_tr_33_ng_template_8_Template","AssignProductsToChannelDialogComponent_tr_33_Template","noChannelSelected_r4","currentChannel","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_4_Template","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_5_Template","AssignProductsToChannelDialogComponent_ng_template_35_Template","_r5","assign","noSelection_r6","BulkAddFacetValuesDialogComponent_ng_template_0_Template","BulkAddFacetValuesDialogComponent_table_7_tr_2_div_4_Template","item_r2","BulkAddFacetValuesDialogComponent_table_7_tr_2_vdr_facet_value_chip_6_Template","facetValue_r4","removeFacetValue","BulkAddFacetValuesDialogComponent_table_7_tr_2_Template","facetValues","BulkAddFacetValuesDialogComponent_table_7_Template","items","BulkAddFacetValuesDialogComponent_ng_template_8_Template","BulkAddFacetValuesDialogComponent_ng_template_10_Template","_r6","addFacetValues","facetValuesRemoved","_c7","_c8","CollectionContentsComponent_ng_container_3_Template","CollectionContentsComponent_ng_template_14_Template","variant_r1","CollectionContentsComponent_ng_template_17_Template","variant_r2","CollectionContentsComponent_ng_template_20_Template","variant_r3","CollectionContentsComponent_ng_template_23_Template","variant_r4","productId","CollectionContentsComponent_ng_template_26_Template","_c9","_c10","_c11","_c12","a1","a2","a3","totalItems","_c13","i","depth","_c14","currentStart","currentEnd","_c15","collection","_c16","rowItem","_c17","CollectionDataTableComponent_vdr_data_table_filter_presets_0_Template","filters","CollectionDataTableComponent_th_7_Template","onToggleAllClick","selectionManager","areAllCurrentItemsSelected","CollectionDataTableComponent_th_8_div_5_clr_icon_2_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_3_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_4_Template","CollectionDataTableComponent_th_8_div_5_div_5_Template","sort_r5","sortOrder","CollectionDataTableComponent_th_8_div_5_Template","toggleSortOrder","CollectionDataTableComponent_th_8_Template","column_r6","expand","align","heading","sort","CollectionDataTableComponent_tr_13_ng_container_6_Template","CollectionDataTableComponent_tr_13_ng_container_7_Template","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_2_Template","activeFilter_r8","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_3_Template","CollectionDataTableComponent_tr_13_ng_container_8_Template","activeFilters","CollectionDataTableComponent_tr_13_Template","_r7","toggleSearchFilterRow","showSearchFilterRow","visibleSortedColumns","searchComponent","template","customSearchTemplate","CollectionDataTableComponent_ng_container_15_Template","item_r9","i_r10","collectionRowTmp_r11","CollectionDataTableComponent_tr_18_Template","emptyStateLabel","CollectionDataTableComponent_vdr_items_per_page_controls_20_Template","itemsPerPageChange","emit","CollectionDataTableComponent_div_21_Template","CollectionDataTableComponent_vdr_pagination_controls_22_Template","_r13","pageChange","CollectionDataTableComponent_ng_template_23_td_2_Template","_r14","item_r15","onRowClick","activeIndex","absoluteIndex","isSelected","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_ng_container_1_Template","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_Template","componentConfig_r16","config","component","injector","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_ng_container_0_Template","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_Template","column_r17","ctx_r17","depth_r19","CollectionDataTableComponent_ng_template_23_td_3_Template","defaultComponent_r20","customComponents","CollectionDataTableComponent_ng_template_23_ng_container_5_ng_container_1_Template","CollectionDataTableComponent_ng_template_23_ng_container_5_Template","subCollection_r21","CollectionDataTableComponent_ng_template_23_Template","getSubcollections","_c18","_c19","pattern","_c20","_c21","_c22","count","_c23","standalone","CollectionDetailComponent_button_9_Template","_r2","ctx_r2","create","CollectionDetailComponent_ng_template_11_button_0_Template","assetsChanged","CollectionDetailComponent_ng_template_11_Template","CollectionDetailComponent_ng_container_24_Template","CollectionDetailComponent_ng_template_25_Template","CollectionDetailComponent_vdr_card_27_Template","entity_r5","CollectionDetailComponent_vdr_page_block_29_li_3_a_1_Template","CollectionDetailComponent_vdr_page_block_29_li_3_a_2_Template","breadcrumb_r6","CollectionDetailComponent_vdr_page_block_29_li_3_ng_container_3_Template","CollectionDetailComponent_vdr_page_block_29_li_3_Template","isFirst_r7","first","isLast_r8","CollectionDetailComponent_vdr_page_block_29_Template","entity_r9","breadcrumbs","CollectionDetailComponent_vdr_card_47_Template","customFields","CollectionDetailComponent_ng_container_60_Template","CollectionDetailComponent_ng_template_61_Template","CollectionDetailComponent_ng_container_64_Template","_r10","i_r11","removeFilter","filter_r12","getFilterDefinition","CollectionDetailComponent_div_65_button_9_Template","filter_r14","addFilter","description","CollectionDetailComponent_div_65_Template","allFilters","CollectionDetailComponent_ng_template_73_Template","_r15","toggleLivePreview","tmp_7_0","tmp_9_0","count_r16","livePreview","_c24","MoveCollectionsDialogComponent_ng_template_0_Template","MoveCollectionsDialogComponent_ng_template_11_Template","collection_r1","MoveCollectionsDialogComponent_ng_template_14_clr_icon_1_Template","depth_r3","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_2_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_Template","collection_r5","ctx_r5","toggleExpanded","expandedIds","includes","MoveCollectionsDialogComponent_ng_template_14_button_3_Template","MoveCollectionsDialogComponent_ng_template_14_Template","resolveWith","children","parentId","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_div_1_Template","item_r7","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_Template","breadcrumbs_r8","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_span_2_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_Template","MoveCollectionsDialogComponent_ng_template_17_Template","collection_r9","MoveCollectionsDialogComponent_ng_template_20_Template","collection_r10","slug","_c25","_c26","_c27","_c28","contents","_c29","contentsPage","CollectionListComponent_a_8_Template","CollectionListComponent_ng_template_12_ng_template_12_Template","collection_r3","CollectionListComponent_ng_template_12_ng_template_15_Template","collection_r4","CollectionListComponent_ng_template_12_ng_template_18_Template","CollectionListComponent_ng_template_12_ng_template_21_Template","collection_r6","position","CollectionListComponent_ng_template_12_ng_template_24_clr_icon_1_Template","depth_r7","CollectionListComponent_ng_template_12_ng_template_24_button_2_clr_icon_1_Template","CollectionListComponent_ng_template_12_ng_template_24_button_2_clr_icon_2_Template","CollectionListComponent_ng_template_12_ng_template_24_button_2_Template","_r8","CollectionListComponent_ng_template_12_ng_template_24_Template","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_ng_container_1_div_1_Template","item_r10","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_ng_container_1_Template","breadcrumbs_r11","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_span_2_Template","CollectionListComponent_ng_template_12_ng_template_27_ng_container_1_Template","CollectionListComponent_ng_template_12_ng_template_27_Template","collection_r12","CollectionListComponent_ng_template_12_ng_template_30_Template","collection_r13","CollectionListComponent_ng_template_12_ng_template_33_vdr_chip_0_Template","CollectionListComponent_ng_template_12_ng_template_33_vdr_chip_1_Template","CollectionListComponent_ng_template_12_ng_template_33_Template","collection_r14","isPrivate","CollectionListComponent_ng_template_12_ng_template_36_Template","collection_r15","CollectionListComponent_ng_template_12_vdr_dt2_custom_field_column_37_Template","customField_r16","sorts","CollectionListComponent_ng_template_12_Template","setPageNumber","setItemsPerPage","onRearrange","items$","subCollections$","itemsPerPage$","totalItems$","currentPage$","activeCollectionIndex$","searchTermControl","CollectionListComponent_ng_template_13_ng_container_0_Template","activeCollectionId$","CollectionListComponent_ng_template_13_Template","_c31","_c32","_c33","_c34","CollectionTreeNodeComponent_div_3_button_5_clr_icon_1_Template","CollectionTreeNodeComponent_div_3_button_5_clr_icon_2_Template","CollectionTreeNodeComponent_div_3_button_5_Template","expandAll","expanded","CollectionTreeNodeComponent_div_3_ng_template_6_Template","CollectionTreeNodeComponent_div_3_vdr_chip_10_Template","CollectionTreeNodeComponent_div_3_div_19_Template","CollectionTreeNodeComponent_div_3_a_24_Template","CollectionTreeNodeComponent_div_3_button_39_Template","_r9","move","hasUpdatePermission$","path","CollectionTreeNodeComponent_div_3_vdr_collection_tree_node_46_Template","activeCollectionId","CollectionTreeNodeComponent_div_3_Template","toggleSelection","getMoveListItems","i_r7","moveUp","ctx_r7","moveDown","delete","folderSpacer_r11","collectionTree","moveListItems","hasDeletePermission$","CollectionTreeComponent_vdr_collection_tree_node_0_Template","ctx_r0","ConfirmVariantDeletionDialogComponent_ng_template_0_Template","ConfirmVariantDeletionDialogComponent_li_4_Template","ConfirmVariantDeletionDialogComponent_ng_template_5_Template","CreateFacetValueDialogComponent_ng_template_0_Template","CreateFacetValueDialogComponent_ng_template_8_Template","_c35","_c36","_c37","_c38","FacetDetailComponent_button_9_Template","FacetDetailComponent_ng_template_11_button_0_Template","FacetDetailComponent_ng_template_11_Template","FacetDetailComponent_ng_container_24_Template","FacetDetailComponent_ng_template_25_Template","FacetDetailComponent_vdr_page_entity_info_28_Template","FacetDetailComponent_vdr_card_41_Template","FacetDetailComponent_vdr_card_43_ng_template_2_Template","filterControl","FacetDetailComponent_vdr_card_43_ng_container_3_ng_container_11_Template","FacetDetailComponent_vdr_card_43_ng_container_3_tr_14_td_8_Template","value_r8","customValueFields","FacetDetailComponent_vdr_card_43_ng_container_3_tr_14_Template","updateValueCode","target","deleteFacetValue","FacetDetailComponent_vdr_card_43_ng_container_3_Template","setCurrentPage","filteredValues_r9","FacetDetailComponent_vdr_card_43_button_6_Template","addFacetValue","FacetDetailComponent_vdr_card_43_Template","values$","FacetListComponent_a_8_Template","FacetListComponent_ng_template_20_Template","facet_r1","FacetListComponent_ng_template_23_Template","facet_r2","FacetListComponent_ng_template_26_Template","facet_r3","FacetListComponent_ng_template_29_Template","facet_r4","FacetListComponent_ng_template_32_Template","facet_r5","FacetListComponent_ng_template_35_vdr_chip_0_Template","FacetListComponent_ng_template_35_vdr_chip_1_Template","FacetListComponent_ng_template_35_Template","facet_r6","FacetListComponent_ng_template_38_vdr_facet_value_chip_1_Template","value_r7","FacetListComponent_ng_template_38_vdr_chip_3_Template","facet_r8","valueList","FacetListComponent_ng_template_38_button_4_ng_container_1_Template","ctx_r9","initialLimit","FacetListComponent_ng_template_38_button_4_ng_template_2_Template","FacetListComponent_ng_template_38_button_4_Template","toggleDisplayLimit","collapse_r11","displayLimit","FacetListComponent_ng_template_38_Template","FacetListComponent_vdr_dt2_custom_field_column_39_Template","customField_r12","_c39","GenerateProductVariantsComponent_div_0_Template","optionValueInputComponent_r3","handleEnter","generateVariants","GenerateProductVariantsComponent_ng_container_5_clr_alert_1_Template","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_option_3_Template","location_r6","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_Template","selectedStockLocationId","stockLocations_r7","GenerateProductVariantsComponent_ng_container_5_div_4_th_4_Template","GenerateProductVariantsComponent_ng_container_5_div_4_th_5_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_1_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_2_Template","join","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_Template","variantFormValues","enabled","variants","GenerateProductVariantsComponent_ng_container_5_div_4_Template","trackByFn","GenerateProductVariantsComponent_ng_container_5_Template","_c40","ProductVariantListComponent_vdr_page_block_0_Template","setLanguage","availableLanguages$","contentLanguage$","ProductVariantListComponent_ng_template_11_Template","ProductVariantListComponent_ng_template_14_Template","ProductVariantListComponent_ng_template_17_Template","ProductVariantListComponent_ng_template_20_img_1_Template","asset_r6","ProductVariantListComponent_ng_template_20_ng_template_2_Template","ProductVariantListComponent_ng_template_20_Template","imagePlaceholder_r8","featuredAsset","ProductVariantListComponent_ng_template_23_Template","ProductVariantListComponent_ng_template_26_Template","variant_r10","ProductVariantListComponent_ng_template_29_vdr_chip_0_Template","ProductVariantListComponent_ng_template_29_vdr_chip_1_Template","ProductVariantListComponent_ng_template_29_Template","variant_r11","ProductVariantListComponent_ng_template_32_Template","variant_r12","ProductVariantListComponent_ng_template_35_Template","ProductVariantListComponent_ng_template_38_vdr_chip_0_span_4_Template","stockLevel_r14","stockAllocated","ProductVariantListComponent_ng_template_38_vdr_chip_0_Template","stockLocation","stockOnHand","ProductVariantListComponent_ng_template_38_Template","stockLevels","ProductVariantListComponent_vdr_dt2_custom_field_column_39_Template","field_r16","_c41","_c42","_c43","_c44","ProductDetailComponent_button_10_Template","createVariantsConfig","ProductDetailComponent_ng_template_12_button_0_Template","ProductDetailComponent_ng_template_12_Template","updatePermissions","ProductDetailComponent_clr_toggle_wrapper_21_Template","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_ng_container_3_vdr_chip_1_Template","channel_r7","removeFromChannel","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_ng_container_3_Template","isDefaultChannel","ProductDetailComponent_ng_container_22_vdr_card_1_vdr_form_item_2_Template","assignToChannel","productChannels$","ProductDetailComponent_ng_container_22_vdr_card_1_Template","ProductDetailComponent_ng_container_22_Template","ProductDetailComponent_vdr_card_24_vdr_chip_3_Template","optionGroup_r8","ProductDetailComponent_vdr_card_24_a_6_Template","ProductDetailComponent_vdr_card_24_Template","entity","ProductDetailComponent_vdr_facet_value_chip_28_Template","facetValue_r10","removeProductFacetValue","ProductDetailComponent_button_31_Template","_r11","selectProductFacetValue","ProductDetailComponent_vdr_card_32_Template","entity_r12","ProductDetailComponent_div_43_Template","ProductDetailComponent_vdr_card_55_Template","ProductDetailComponent_div_63_Template","ProductDetailComponent_ng_template_65_Template","ProductDetailComponent_div_67_Template","_c45","ProductListComponent_a_8_Template","ProductListComponent_ng_template_24_Template","product_r1","ProductListComponent_ng_template_27_Template","product_r2","ProductListComponent_ng_template_30_Template","product_r3","ProductListComponent_ng_template_33_img_1_Template","asset_r4","ProductListComponent_ng_template_33_ng_template_2_Template","ProductListComponent_ng_template_33_Template","product_r5","imagePlaceholder_r6","ProductListComponent_ng_template_36_Template","product_r7","ProductListComponent_ng_template_39_Template","product_r8","ProductListComponent_ng_template_42_vdr_chip_0_Template","ProductListComponent_ng_template_42_vdr_chip_1_Template","ProductListComponent_ng_template_42_Template","product_r9","ProductListComponent_ng_template_45_Template","product_r10","variantList","ProductListComponent_vdr_dt2_custom_field_column_46_Template","customField_r11","ctx_r11","_c47","rate","_c48","VariantPriceDetailComponent_div_3_Template","taxRate$","VariantPriceDetailComponent_div_4_Template","grossPrice$","VariantPriceStrategyDetailComponent_div_0_Template","variant","ProductVariantQuickJumpComponent_ng_select_0_ng_template_3_Template","item_r3","ProductVariantQuickJumpComponent_ng_select_0_Template","selectedVariantId","onSelect","variants$","searchFn","_c49","_c50","ProductVariantDetailComponent_ng_container_4_vdr_language_selector_1_Template","availableLanguages_r3","isNew$","languageCode$","ProductVariantDetailComponent_ng_container_4_Template","ProductVariantDetailComponent_button_9_Template","stockLevelsForm","pricesForm","ProductVariantDetailComponent_form_11_clr_toggle_wrapper_6_Template","ProductVariantDetailComponent_form_11_vdr_card_7_vdr_chip_3_Template","option_r6","optionGroupCode","groupId","optionName","ProductVariantDetailComponent_form_11_vdr_card_7_a_6_Template","ProductVariantDetailComponent_form_11_vdr_card_7_Template","ProductVariantDetailComponent_form_11_vdr_facet_value_chip_11_Template","facetValue_r9","ProductVariantDetailComponent_form_11_button_14_Template","selectFacetValue","ProductVariantDetailComponent_form_11_vdr_page_entity_info_16_Template","entity_r11","ProductVariantDetailComponent_form_11_vdr_card_30_Template","ProductVariantDetailComponent_form_11_option_41_Template","taxCategory_r12","ProductVariantDetailComponent_form_11_div_43_div_7_Template","price_r14","toggleDeletePrice","channelDefaultCurrencyCode","ProductVariantDetailComponent_form_11_div_43_Template","undefined","controls","channelPriceIncludesTax$","ProductVariantDetailComponent_form_11_ng_container_46_div_1_button_8_Template","currencyCode_r16","addPriceInCurrency","ProductVariantDetailComponent_form_11_ng_container_46_div_1_Template","unusedCurrencyCodes_r17","ProductVariantDetailComponent_form_11_ng_container_46_Template","ProductVariantDetailComponent_form_11_div_76_Template","tmp_5_0","tmp_6_0","tmp_10_0","stockLevel_r18","ProductVariantDetailComponent_form_11_ng_container_77_div_1_button_8_Template","_r19","stockLocation_r20","addStockLocation","ProductVariantDetailComponent_form_11_ng_container_77_div_1_Template","unusedStockLocations_r21","ProductVariantDetailComponent_form_11_ng_container_77_Template","ProductVariantDetailComponent_form_11_Template","assetChanges","tmp_42_0","facetValues$","entity$","assets","taxCategories$","unusedCurrencyCodes$","inventoryIsNotTracked","globalOutOfStockThreshold","unusedStockLocation$","ProductVariantsTableComponent_ng_container_10_Template","ProductVariantsTableComponent_tr_22_ng_container_1_img_4_Template","featuredAsset_r2","ProductVariantsTableComponent_tr_22_ng_container_1_ng_template_5_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_container_17_Template","option_r3","formGroup_r4","optionGroupName","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_21_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_22_Template","ProductVariantsTableComponent_tr_22_ng_container_1_Template","placeholder_r7","getFeaturedAsset","channelPriceIncludesTax","ProductVariantsTableComponent_tr_22_Template","formGroupMap","UpdateProductOptionDialogComponent_ng_template_0_Template","UpdateProductOptionDialogComponent_section_14_Template","customFieldsForm","UpdateProductOptionDialogComponent_ng_template_15_Template","update","nameInput_r4","codeInput_r5","replaceLast","search","replace","lastIndex","lastIndexOf","substr","ProductDetailService","constructor","dataService","this","getTaxCategories","settings","mapSingle","data","taxCategories","pipe","shareReplay","createProductWithVariants","input","languageCode","createProduct$","createProduct","nonEmptyOptionGroups","groups","filter","g","createOptionGroups$","createProductOptionGroups","forkJoin","mergeMap","map","optionGroup","addOptionGroupToProduct","optionGroupId","of","v","optionIds","option","find","o","Error","og","reduce","flat","createProductVariants","stockLocationId","c","normalizeString","translations","createProductOptionGroup","variantData","notNullOrUndefined","stock","updateProduct","updateOptions","autoUpdate","productInput","variantsInput","updateOperations","updateVariantsInput","getProductVariantsForProduct","productVariants","push","productOldName","findTranslation","productNewName","currentVariantName","variantInput","existingVariantInput","variantTranslation","updateProductVariants","updateProductOptions","inputs","autoUpdateProductNames","updateProductVariantNames$","replacementMap","Map","newOptionName","oldOptionName","set","variantsToUpdate","size","oldOptionNames","Array","from","keys","variantName","some","updatedVariantName","updateProductOption","deleteProductVariant","switchMap","result","getProduct","single$","throwError","message","static","ɵfac","t","i1","ɵprov","token","factory","providedIn","ProductOptionsEditorComponent","BaseDetailComponent","route","router","serverConfigService","permissionsService","productDetailService","formBuilder","changeDetector","notificationService","super","autoUpdateVariantNames","getCustomFieldConfig","ngOnInit","optionGroups$","snapshot","tap","group","UntypedFormGroup","UntypedFormArray","init","$product","combineLatest","take","updatedProductOptionInputs","optionGroupForm","dirty","optionGroupEntity","getUpdatedOptionGroup","updateProductOptionGroup","optionForm","getUpdatedOption","subscribe","markAsPristine","markForCheck","success","marker","err","error","optionGroupFormGroup","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","optionFormGroup","setFormValues","groupsForm","groupTranslation","groupForm","setOptionGroupForm","setCustomFieldsForm","optionsForm","array","addControl","optionTranslation","setOptionForm","formGroup","currentTranslation","customValueFieldsGroup","hash","field","setCustomFieldFormValues","control","setValue","i1$1","i2","ɵcmp","type","selectors","features","decls","vars","consts","dependencies","i3","i3$1","i5","styles","changeDetection","CreateProductOptionGroupDialogComponent","Validators","required","updateCode","nameControl","codeControl","CreateProductVariantDialogComponent","record","FormControl","valueChanges","Object","every","entries","groupCode","optionId","getGroupIdFromCode","Number","getGroupCodeFromId","i5$1","OPTION_VALUE_INPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","OptionValueInputComponent","multi","formValue","add","EventEmitter","remove","edit","disabled","isFocussed","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchFn","setDisabledState","isDisabled","writeValue","obj","focus","textArea","nativeElement","event","optionValue","nameInputs","setTimeout","newName","handleKey","key","addOptionValue","preventDefault","removeLastOption","handleBlur","parseInputIntoOptions","unique","split","s","trim","viewQuery","ElementRef","_t","outputs","textArea_r2","GeneratedVariant","ProductVariantsEditorComponent","modalService","formValueChanged","optionsChanged","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","Subject","paramMap","getDefaultUiLanguage","getActiveChannel","activeChannel","product$","getProductVariantsOptions","parent","startWith","term","toLowerCase","p","allUsedOptionIds","allUsedOptionGroupIds","page","onFormChanged","variantInfo","canDeactivate","addOptionGroup","fromComponent","locals","EMPTY","next","usedByVariantsCount","dialog","title","body","translationVars","buttons","label","returnValue","val","removeOptionGroupFromProduct","force","__typename","addOptionToGroup","productOptionGroupId","createProductOption","deleteProductOption","variantId","response","createNewVariant","ProductVariantsResolver","BaseEntityResolver","mapStream","createRoutes","pageService","PageComponent","locationId","breadcrumb","getPageTabRoutes","redirectTo","link","CanDeactivateDetailGuard","resolve","inject","DataService","params","createResolveData","productOptionsEditorBreadcrumb","ApplyFacetDialogComponent","ngAfterViewInit","selector","FacetValueSelectorComponent","ASSET_DETAIL_QUERY","gql","ASSET_FRAGMENT","TAG_FRAGMENT","AssetDetailComponent","TypedBaseDetailComponent","FormGroup","tags","getCustomFieldsDefaults","ngOnDestroy","destroy","onAssetChange","markAsDirty","updateAsset","AssetListComponent","BaseListComponent","searchTerm$","BehaviorSubject","filterByTags$","uploading","setQueryFn","args","getAssetList","refetchOnChannelChange","skip","searchTerm","contains","tagsOperator","paginationConfig$","debounceTime","takeUntil","destroy$","refresh","allTags$","getTagList","filesSelected","files","createAssets","finalize","successCount","deleteAssets","showModalAndDelete","r","assetIds","res","i5$2","AssignProductsToChannelDialogComponent","productVariantIds","priceFactorControl","UntypedFormControl","selectedChannelIdControl","activeChannelId$","client","userStatus","activeChannelId","allChannels$","getChannels","channels","availableChannels","ids","selectChannel","variantsPreview$","getTopVariants","factor","channelIds","assignVariantsToChannel","channelId","priceFactor","assignProductsToChannel","productIds","_this","_asyncToGenerator","lastValueFrom","getProductVariants","filterOperator","in","noSelection_r7","currentChannelIds","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS","UPDATE_PRODUCTS_BULK","UPDATE_VARIANTS_BULK","BulkAddFacetValuesDialogComponent","changeDetectorRef","mode","state","fetchData$","query","products","subscription","unsubscribe","facetValueId","fv","selectedFacetValueIds","mutate","facetValueIds","CollectionContentsComponent","previewUpdatedFilters","filterTermControl","isLoading","collectionIdChange$","parentIdChange$","filterChanges$","inheritFiltersChanges$","contentsCurrentPage$","queryParamMap","qpm","distinctUntilChanged","contentsItemsPerPage$","perPage","filterTerm$","setContentsPageNumber","asObservable","inheritFilters","collection$","filterTerm","filterClause","previewCollectionVariants","catchError","getCollectionContents","contents$","contentsTotalItems$","ngOnChanges","changes","collectionId","currentValue","updatedFilters","complete","setParam","setContentsItemsPerPage","navigate","relativeTo","queryParams","n","queryParamsHandling","replaceUrl","contentQueries","dirIndex","TemplateRef","headerTemplate","CollectionDataTableComponent","DataTable2Component","localStorageService","dragDrop","changeOrder","dragRefs","sortPredicate","dropList","getSortedItems","subCollections","allCollections","subCollectionMatches","forEach","collectionRowList","removeItem","ref","toArray","dropContainer","_dragRef","_withDropContainer","_dropListRef","addItem","onDrop","isTopLevel","pageIndexOffset","parentIndex","findIndex","adjustedIndex","currentIndex","splice","previousIndex","adjustedPreviousIndex","i2$1","CdkDropList","CdkDrag","ngContentSelectors","onColumnReorder","onColumnsReset","disableSelect","selection","uiLanguage$","sortedColumns","COLLECTION_DETAIL_QUERY","COLLECTION_FRAGMENT","CollectionDetailComponent","unicodePatternValidator","visible","filterRemoved$","getCollectionFilters","collectionFilters","filtersFormArray","inheritFiltersControl","inheritFilters$","updatedFilters$","merge","statusChanges","touched","mapOperationsToInputs","_filter","arg","arguments","parentId$","pm","f","updateSlug","nameValue","slugControl","currentSlugIsEmpty","collectionFilter","filtersArray","argsHash","output","getConfigArgValue","removeAt","markAsTouched","getUpdatedCollection","createCollection","category","updateCollection","contentsComponent","JSON","stringify","patchValue","formArray","clear","featuredAssetId","operations","formValueOperations","j","encodeConfigArgValue","updateButton_r17","private_r18","noInherit_r19","CollectionBreadcrumbPipe","transform","slice","ɵpipe","pure","MoveCollectionsDialogComponent","i18nService","expandedIds$","getCollectionsResult","getCollections","topLevelOnly","refetch","rootCollectionId$","collections","rootCollectionId","translate","deleteCollectionsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","getItemName","bulkDelete","deleteCollections","moveCollectionsBulkAction","icon","onClick","hostComponent","clearSelection","ModalService","NotificationService","closable","moveCollection","assignCollectionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","collectionIds","assignCollectionsToChannel","removeCollectionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","removeCollectionsFromChannel","duplicateCollectionsBulkAction","DuplicateEntityDialogComponent","entities","entityName","getEntityName","CollectionListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","kind","filterField","toFilterInput","eq","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetCollectionListDocument","getItems","setVariables","_take","createFilterInput","createSortInput","refreshListOnChanges","activeCollectionTitle$","match","closeContents","setContentLanguage","CollectionTreeService","allMoveListItems","_rearrange$","_delete$","rearrange$","delete$","setCollectionTree","tree","resetMoveList","calculateAllMoveListItems","ancestorIdPath","has","newParentId","container","onMove","onDelete","visit","node","parentPath","concat","child","Set","CollectionTreeNodeComponent","collectionTreeService","parentName","permissions$","permissions","perms","selectionChanges$","expandAllChange","previousValue","drop","moveItemInArray","arrayToTree","nodes","currentState","topLevelNodes","mappedArr","currentStateMap","treeToMap","nodeMap","hasOwnProperty","mappedElem","CollectionTreeComponent","rearrange","deleteCollection","ConfirmVariantDeletionDialogComponent","CreateFacetValueDialogComponent","facetId","FACET_DETAIL_QUERY","FACET_WITH_VALUE_LIST_FRAGMENT","FacetDetailComponent","facet","fetchFacetValues","currentCode","valueId","customValueFieldIsSet","createFacetValues","facetForm","newFacet","getUpdatedFacet","createFacet","valuesFormRecord","updatedFacetInput","updateFacet","updatedValues","getUpdatedFacetValues","updateFacetValues","deleted","GetFacetDetailDocument","deleteFacetValues","newPage","facetValueListOptions","SortOrder$1","setFacetValueFormValues","currentValuesFormGroup","valueTranslation","valueControl","fieldDef","fieldValue","facetFormGroup","valuesFormGroup","updateButton_r11","private_r12","deleteFacetsBulkAction","shouldRetryItem","retrying","deleteFacets","assignFacetsToChannelBulkAction","facetIds","assignFacetsToChannel","removeFacetsFromChannelBulkAction","removeFacetsFromChannel","isErrorResult","removeFacetsFromChannelBulkAction2","getTranslationVars","getChannelCodeFromUserStatus","iconClass","isVisible","currentChannelIsNotDefault","res2","removedCount","errors","errorIds","result2","notRemovedCount","then","duplicateFacetsBulkAction","FACET_LIST_QUERY","FacetListComponent","GetFacetListDocument","facets","DEFAULT_VARIANT_CODE","GenerateProductVariantsComponent","variantsChange","stockLocations$","GetStockLocationListDocument","stockLocations","groupNameInputs","sum","generateAllCombinations","nonNullable","copyFromDefault","onFormChange","copyValuesToPristine","optionValueInputComponent","stopPropagation","formControl","correspondingFormControl","emitEvent","variantsToCreate","prop","ProductVariantListComponent","hideLanguageSelect","addFilters","inputType","addSorts","ProductVariantListQueryDocument","filterParam","_and","filterInput","_or","dataTableId","GET_PRODUCT_DETAIL","PRODUCT_DETAIL_FRAGMENT","ProductDetailComponent","productFacetValues$","formFacetValueIdChanges$","getFacetValues","DEFAULT_CHANNEL_CODE","removeProductsFromChannel","assignVariantToChannel","removeVariantFromChannel","removeVariantsFromChannel","displayFacetValueModal","productGroup","currentFacetValueIds","newProduct","getUpdatedProduct","console","updateSlugAfterSave","productFormGroup","results","firstResult","isUpdateMutation","tmp_18_0","updateButton_r14","variantList_r15","deleteProductsBulkAction","deleteProducts","assignProductsToChannelBulkAction","isMultiChannel","removeProductsFromChannelBulkAction","assignFacetValuesToProductsBulkAction","duplicateProductsBulkAction","ProductListComponent","jobQueueService","pendingSearchIndexUpdates","FacetValueFormInputComponent","serializeValue","deserializeValue","getLabel","ProductListQueryDocument","rebuildSearchIndex","reindex","info","addJob","job","time","Intl","NumberFormat","format","duration","indexedItemCount","deleteProduct","delay","VariantPriceDetailComponent","priceChange$","taxCategoryIdChange$","taxRates$","getTaxRatesSimple","taxRates","activeChannel$","taxCategoryId","defaultTaxZone","applicableRate","taxRate","zone","Math","round","priceIncludesTax","VariantPriceStrategyDetailComponent","calculatedPriceDiffersFromInputPrice","defaultPrice","prices","ProductVariantQuickJumpComponent","GetProductVariantsQuickJumpDocument","tmp_0_0","ProductVariantDetailComponent","customOptionFields","useGlobalOutOfStockThreshold","outOfStockThreshold","trackInventory","getGlobalSettings","globalSettings","globalTrackInventory","result$","availableCurrencyCodes$","availableCurrencyCodes","currencyCodes","usedIds","l","pricesIncludeTax","stockLevels$","switchMapTo","innerObservable","resultSelector","isFunction","deleteFormControl","stockLocationName","pick","getUpdatedVariant","ProductVariantUpdateMutationDocument","taxCategory","stockLevel","variantFormGroup","assignProductVariantsToChannelBulkAction","removeProductVariantsFromChannelBulkAction","removeProductVariantsFromChannel","deleteProductVariantsBulkAction","deleteProductVariants","assignFacetValuesToProductVariantsBulkAction","ProductVariantsTableComponent","buildFormGroupMap","pendingAssetChanges","controlGroup","None","paginationConfig","UpdateProductOptionDialogComponent","updateVariantName","codeInputTouched","productOption","activeLanguage","cfCurrentTranslation","CatalogModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetProductDetailDocument","entityKey","getBreadcrumbs","GetProductVariantDetailDocument","variables","CollectionDetailQueryDocument","AssetDetailQueryDocument","ɵmod","ɵinj","providers","ROUTES","useFactory","deps","PageService","imports","SharedModule","RouterModule","forChild","PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT","PRODUCT_LIST_QUERY","PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_DETAIL_QUERY","PRODUCT_VARIANT_UPDATE_MUTATION","PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_LIST_QUERY"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/common/lib/generated-types.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-catalog.mjs","../node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StockMovementType = exports.SortOrder = exports.Permission = exports.OrderType = exports.MetricType = exports.MetricInterval = exports.LogicalOperator = exports.LanguageCode = exports.JobState = exports.HistoryEntryType = exports.GlobalFlag = exports.ErrorCode = exports.DeletionResult = exports.CurrencyCode = exports.AssetType = exports.AdjustmentType = void 0;\nvar AdjustmentType;\n(function (AdjustmentType) {\n    AdjustmentType[\"DISTRIBUTED_ORDER_PROMOTION\"] = \"DISTRIBUTED_ORDER_PROMOTION\";\n    AdjustmentType[\"OTHER\"] = \"OTHER\";\n    AdjustmentType[\"PROMOTION\"] = \"PROMOTION\";\n})(AdjustmentType || (exports.AdjustmentType = AdjustmentType = {}));\nvar AssetType;\n(function (AssetType) {\n    AssetType[\"BINARY\"] = \"BINARY\";\n    AssetType[\"IMAGE\"] = \"IMAGE\";\n    AssetType[\"VIDEO\"] = \"VIDEO\";\n})(AssetType || (exports.AssetType = AssetType = {}));\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nvar CurrencyCode;\n(function (CurrencyCode) {\n    /** United Arab Emirates dirham */\n    CurrencyCode[\"AED\"] = \"AED\";\n    /** Afghan afghani */\n    CurrencyCode[\"AFN\"] = \"AFN\";\n    /** Albanian lek */\n    CurrencyCode[\"ALL\"] = \"ALL\";\n    /** Armenian dram */\n    CurrencyCode[\"AMD\"] = \"AMD\";\n    /** Netherlands Antillean guilder */\n    CurrencyCode[\"ANG\"] = \"ANG\";\n    /** Angolan kwanza */\n    CurrencyCode[\"AOA\"] = \"AOA\";\n    /** Argentine peso */\n    CurrencyCode[\"ARS\"] = \"ARS\";\n    /** Australian dollar */\n    CurrencyCode[\"AUD\"] = \"AUD\";\n    /** Aruban florin */\n    CurrencyCode[\"AWG\"] = \"AWG\";\n    /** Azerbaijani manat */\n    CurrencyCode[\"AZN\"] = \"AZN\";\n    /** Bosnia and Herzegovina convertible mark */\n    CurrencyCode[\"BAM\"] = \"BAM\";\n    /** Barbados dollar */\n    CurrencyCode[\"BBD\"] = \"BBD\";\n    /** Bangladeshi taka */\n    CurrencyCode[\"BDT\"] = \"BDT\";\n    /** Bulgarian lev */\n    CurrencyCode[\"BGN\"] = \"BGN\";\n    /** Bahraini dinar */\n    CurrencyCode[\"BHD\"] = \"BHD\";\n    /** Burundian franc */\n    CurrencyCode[\"BIF\"] = \"BIF\";\n    /** Bermudian dollar */\n    CurrencyCode[\"BMD\"] = \"BMD\";\n    /** Brunei dollar */\n    CurrencyCode[\"BND\"] = \"BND\";\n    /** Boliviano */\n    CurrencyCode[\"BOB\"] = \"BOB\";\n    /** Brazilian real */\n    CurrencyCode[\"BRL\"] = \"BRL\";\n    /** Bahamian dollar */\n    CurrencyCode[\"BSD\"] = \"BSD\";\n    /** Bhutanese ngultrum */\n    CurrencyCode[\"BTN\"] = \"BTN\";\n    /** Botswana pula */\n    CurrencyCode[\"BWP\"] = \"BWP\";\n    /** Belarusian ruble */\n    CurrencyCode[\"BYN\"] = \"BYN\";\n    /** Belize dollar */\n    CurrencyCode[\"BZD\"] = \"BZD\";\n    /** Canadian dollar */\n    CurrencyCode[\"CAD\"] = \"CAD\";\n    /** Congolese franc */\n    CurrencyCode[\"CDF\"] = \"CDF\";\n    /** Swiss franc */\n    CurrencyCode[\"CHF\"] = \"CHF\";\n    /** Chilean peso */\n    CurrencyCode[\"CLP\"] = \"CLP\";\n    /** Renminbi (Chinese) yuan */\n    CurrencyCode[\"CNY\"] = \"CNY\";\n    /** Colombian peso */\n    CurrencyCode[\"COP\"] = \"COP\";\n    /** Costa Rican colon */\n    CurrencyCode[\"CRC\"] = \"CRC\";\n    /** Cuban convertible peso */\n    CurrencyCode[\"CUC\"] = \"CUC\";\n    /** Cuban peso */\n    CurrencyCode[\"CUP\"] = \"CUP\";\n    /** Cape Verde escudo */\n    CurrencyCode[\"CVE\"] = \"CVE\";\n    /** Czech koruna */\n    CurrencyCode[\"CZK\"] = \"CZK\";\n    /** Djiboutian franc */\n    CurrencyCode[\"DJF\"] = \"DJF\";\n    /** Danish krone */\n    CurrencyCode[\"DKK\"] = \"DKK\";\n    /** Dominican peso */\n    CurrencyCode[\"DOP\"] = \"DOP\";\n    /** Algerian dinar */\n    CurrencyCode[\"DZD\"] = \"DZD\";\n    /** Egyptian pound */\n    CurrencyCode[\"EGP\"] = \"EGP\";\n    /** Eritrean nakfa */\n    CurrencyCode[\"ERN\"] = \"ERN\";\n    /** Ethiopian birr */\n    CurrencyCode[\"ETB\"] = \"ETB\";\n    /** Euro */\n    CurrencyCode[\"EUR\"] = \"EUR\";\n    /** Fiji dollar */\n    CurrencyCode[\"FJD\"] = \"FJD\";\n    /** Falkland Islands pound */\n    CurrencyCode[\"FKP\"] = \"FKP\";\n    /** Pound sterling */\n    CurrencyCode[\"GBP\"] = \"GBP\";\n    /** Georgian lari */\n    CurrencyCode[\"GEL\"] = \"GEL\";\n    /** Ghanaian cedi */\n    CurrencyCode[\"GHS\"] = \"GHS\";\n    /** Gibraltar pound */\n    CurrencyCode[\"GIP\"] = \"GIP\";\n    /** Gambian dalasi */\n    CurrencyCode[\"GMD\"] = \"GMD\";\n    /** Guinean franc */\n    CurrencyCode[\"GNF\"] = \"GNF\";\n    /** Guatemalan quetzal */\n    CurrencyCode[\"GTQ\"] = \"GTQ\";\n    /** Guyanese dollar */\n    CurrencyCode[\"GYD\"] = \"GYD\";\n    /** Hong Kong dollar */\n    CurrencyCode[\"HKD\"] = \"HKD\";\n    /** Honduran lempira */\n    CurrencyCode[\"HNL\"] = \"HNL\";\n    /** Croatian kuna */\n    CurrencyCode[\"HRK\"] = \"HRK\";\n    /** Haitian gourde */\n    CurrencyCode[\"HTG\"] = \"HTG\";\n    /** Hungarian forint */\n    CurrencyCode[\"HUF\"] = \"HUF\";\n    /** Indonesian rupiah */\n    CurrencyCode[\"IDR\"] = \"IDR\";\n    /** Israeli new shekel */\n    CurrencyCode[\"ILS\"] = \"ILS\";\n    /** Indian rupee */\n    CurrencyCode[\"INR\"] = \"INR\";\n    /** Iraqi dinar */\n    CurrencyCode[\"IQD\"] = \"IQD\";\n    /** Iranian rial */\n    CurrencyCode[\"IRR\"] = \"IRR\";\n    /** Icelandic króna */\n    CurrencyCode[\"ISK\"] = \"ISK\";\n    /** Jamaican dollar */\n    CurrencyCode[\"JMD\"] = \"JMD\";\n    /** Jordanian dinar */\n    CurrencyCode[\"JOD\"] = \"JOD\";\n    /** Japanese yen */\n    CurrencyCode[\"JPY\"] = \"JPY\";\n    /** Kenyan shilling */\n    CurrencyCode[\"KES\"] = \"KES\";\n    /** Kyrgyzstani som */\n    CurrencyCode[\"KGS\"] = \"KGS\";\n    /** Cambodian riel */\n    CurrencyCode[\"KHR\"] = \"KHR\";\n    /** Comoro franc */\n    CurrencyCode[\"KMF\"] = \"KMF\";\n    /** North Korean won */\n    CurrencyCode[\"KPW\"] = \"KPW\";\n    /** South Korean won */\n    CurrencyCode[\"KRW\"] = \"KRW\";\n    /** Kuwaiti dinar */\n    CurrencyCode[\"KWD\"] = \"KWD\";\n    /** Cayman Islands dollar */\n    CurrencyCode[\"KYD\"] = \"KYD\";\n    /** Kazakhstani tenge */\n    CurrencyCode[\"KZT\"] = \"KZT\";\n    /** Lao kip */\n    CurrencyCode[\"LAK\"] = \"LAK\";\n    /** Lebanese pound */\n    CurrencyCode[\"LBP\"] = \"LBP\";\n    /** Sri Lankan rupee */\n    CurrencyCode[\"LKR\"] = \"LKR\";\n    /** Liberian dollar */\n    CurrencyCode[\"LRD\"] = \"LRD\";\n    /** Lesotho loti */\n    CurrencyCode[\"LSL\"] = \"LSL\";\n    /** Libyan dinar */\n    CurrencyCode[\"LYD\"] = \"LYD\";\n    /** Moroccan dirham */\n    CurrencyCode[\"MAD\"] = \"MAD\";\n    /** Moldovan leu */\n    CurrencyCode[\"MDL\"] = \"MDL\";\n    /** Malagasy ariary */\n    CurrencyCode[\"MGA\"] = \"MGA\";\n    /** Macedonian denar */\n    CurrencyCode[\"MKD\"] = \"MKD\";\n    /** Myanmar kyat */\n    CurrencyCode[\"MMK\"] = \"MMK\";\n    /** Mongolian tögrög */\n    CurrencyCode[\"MNT\"] = \"MNT\";\n    /** Macanese pataca */\n    CurrencyCode[\"MOP\"] = \"MOP\";\n    /** Mauritanian ouguiya */\n    CurrencyCode[\"MRU\"] = \"MRU\";\n    /** Mauritian rupee */\n    CurrencyCode[\"MUR\"] = \"MUR\";\n    /** Maldivian rufiyaa */\n    CurrencyCode[\"MVR\"] = \"MVR\";\n    /** Malawian kwacha */\n    CurrencyCode[\"MWK\"] = \"MWK\";\n    /** Mexican peso */\n    CurrencyCode[\"MXN\"] = \"MXN\";\n    /** Malaysian ringgit */\n    CurrencyCode[\"MYR\"] = \"MYR\";\n    /** Mozambican metical */\n    CurrencyCode[\"MZN\"] = \"MZN\";\n    /** Namibian dollar */\n    CurrencyCode[\"NAD\"] = \"NAD\";\n    /** Nigerian naira */\n    CurrencyCode[\"NGN\"] = \"NGN\";\n    /** Nicaraguan córdoba */\n    CurrencyCode[\"NIO\"] = \"NIO\";\n    /** Norwegian krone */\n    CurrencyCode[\"NOK\"] = \"NOK\";\n    /** Nepalese rupee */\n    CurrencyCode[\"NPR\"] = \"NPR\";\n    /** New Zealand dollar */\n    CurrencyCode[\"NZD\"] = \"NZD\";\n    /** Omani rial */\n    CurrencyCode[\"OMR\"] = \"OMR\";\n    /** Panamanian balboa */\n    CurrencyCode[\"PAB\"] = \"PAB\";\n    /** Peruvian sol */\n    CurrencyCode[\"PEN\"] = \"PEN\";\n    /** Papua New Guinean kina */\n    CurrencyCode[\"PGK\"] = \"PGK\";\n    /** Philippine peso */\n    CurrencyCode[\"PHP\"] = \"PHP\";\n    /** Pakistani rupee */\n    CurrencyCode[\"PKR\"] = \"PKR\";\n    /** Polish złoty */\n    CurrencyCode[\"PLN\"] = \"PLN\";\n    /** Paraguayan guaraní */\n    CurrencyCode[\"PYG\"] = \"PYG\";\n    /** Qatari riyal */\n    CurrencyCode[\"QAR\"] = \"QAR\";\n    /** Romanian leu */\n    CurrencyCode[\"RON\"] = \"RON\";\n    /** Serbian dinar */\n    CurrencyCode[\"RSD\"] = \"RSD\";\n    /** Russian ruble */\n    CurrencyCode[\"RUB\"] = \"RUB\";\n    /** Rwandan franc */\n    CurrencyCode[\"RWF\"] = \"RWF\";\n    /** Saudi riyal */\n    CurrencyCode[\"SAR\"] = \"SAR\";\n    /** Solomon Islands dollar */\n    CurrencyCode[\"SBD\"] = \"SBD\";\n    /** Seychelles rupee */\n    CurrencyCode[\"SCR\"] = \"SCR\";\n    /** Sudanese pound */\n    CurrencyCode[\"SDG\"] = \"SDG\";\n    /** Swedish krona/kronor */\n    CurrencyCode[\"SEK\"] = \"SEK\";\n    /** Singapore dollar */\n    CurrencyCode[\"SGD\"] = \"SGD\";\n    /** Saint Helena pound */\n    CurrencyCode[\"SHP\"] = \"SHP\";\n    /** Sierra Leonean leone */\n    CurrencyCode[\"SLL\"] = \"SLL\";\n    /** Somali shilling */\n    CurrencyCode[\"SOS\"] = \"SOS\";\n    /** Surinamese dollar */\n    CurrencyCode[\"SRD\"] = \"SRD\";\n    /** South Sudanese pound */\n    CurrencyCode[\"SSP\"] = \"SSP\";\n    /** São Tomé and Príncipe dobra */\n    CurrencyCode[\"STN\"] = \"STN\";\n    /** Salvadoran colón */\n    CurrencyCode[\"SVC\"] = \"SVC\";\n    /** Syrian pound */\n    CurrencyCode[\"SYP\"] = \"SYP\";\n    /** Swazi lilangeni */\n    CurrencyCode[\"SZL\"] = \"SZL\";\n    /** Thai baht */\n    CurrencyCode[\"THB\"] = \"THB\";\n    /** Tajikistani somoni */\n    CurrencyCode[\"TJS\"] = \"TJS\";\n    /** Turkmenistan manat */\n    CurrencyCode[\"TMT\"] = \"TMT\";\n    /** Tunisian dinar */\n    CurrencyCode[\"TND\"] = \"TND\";\n    /** Tongan paʻanga */\n    CurrencyCode[\"TOP\"] = \"TOP\";\n    /** Turkish lira */\n    CurrencyCode[\"TRY\"] = \"TRY\";\n    /** Trinidad and Tobago dollar */\n    CurrencyCode[\"TTD\"] = \"TTD\";\n    /** New Taiwan dollar */\n    CurrencyCode[\"TWD\"] = \"TWD\";\n    /** Tanzanian shilling */\n    CurrencyCode[\"TZS\"] = \"TZS\";\n    /** Ukrainian hryvnia */\n    CurrencyCode[\"UAH\"] = \"UAH\";\n    /** Ugandan shilling */\n    CurrencyCode[\"UGX\"] = \"UGX\";\n    /** United States dollar */\n    CurrencyCode[\"USD\"] = \"USD\";\n    /** Uruguayan peso */\n    CurrencyCode[\"UYU\"] = \"UYU\";\n    /** Uzbekistan som */\n    CurrencyCode[\"UZS\"] = \"UZS\";\n    /** Venezuelan bolívar soberano */\n    CurrencyCode[\"VES\"] = \"VES\";\n    /** Vietnamese đồng */\n    CurrencyCode[\"VND\"] = \"VND\";\n    /** Vanuatu vatu */\n    CurrencyCode[\"VUV\"] = \"VUV\";\n    /** Samoan tala */\n    CurrencyCode[\"WST\"] = \"WST\";\n    /** CFA franc BEAC */\n    CurrencyCode[\"XAF\"] = \"XAF\";\n    /** East Caribbean dollar */\n    CurrencyCode[\"XCD\"] = \"XCD\";\n    /** CFA franc BCEAO */\n    CurrencyCode[\"XOF\"] = \"XOF\";\n    /** CFP franc (franc Pacifique) */\n    CurrencyCode[\"XPF\"] = \"XPF\";\n    /** Yemeni rial */\n    CurrencyCode[\"YER\"] = \"YER\";\n    /** South African rand */\n    CurrencyCode[\"ZAR\"] = \"ZAR\";\n    /** Zambian kwacha */\n    CurrencyCode[\"ZMW\"] = \"ZMW\";\n    /** Zimbabwean dollar */\n    CurrencyCode[\"ZWL\"] = \"ZWL\";\n})(CurrencyCode || (exports.CurrencyCode = CurrencyCode = {}));\nvar DeletionResult;\n(function (DeletionResult) {\n    /** The entity was successfully deleted */\n    DeletionResult[\"DELETED\"] = \"DELETED\";\n    /** Deletion did not take place, reason given in message */\n    DeletionResult[\"NOT_DELETED\"] = \"NOT_DELETED\";\n})(DeletionResult || (exports.DeletionResult = DeletionResult = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ALREADY_REFUNDED_ERROR\"] = \"ALREADY_REFUNDED_ERROR\";\n    ErrorCode[\"CANCEL_ACTIVE_ORDER_ERROR\"] = \"CANCEL_ACTIVE_ORDER_ERROR\";\n    ErrorCode[\"CANCEL_PAYMENT_ERROR\"] = \"CANCEL_PAYMENT_ERROR\";\n    ErrorCode[\"CHANNEL_DEFAULT_LANGUAGE_ERROR\"] = \"CHANNEL_DEFAULT_LANGUAGE_ERROR\";\n    ErrorCode[\"COUPON_CODE_EXPIRED_ERROR\"] = \"COUPON_CODE_EXPIRED_ERROR\";\n    ErrorCode[\"COUPON_CODE_INVALID_ERROR\"] = \"COUPON_CODE_INVALID_ERROR\";\n    ErrorCode[\"COUPON_CODE_LIMIT_ERROR\"] = \"COUPON_CODE_LIMIT_ERROR\";\n    ErrorCode[\"CREATE_FULFILLMENT_ERROR\"] = \"CREATE_FULFILLMENT_ERROR\";\n    ErrorCode[\"DUPLICATE_ENTITY_ERROR\"] = \"DUPLICATE_ENTITY_ERROR\";\n    ErrorCode[\"EMAIL_ADDRESS_CONFLICT_ERROR\"] = \"EMAIL_ADDRESS_CONFLICT_ERROR\";\n    ErrorCode[\"EMPTY_ORDER_LINE_SELECTION_ERROR\"] = \"EMPTY_ORDER_LINE_SELECTION_ERROR\";\n    ErrorCode[\"FACET_IN_USE_ERROR\"] = \"FACET_IN_USE_ERROR\";\n    ErrorCode[\"FULFILLMENT_STATE_TRANSITION_ERROR\"] = \"FULFILLMENT_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"GUEST_CHECKOUT_ERROR\"] = \"GUEST_CHECKOUT_ERROR\";\n    ErrorCode[\"INELIGIBLE_SHIPPING_METHOD_ERROR\"] = \"INELIGIBLE_SHIPPING_METHOD_ERROR\";\n    ErrorCode[\"INSUFFICIENT_STOCK_ERROR\"] = \"INSUFFICIENT_STOCK_ERROR\";\n    ErrorCode[\"INSUFFICIENT_STOCK_ON_HAND_ERROR\"] = \"INSUFFICIENT_STOCK_ON_HAND_ERROR\";\n    ErrorCode[\"INVALID_CREDENTIALS_ERROR\"] = \"INVALID_CREDENTIALS_ERROR\";\n    ErrorCode[\"INVALID_FULFILLMENT_HANDLER_ERROR\"] = \"INVALID_FULFILLMENT_HANDLER_ERROR\";\n    ErrorCode[\"ITEMS_ALREADY_FULFILLED_ERROR\"] = \"ITEMS_ALREADY_FULFILLED_ERROR\";\n    ErrorCode[\"LANGUAGE_NOT_AVAILABLE_ERROR\"] = \"LANGUAGE_NOT_AVAILABLE_ERROR\";\n    ErrorCode[\"MANUAL_PAYMENT_STATE_ERROR\"] = \"MANUAL_PAYMENT_STATE_ERROR\";\n    ErrorCode[\"MIME_TYPE_ERROR\"] = \"MIME_TYPE_ERROR\";\n    ErrorCode[\"MISSING_CONDITIONS_ERROR\"] = \"MISSING_CONDITIONS_ERROR\";\n    ErrorCode[\"MULTIPLE_ORDER_ERROR\"] = \"MULTIPLE_ORDER_ERROR\";\n    ErrorCode[\"NATIVE_AUTH_STRATEGY_ERROR\"] = \"NATIVE_AUTH_STRATEGY_ERROR\";\n    ErrorCode[\"NEGATIVE_QUANTITY_ERROR\"] = \"NEGATIVE_QUANTITY_ERROR\";\n    ErrorCode[\"NOTHING_TO_REFUND_ERROR\"] = \"NOTHING_TO_REFUND_ERROR\";\n    ErrorCode[\"NO_ACTIVE_ORDER_ERROR\"] = \"NO_ACTIVE_ORDER_ERROR\";\n    ErrorCode[\"NO_CHANGES_SPECIFIED_ERROR\"] = \"NO_CHANGES_SPECIFIED_ERROR\";\n    ErrorCode[\"ORDER_LIMIT_ERROR\"] = \"ORDER_LIMIT_ERROR\";\n    ErrorCode[\"ORDER_MODIFICATION_ERROR\"] = \"ORDER_MODIFICATION_ERROR\";\n    ErrorCode[\"ORDER_MODIFICATION_STATE_ERROR\"] = \"ORDER_MODIFICATION_STATE_ERROR\";\n    ErrorCode[\"ORDER_STATE_TRANSITION_ERROR\"] = \"ORDER_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"PAYMENT_METHOD_MISSING_ERROR\"] = \"PAYMENT_METHOD_MISSING_ERROR\";\n    ErrorCode[\"PAYMENT_ORDER_MISMATCH_ERROR\"] = \"PAYMENT_ORDER_MISMATCH_ERROR\";\n    ErrorCode[\"PAYMENT_STATE_TRANSITION_ERROR\"] = \"PAYMENT_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"PRODUCT_OPTION_IN_USE_ERROR\"] = \"PRODUCT_OPTION_IN_USE_ERROR\";\n    ErrorCode[\"QUANTITY_TOO_GREAT_ERROR\"] = \"QUANTITY_TOO_GREAT_ERROR\";\n    ErrorCode[\"REFUND_AMOUNT_ERROR\"] = \"REFUND_AMOUNT_ERROR\";\n    ErrorCode[\"REFUND_ORDER_STATE_ERROR\"] = \"REFUND_ORDER_STATE_ERROR\";\n    ErrorCode[\"REFUND_PAYMENT_ID_MISSING_ERROR\"] = \"REFUND_PAYMENT_ID_MISSING_ERROR\";\n    ErrorCode[\"REFUND_STATE_TRANSITION_ERROR\"] = \"REFUND_STATE_TRANSITION_ERROR\";\n    ErrorCode[\"SETTLE_PAYMENT_ERROR\"] = \"SETTLE_PAYMENT_ERROR\";\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));\nvar GlobalFlag;\n(function (GlobalFlag) {\n    GlobalFlag[\"FALSE\"] = \"FALSE\";\n    GlobalFlag[\"INHERIT\"] = \"INHERIT\";\n    GlobalFlag[\"TRUE\"] = \"TRUE\";\n})(GlobalFlag || (exports.GlobalFlag = GlobalFlag = {}));\nvar HistoryEntryType;\n(function (HistoryEntryType) {\n    HistoryEntryType[\"CUSTOMER_ADDED_TO_GROUP\"] = \"CUSTOMER_ADDED_TO_GROUP\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_CREATED\"] = \"CUSTOMER_ADDRESS_CREATED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_DELETED\"] = \"CUSTOMER_ADDRESS_DELETED\";\n    HistoryEntryType[\"CUSTOMER_ADDRESS_UPDATED\"] = \"CUSTOMER_ADDRESS_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_DETAIL_UPDATED\"] = \"CUSTOMER_DETAIL_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_REQUESTED\"] = \"CUSTOMER_EMAIL_UPDATE_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_EMAIL_UPDATE_VERIFIED\"] = \"CUSTOMER_EMAIL_UPDATE_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_NOTE\"] = \"CUSTOMER_NOTE\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_REQUESTED\"] = \"CUSTOMER_PASSWORD_RESET_REQUESTED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_RESET_VERIFIED\"] = \"CUSTOMER_PASSWORD_RESET_VERIFIED\";\n    HistoryEntryType[\"CUSTOMER_PASSWORD_UPDATED\"] = \"CUSTOMER_PASSWORD_UPDATED\";\n    HistoryEntryType[\"CUSTOMER_REGISTERED\"] = \"CUSTOMER_REGISTERED\";\n    HistoryEntryType[\"CUSTOMER_REMOVED_FROM_GROUP\"] = \"CUSTOMER_REMOVED_FROM_GROUP\";\n    HistoryEntryType[\"CUSTOMER_VERIFIED\"] = \"CUSTOMER_VERIFIED\";\n    HistoryEntryType[\"ORDER_CANCELLATION\"] = \"ORDER_CANCELLATION\";\n    HistoryEntryType[\"ORDER_COUPON_APPLIED\"] = \"ORDER_COUPON_APPLIED\";\n    HistoryEntryType[\"ORDER_COUPON_REMOVED\"] = \"ORDER_COUPON_REMOVED\";\n    HistoryEntryType[\"ORDER_CUSTOMER_UPDATED\"] = \"ORDER_CUSTOMER_UPDATED\";\n    HistoryEntryType[\"ORDER_FULFILLMENT\"] = \"ORDER_FULFILLMENT\";\n    HistoryEntryType[\"ORDER_FULFILLMENT_TRANSITION\"] = \"ORDER_FULFILLMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_MODIFIED\"] = \"ORDER_MODIFIED\";\n    HistoryEntryType[\"ORDER_NOTE\"] = \"ORDER_NOTE\";\n    HistoryEntryType[\"ORDER_PAYMENT_TRANSITION\"] = \"ORDER_PAYMENT_TRANSITION\";\n    HistoryEntryType[\"ORDER_REFUND_TRANSITION\"] = \"ORDER_REFUND_TRANSITION\";\n    HistoryEntryType[\"ORDER_STATE_TRANSITION\"] = \"ORDER_STATE_TRANSITION\";\n})(HistoryEntryType || (exports.HistoryEntryType = HistoryEntryType = {}));\n/**\n * @description\n * The state of a Job in the JobQueue\n *\n * @docsCategory common\n */\nvar JobState;\n(function (JobState) {\n    JobState[\"CANCELLED\"] = \"CANCELLED\";\n    JobState[\"COMPLETED\"] = \"COMPLETED\";\n    JobState[\"FAILED\"] = \"FAILED\";\n    JobState[\"PENDING\"] = \"PENDING\";\n    JobState[\"RETRYING\"] = \"RETRYING\";\n    JobState[\"RUNNING\"] = \"RUNNING\";\n})(JobState || (exports.JobState = JobState = {}));\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nvar LanguageCode;\n(function (LanguageCode) {\n    /** Afrikaans */\n    LanguageCode[\"af\"] = \"af\";\n    /** Akan */\n    LanguageCode[\"ak\"] = \"ak\";\n    /** Amharic */\n    LanguageCode[\"am\"] = \"am\";\n    /** Arabic */\n    LanguageCode[\"ar\"] = \"ar\";\n    /** Assamese */\n    LanguageCode[\"as\"] = \"as\";\n    /** Azerbaijani */\n    LanguageCode[\"az\"] = \"az\";\n    /** Belarusian */\n    LanguageCode[\"be\"] = \"be\";\n    /** Bulgarian */\n    LanguageCode[\"bg\"] = \"bg\";\n    /** Bambara */\n    LanguageCode[\"bm\"] = \"bm\";\n    /** Bangla */\n    LanguageCode[\"bn\"] = \"bn\";\n    /** Tibetan */\n    LanguageCode[\"bo\"] = \"bo\";\n    /** Breton */\n    LanguageCode[\"br\"] = \"br\";\n    /** Bosnian */\n    LanguageCode[\"bs\"] = \"bs\";\n    /** Catalan */\n    LanguageCode[\"ca\"] = \"ca\";\n    /** Chechen */\n    LanguageCode[\"ce\"] = \"ce\";\n    /** Corsican */\n    LanguageCode[\"co\"] = \"co\";\n    /** Czech */\n    LanguageCode[\"cs\"] = \"cs\";\n    /** Church Slavic */\n    LanguageCode[\"cu\"] = \"cu\";\n    /** Welsh */\n    LanguageCode[\"cy\"] = \"cy\";\n    /** Danish */\n    LanguageCode[\"da\"] = \"da\";\n    /** German */\n    LanguageCode[\"de\"] = \"de\";\n    /** Austrian German */\n    LanguageCode[\"de_AT\"] = \"de_AT\";\n    /** Swiss High German */\n    LanguageCode[\"de_CH\"] = \"de_CH\";\n    /** Dzongkha */\n    LanguageCode[\"dz\"] = \"dz\";\n    /** Ewe */\n    LanguageCode[\"ee\"] = \"ee\";\n    /** Greek */\n    LanguageCode[\"el\"] = \"el\";\n    /** English */\n    LanguageCode[\"en\"] = \"en\";\n    /** Australian English */\n    LanguageCode[\"en_AU\"] = \"en_AU\";\n    /** Canadian English */\n    LanguageCode[\"en_CA\"] = \"en_CA\";\n    /** British English */\n    LanguageCode[\"en_GB\"] = \"en_GB\";\n    /** American English */\n    LanguageCode[\"en_US\"] = \"en_US\";\n    /** Esperanto */\n    LanguageCode[\"eo\"] = \"eo\";\n    /** Spanish */\n    LanguageCode[\"es\"] = \"es\";\n    /** European Spanish */\n    LanguageCode[\"es_ES\"] = \"es_ES\";\n    /** Mexican Spanish */\n    LanguageCode[\"es_MX\"] = \"es_MX\";\n    /** Estonian */\n    LanguageCode[\"et\"] = \"et\";\n    /** Basque */\n    LanguageCode[\"eu\"] = \"eu\";\n    /** Persian */\n    LanguageCode[\"fa\"] = \"fa\";\n    /** Dari */\n    LanguageCode[\"fa_AF\"] = \"fa_AF\";\n    /** Fulah */\n    LanguageCode[\"ff\"] = \"ff\";\n    /** Finnish */\n    LanguageCode[\"fi\"] = \"fi\";\n    /** Faroese */\n    LanguageCode[\"fo\"] = \"fo\";\n    /** French */\n    LanguageCode[\"fr\"] = \"fr\";\n    /** Canadian French */\n    LanguageCode[\"fr_CA\"] = \"fr_CA\";\n    /** Swiss French */\n    LanguageCode[\"fr_CH\"] = \"fr_CH\";\n    /** Western Frisian */\n    LanguageCode[\"fy\"] = \"fy\";\n    /** Irish */\n    LanguageCode[\"ga\"] = \"ga\";\n    /** Scottish Gaelic */\n    LanguageCode[\"gd\"] = \"gd\";\n    /** Galician */\n    LanguageCode[\"gl\"] = \"gl\";\n    /** Gujarati */\n    LanguageCode[\"gu\"] = \"gu\";\n    /** Manx */\n    LanguageCode[\"gv\"] = \"gv\";\n    /** Hausa */\n    LanguageCode[\"ha\"] = \"ha\";\n    /** Hebrew */\n    LanguageCode[\"he\"] = \"he\";\n    /** Hindi */\n    LanguageCode[\"hi\"] = \"hi\";\n    /** Croatian */\n    LanguageCode[\"hr\"] = \"hr\";\n    /** Haitian Creole */\n    LanguageCode[\"ht\"] = \"ht\";\n    /** Hungarian */\n    LanguageCode[\"hu\"] = \"hu\";\n    /** Armenian */\n    LanguageCode[\"hy\"] = \"hy\";\n    /** Interlingua */\n    LanguageCode[\"ia\"] = \"ia\";\n    /** Indonesian */\n    LanguageCode[\"id\"] = \"id\";\n    /** Igbo */\n    LanguageCode[\"ig\"] = \"ig\";\n    /** Sichuan Yi */\n    LanguageCode[\"ii\"] = \"ii\";\n    /** Icelandic */\n    LanguageCode[\"is\"] = \"is\";\n    /** Italian */\n    LanguageCode[\"it\"] = \"it\";\n    /** Japanese */\n    LanguageCode[\"ja\"] = \"ja\";\n    /** Javanese */\n    LanguageCode[\"jv\"] = \"jv\";\n    /** Georgian */\n    LanguageCode[\"ka\"] = \"ka\";\n    /** Kikuyu */\n    LanguageCode[\"ki\"] = \"ki\";\n    /** Kazakh */\n    LanguageCode[\"kk\"] = \"kk\";\n    /** Kalaallisut */\n    LanguageCode[\"kl\"] = \"kl\";\n    /** Khmer */\n    LanguageCode[\"km\"] = \"km\";\n    /** Kannada */\n    LanguageCode[\"kn\"] = \"kn\";\n    /** Korean */\n    LanguageCode[\"ko\"] = \"ko\";\n    /** Kashmiri */\n    LanguageCode[\"ks\"] = \"ks\";\n    /** Kurdish */\n    LanguageCode[\"ku\"] = \"ku\";\n    /** Cornish */\n    LanguageCode[\"kw\"] = \"kw\";\n    /** Kyrgyz */\n    LanguageCode[\"ky\"] = \"ky\";\n    /** Latin */\n    LanguageCode[\"la\"] = \"la\";\n    /** Luxembourgish */\n    LanguageCode[\"lb\"] = \"lb\";\n    /** Ganda */\n    LanguageCode[\"lg\"] = \"lg\";\n    /** Lingala */\n    LanguageCode[\"ln\"] = \"ln\";\n    /** Lao */\n    LanguageCode[\"lo\"] = \"lo\";\n    /** Lithuanian */\n    LanguageCode[\"lt\"] = \"lt\";\n    /** Luba-Katanga */\n    LanguageCode[\"lu\"] = \"lu\";\n    /** Latvian */\n    LanguageCode[\"lv\"] = \"lv\";\n    /** Malagasy */\n    LanguageCode[\"mg\"] = \"mg\";\n    /** Maori */\n    LanguageCode[\"mi\"] = \"mi\";\n    /** Macedonian */\n    LanguageCode[\"mk\"] = \"mk\";\n    /** Malayalam */\n    LanguageCode[\"ml\"] = \"ml\";\n    /** Mongolian */\n    LanguageCode[\"mn\"] = \"mn\";\n    /** Marathi */\n    LanguageCode[\"mr\"] = \"mr\";\n    /** Malay */\n    LanguageCode[\"ms\"] = \"ms\";\n    /** Maltese */\n    LanguageCode[\"mt\"] = \"mt\";\n    /** Burmese */\n    LanguageCode[\"my\"] = \"my\";\n    /** Norwegian Bokmål */\n    LanguageCode[\"nb\"] = \"nb\";\n    /** North Ndebele */\n    LanguageCode[\"nd\"] = \"nd\";\n    /** Nepali */\n    LanguageCode[\"ne\"] = \"ne\";\n    /** Dutch */\n    LanguageCode[\"nl\"] = \"nl\";\n    /** Flemish */\n    LanguageCode[\"nl_BE\"] = \"nl_BE\";\n    /** Norwegian Nynorsk */\n    LanguageCode[\"nn\"] = \"nn\";\n    /** Nyanja */\n    LanguageCode[\"ny\"] = \"ny\";\n    /** Oromo */\n    LanguageCode[\"om\"] = \"om\";\n    /** Odia */\n    LanguageCode[\"or\"] = \"or\";\n    /** Ossetic */\n    LanguageCode[\"os\"] = \"os\";\n    /** Punjabi */\n    LanguageCode[\"pa\"] = \"pa\";\n    /** Polish */\n    LanguageCode[\"pl\"] = \"pl\";\n    /** Pashto */\n    LanguageCode[\"ps\"] = \"ps\";\n    /** Portuguese */\n    LanguageCode[\"pt\"] = \"pt\";\n    /** Brazilian Portuguese */\n    LanguageCode[\"pt_BR\"] = \"pt_BR\";\n    /** European Portuguese */\n    LanguageCode[\"pt_PT\"] = \"pt_PT\";\n    /** Quechua */\n    LanguageCode[\"qu\"] = \"qu\";\n    /** Romansh */\n    LanguageCode[\"rm\"] = \"rm\";\n    /** Rundi */\n    LanguageCode[\"rn\"] = \"rn\";\n    /** Romanian */\n    LanguageCode[\"ro\"] = \"ro\";\n    /** Moldavian */\n    LanguageCode[\"ro_MD\"] = \"ro_MD\";\n    /** Russian */\n    LanguageCode[\"ru\"] = \"ru\";\n    /** Kinyarwanda */\n    LanguageCode[\"rw\"] = \"rw\";\n    /** Sanskrit */\n    LanguageCode[\"sa\"] = \"sa\";\n    /** Sindhi */\n    LanguageCode[\"sd\"] = \"sd\";\n    /** Northern Sami */\n    LanguageCode[\"se\"] = \"se\";\n    /** Sango */\n    LanguageCode[\"sg\"] = \"sg\";\n    /** Sinhala */\n    LanguageCode[\"si\"] = \"si\";\n    /** Slovak */\n    LanguageCode[\"sk\"] = \"sk\";\n    /** Slovenian */\n    LanguageCode[\"sl\"] = \"sl\";\n    /** Samoan */\n    LanguageCode[\"sm\"] = \"sm\";\n    /** Shona */\n    LanguageCode[\"sn\"] = \"sn\";\n    /** Somali */\n    LanguageCode[\"so\"] = \"so\";\n    /** Albanian */\n    LanguageCode[\"sq\"] = \"sq\";\n    /** Serbian */\n    LanguageCode[\"sr\"] = \"sr\";\n    /** Southern Sotho */\n    LanguageCode[\"st\"] = \"st\";\n    /** Sundanese */\n    LanguageCode[\"su\"] = \"su\";\n    /** Swedish */\n    LanguageCode[\"sv\"] = \"sv\";\n    /** Swahili */\n    LanguageCode[\"sw\"] = \"sw\";\n    /** Congo Swahili */\n    LanguageCode[\"sw_CD\"] = \"sw_CD\";\n    /** Tamil */\n    LanguageCode[\"ta\"] = \"ta\";\n    /** Telugu */\n    LanguageCode[\"te\"] = \"te\";\n    /** Tajik */\n    LanguageCode[\"tg\"] = \"tg\";\n    /** Thai */\n    LanguageCode[\"th\"] = \"th\";\n    /** Tigrinya */\n    LanguageCode[\"ti\"] = \"ti\";\n    /** Turkmen */\n    LanguageCode[\"tk\"] = \"tk\";\n    /** Tongan */\n    LanguageCode[\"to\"] = \"to\";\n    /** Turkish */\n    LanguageCode[\"tr\"] = \"tr\";\n    /** Tatar */\n    LanguageCode[\"tt\"] = \"tt\";\n    /** Uyghur */\n    LanguageCode[\"ug\"] = \"ug\";\n    /** Ukrainian */\n    LanguageCode[\"uk\"] = \"uk\";\n    /** Urdu */\n    LanguageCode[\"ur\"] = \"ur\";\n    /** Uzbek */\n    LanguageCode[\"uz\"] = \"uz\";\n    /** Vietnamese */\n    LanguageCode[\"vi\"] = \"vi\";\n    /** Volapük */\n    LanguageCode[\"vo\"] = \"vo\";\n    /** Wolof */\n    LanguageCode[\"wo\"] = \"wo\";\n    /** Xhosa */\n    LanguageCode[\"xh\"] = \"xh\";\n    /** Yiddish */\n    LanguageCode[\"yi\"] = \"yi\";\n    /** Yoruba */\n    LanguageCode[\"yo\"] = \"yo\";\n    /** Chinese */\n    LanguageCode[\"zh\"] = \"zh\";\n    /** Simplified Chinese */\n    LanguageCode[\"zh_Hans\"] = \"zh_Hans\";\n    /** Traditional Chinese */\n    LanguageCode[\"zh_Hant\"] = \"zh_Hant\";\n    /** Zulu */\n    LanguageCode[\"zu\"] = \"zu\";\n})(LanguageCode || (exports.LanguageCode = LanguageCode = {}));\nvar LogicalOperator;\n(function (LogicalOperator) {\n    LogicalOperator[\"AND\"] = \"AND\";\n    LogicalOperator[\"OR\"] = \"OR\";\n})(LogicalOperator || (exports.LogicalOperator = LogicalOperator = {}));\nvar MetricInterval;\n(function (MetricInterval) {\n    MetricInterval[\"Daily\"] = \"Daily\";\n})(MetricInterval || (exports.MetricInterval = MetricInterval = {}));\nvar MetricType;\n(function (MetricType) {\n    MetricType[\"AverageOrderValue\"] = \"AverageOrderValue\";\n    MetricType[\"OrderCount\"] = \"OrderCount\";\n    MetricType[\"OrderTotal\"] = \"OrderTotal\";\n})(MetricType || (exports.MetricType = MetricType = {}));\nvar OrderType;\n(function (OrderType) {\n    OrderType[\"Aggregate\"] = \"Aggregate\";\n    OrderType[\"Regular\"] = \"Regular\";\n    OrderType[\"Seller\"] = \"Seller\";\n})(OrderType || (exports.OrderType = OrderType = {}));\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * ## Understanding Permission.Owner\n *\n * `Permission.Owner` is a special permission which is used in some Vendure resolvers to indicate that that resolver should only\n * be accessible to the \"owner\" of that resource.\n *\n * For example, the Shop API `activeCustomer` query resolver should only return the Customer object for the \"owner\" of that Customer, i.e.\n * based on the activeUserId of the current session. As a result, the resolver code looks like this:\n *\n * @example\n * ```TypeScript\n * \\@Query()\n * \\@Allow(Permission.Owner)\n * async activeCustomer(\\@Ctx() ctx: RequestContext): Promise<Customer | undefined> {\n *   const userId = ctx.activeUserId;\n *   if (userId) {\n *     return this.customerService.findOneByUserId(ctx, userId);\n *   }\n * }\n * ```\n *\n * Here we can see that the \"ownership\" must be enforced by custom logic inside the resolver. Since \"ownership\" cannot be defined generally\n * nor statically encoded at build-time, any resolvers using `Permission.Owner` **must** include logic to enforce that only the owner\n * of the resource has access. If not, then it is the equivalent of using `Permission.Public`.\n *\n *\n * @docsCategory common\n */\nvar Permission;\n(function (Permission) {\n    /** Authenticated means simply that the user is logged in */\n    Permission[\"Authenticated\"] = \"Authenticated\";\n    /** Grants permission to create Administrator */\n    Permission[\"CreateAdministrator\"] = \"CreateAdministrator\";\n    /** Grants permission to create Asset */\n    Permission[\"CreateAsset\"] = \"CreateAsset\";\n    /** Grants permission to create Products, Facets, Assets, Collections */\n    Permission[\"CreateCatalog\"] = \"CreateCatalog\";\n    /** Grants permission to create Channel */\n    Permission[\"CreateChannel\"] = \"CreateChannel\";\n    /** Grants permission to create Collection */\n    Permission[\"CreateCollection\"] = \"CreateCollection\";\n    /** Grants permission to create Country */\n    Permission[\"CreateCountry\"] = \"CreateCountry\";\n    /** Grants permission to create Customer */\n    Permission[\"CreateCustomer\"] = \"CreateCustomer\";\n    /** Grants permission to create CustomerGroup */\n    Permission[\"CreateCustomerGroup\"] = \"CreateCustomerGroup\";\n    /** Grants permission to create Facet */\n    Permission[\"CreateFacet\"] = \"CreateFacet\";\n    /** Grants permission to create Order */\n    Permission[\"CreateOrder\"] = \"CreateOrder\";\n    /** Grants permission to create PaymentMethod */\n    Permission[\"CreatePaymentMethod\"] = \"CreatePaymentMethod\";\n    /** Grants permission to create Product */\n    Permission[\"CreateProduct\"] = \"CreateProduct\";\n    /** Grants permission to create Promotion */\n    Permission[\"CreatePromotion\"] = \"CreatePromotion\";\n    /** Grants permission to create Seller */\n    Permission[\"CreateSeller\"] = \"CreateSeller\";\n    /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"CreateSettings\"] = \"CreateSettings\";\n    /** Grants permission to create ShippingMethod */\n    Permission[\"CreateShippingMethod\"] = \"CreateShippingMethod\";\n    /** Grants permission to create StockLocation */\n    Permission[\"CreateStockLocation\"] = \"CreateStockLocation\";\n    /** Grants permission to create System */\n    Permission[\"CreateSystem\"] = \"CreateSystem\";\n    /** Grants permission to create Tag */\n    Permission[\"CreateTag\"] = \"CreateTag\";\n    /** Grants permission to create TaxCategory */\n    Permission[\"CreateTaxCategory\"] = \"CreateTaxCategory\";\n    /** Grants permission to create TaxRate */\n    Permission[\"CreateTaxRate\"] = \"CreateTaxRate\";\n    /** Grants permission to create Zone */\n    Permission[\"CreateZone\"] = \"CreateZone\";\n    /** Grants permission to delete Administrator */\n    Permission[\"DeleteAdministrator\"] = \"DeleteAdministrator\";\n    /** Grants permission to delete Asset */\n    Permission[\"DeleteAsset\"] = \"DeleteAsset\";\n    /** Grants permission to delete Products, Facets, Assets, Collections */\n    Permission[\"DeleteCatalog\"] = \"DeleteCatalog\";\n    /** Grants permission to delete Channel */\n    Permission[\"DeleteChannel\"] = \"DeleteChannel\";\n    /** Grants permission to delete Collection */\n    Permission[\"DeleteCollection\"] = \"DeleteCollection\";\n    /** Grants permission to delete Country */\n    Permission[\"DeleteCountry\"] = \"DeleteCountry\";\n    /** Grants permission to delete Customer */\n    Permission[\"DeleteCustomer\"] = \"DeleteCustomer\";\n    /** Grants permission to delete CustomerGroup */\n    Permission[\"DeleteCustomerGroup\"] = \"DeleteCustomerGroup\";\n    /** Grants permission to delete Facet */\n    Permission[\"DeleteFacet\"] = \"DeleteFacet\";\n    /** Grants permission to delete Order */\n    Permission[\"DeleteOrder\"] = \"DeleteOrder\";\n    /** Grants permission to delete PaymentMethod */\n    Permission[\"DeletePaymentMethod\"] = \"DeletePaymentMethod\";\n    /** Grants permission to delete Product */\n    Permission[\"DeleteProduct\"] = \"DeleteProduct\";\n    /** Grants permission to delete Promotion */\n    Permission[\"DeletePromotion\"] = \"DeletePromotion\";\n    /** Grants permission to delete Seller */\n    Permission[\"DeleteSeller\"] = \"DeleteSeller\";\n    /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"DeleteSettings\"] = \"DeleteSettings\";\n    /** Grants permission to delete ShippingMethod */\n    Permission[\"DeleteShippingMethod\"] = \"DeleteShippingMethod\";\n    /** Grants permission to delete StockLocation */\n    Permission[\"DeleteStockLocation\"] = \"DeleteStockLocation\";\n    /** Grants permission to delete System */\n    Permission[\"DeleteSystem\"] = \"DeleteSystem\";\n    /** Grants permission to delete Tag */\n    Permission[\"DeleteTag\"] = \"DeleteTag\";\n    /** Grants permission to delete TaxCategory */\n    Permission[\"DeleteTaxCategory\"] = \"DeleteTaxCategory\";\n    /** Grants permission to delete TaxRate */\n    Permission[\"DeleteTaxRate\"] = \"DeleteTaxRate\";\n    /** Grants permission to delete Zone */\n    Permission[\"DeleteZone\"] = \"DeleteZone\";\n    /** Owner means the user owns this entity, e.g. a Customer's own Order */\n    Permission[\"Owner\"] = \"Owner\";\n    /** Public means any unauthenticated user may perform the operation */\n    Permission[\"Public\"] = \"Public\";\n    /** Grants permission to read Administrator */\n    Permission[\"ReadAdministrator\"] = \"ReadAdministrator\";\n    /** Grants permission to read Asset */\n    Permission[\"ReadAsset\"] = \"ReadAsset\";\n    /** Grants permission to read Products, Facets, Assets, Collections */\n    Permission[\"ReadCatalog\"] = \"ReadCatalog\";\n    /** Grants permission to read Channel */\n    Permission[\"ReadChannel\"] = \"ReadChannel\";\n    /** Grants permission to read Collection */\n    Permission[\"ReadCollection\"] = \"ReadCollection\";\n    /** Grants permission to read Country */\n    Permission[\"ReadCountry\"] = \"ReadCountry\";\n    /** Grants permission to read Customer */\n    Permission[\"ReadCustomer\"] = \"ReadCustomer\";\n    /** Grants permission to read CustomerGroup */\n    Permission[\"ReadCustomerGroup\"] = \"ReadCustomerGroup\";\n    /** Grants permission to read Facet */\n    Permission[\"ReadFacet\"] = \"ReadFacet\";\n    /** Grants permission to read Order */\n    Permission[\"ReadOrder\"] = \"ReadOrder\";\n    /** Grants permission to read PaymentMethod */\n    Permission[\"ReadPaymentMethod\"] = \"ReadPaymentMethod\";\n    /** Grants permission to read Product */\n    Permission[\"ReadProduct\"] = \"ReadProduct\";\n    /** Grants permission to read Promotion */\n    Permission[\"ReadPromotion\"] = \"ReadPromotion\";\n    /** Grants permission to read Seller */\n    Permission[\"ReadSeller\"] = \"ReadSeller\";\n    /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"ReadSettings\"] = \"ReadSettings\";\n    /** Grants permission to read ShippingMethod */\n    Permission[\"ReadShippingMethod\"] = \"ReadShippingMethod\";\n    /** Grants permission to read StockLocation */\n    Permission[\"ReadStockLocation\"] = \"ReadStockLocation\";\n    /** Grants permission to read System */\n    Permission[\"ReadSystem\"] = \"ReadSystem\";\n    /** Grants permission to read Tag */\n    Permission[\"ReadTag\"] = \"ReadTag\";\n    /** Grants permission to read TaxCategory */\n    Permission[\"ReadTaxCategory\"] = \"ReadTaxCategory\";\n    /** Grants permission to read TaxRate */\n    Permission[\"ReadTaxRate\"] = \"ReadTaxRate\";\n    /** Grants permission to read Zone */\n    Permission[\"ReadZone\"] = \"ReadZone\";\n    /** SuperAdmin has unrestricted access to all operations */\n    Permission[\"SuperAdmin\"] = \"SuperAdmin\";\n    /** Grants permission to update Administrator */\n    Permission[\"UpdateAdministrator\"] = \"UpdateAdministrator\";\n    /** Grants permission to update Asset */\n    Permission[\"UpdateAsset\"] = \"UpdateAsset\";\n    /** Grants permission to update Products, Facets, Assets, Collections */\n    Permission[\"UpdateCatalog\"] = \"UpdateCatalog\";\n    /** Grants permission to update Channel */\n    Permission[\"UpdateChannel\"] = \"UpdateChannel\";\n    /** Grants permission to update Collection */\n    Permission[\"UpdateCollection\"] = \"UpdateCollection\";\n    /** Grants permission to update Country */\n    Permission[\"UpdateCountry\"] = \"UpdateCountry\";\n    /** Grants permission to update Customer */\n    Permission[\"UpdateCustomer\"] = \"UpdateCustomer\";\n    /** Grants permission to update CustomerGroup */\n    Permission[\"UpdateCustomerGroup\"] = \"UpdateCustomerGroup\";\n    /** Grants permission to update Facet */\n    Permission[\"UpdateFacet\"] = \"UpdateFacet\";\n    /** Grants permission to update GlobalSettings */\n    Permission[\"UpdateGlobalSettings\"] = \"UpdateGlobalSettings\";\n    /** Grants permission to update Order */\n    Permission[\"UpdateOrder\"] = \"UpdateOrder\";\n    /** Grants permission to update PaymentMethod */\n    Permission[\"UpdatePaymentMethod\"] = \"UpdatePaymentMethod\";\n    /** Grants permission to update Product */\n    Permission[\"UpdateProduct\"] = \"UpdateProduct\";\n    /** Grants permission to update Promotion */\n    Permission[\"UpdatePromotion\"] = \"UpdatePromotion\";\n    /** Grants permission to update Seller */\n    Permission[\"UpdateSeller\"] = \"UpdateSeller\";\n    /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n    Permission[\"UpdateSettings\"] = \"UpdateSettings\";\n    /** Grants permission to update ShippingMethod */\n    Permission[\"UpdateShippingMethod\"] = \"UpdateShippingMethod\";\n    /** Grants permission to update StockLocation */\n    Permission[\"UpdateStockLocation\"] = \"UpdateStockLocation\";\n    /** Grants permission to update System */\n    Permission[\"UpdateSystem\"] = \"UpdateSystem\";\n    /** Grants permission to update Tag */\n    Permission[\"UpdateTag\"] = \"UpdateTag\";\n    /** Grants permission to update TaxCategory */\n    Permission[\"UpdateTaxCategory\"] = \"UpdateTaxCategory\";\n    /** Grants permission to update TaxRate */\n    Permission[\"UpdateTaxRate\"] = \"UpdateTaxRate\";\n    /** Grants permission to update Zone */\n    Permission[\"UpdateZone\"] = \"UpdateZone\";\n})(Permission || (exports.Permission = Permission = {}));\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder || (exports.SortOrder = SortOrder = {}));\nvar StockMovementType;\n(function (StockMovementType) {\n    StockMovementType[\"ADJUSTMENT\"] = \"ADJUSTMENT\";\n    StockMovementType[\"ALLOCATION\"] = \"ALLOCATION\";\n    StockMovementType[\"CANCELLATION\"] = \"CANCELLATION\";\n    StockMovementType[\"RELEASE\"] = \"RELEASE\";\n    StockMovementType[\"RETURN\"] = \"RETURN\";\n    StockMovementType[\"SALE\"] = \"SALE\";\n})(StockMovementType || (exports.StockMovementType = StockMovementType = {}));\n","import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, forwardRef, EventEmitter, ElementRef, Input, ViewChild, ViewChildren, Output, inject, TemplateRef, ContentChild, Pipe, SkipSelf, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { findTranslation, DeletionResult, BaseDetailComponent, Permission, createUpdatedTranslatable, SelectionManager, getDefaultUiLanguage, BaseEntityResolver, PageComponent, CanDeactivateDetailGuard, DataService, createResolveData, FacetValueSelectorComponent, ASSET_FRAGMENT, TAG_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, BaseListComponent, SortOrder, LogicalOperator, DataTable2Component, COLLECTION_FRAGMENT, unicodePatternValidator, getConfigArgValue, encodeConfigArgValue, createBulkDeleteAction, ModalService, NotificationService, createBulkAssignToChannelAction, createBulkRemoveFromChannelAction, DuplicateEntityDialogComponent, TypedBaseListComponent, GetCollectionListDocument, FACET_WITH_VALUE_LIST_FRAGMENT, GetFacetDetailDocument, getChannelCodeFromUserStatus, currentChannelIsNotDefault, GetFacetListDocument, GetStockLocationListDocument, ProductVariantListQueryDocument, PRODUCT_DETAIL_FRAGMENT, isMultiChannel, FacetValueFormInputComponent, ProductListQueryDocument, JobState, GetProductVariantsQuickJumpDocument, GlobalFlag, ProductVariantUpdateMutationDocument, detailComponentWithResolver, GetProductDetailDocument, GetProductVariantDetailDocument, CollectionDetailQueryDocument, AssetDetailQueryDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { SortOrder as SortOrder$1 } from '@vendure/common/lib/generated-types';\nimport { shareReplay, mergeMap, map, switchMap, tap, take, startWith, debounceTime, takeUntil, finalize, distinctUntilChanged, filter, catchError, delay, skip, switchMapTo } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormArray, Validators, FormControl, NG_VALUE_ACCESSOR, FormGroup, UntypedFormControl } from '@angular/forms';\nimport { forkJoin, of, throwError, combineLatest, Subject, EMPTY, BehaviorSubject, from, lastValueFrom, merge, concat } from 'rxjs';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined, generateAllCombinations } from '@vendure/common/lib/shared-utils';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@ng-select/ng-select';\nimport { gql } from 'apollo-angular';\nimport * as i5$2 from 'ngx-pagination';\nimport * as i2$1 from '@angular/cdk/drag-drop';\nimport { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { pick } from '@vendure/common/lib/pick';\n\n/**\n * @description\n * Like String.prototype.replace(), but replaces the last instance\n * rather than the first.\n */\nfunction replaceLast(target, search, replace) {\n    if (!target) {\n        return '';\n    }\n    const lastIndex = target.lastIndexOf(search);\n    if (lastIndex === -1) {\n        return target;\n    }\n    const head = target.substr(0, lastIndex);\n    const tail = target.substr(lastIndex).replace(search, replace);\n    return head + tail;\n}\n\n/**\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\n */\nclass ProductDetailService {\n    constructor(dataService) {\n        this.dataService = dataService;\n    }\n    getTaxCategories() {\n        return this.dataService.settings\n            .getTaxCategories()\n            .mapSingle(data => data.taxCategories.items)\n            .pipe(shareReplay(1));\n    }\n    createProductWithVariants(input, createVariantsConfig, languageCode) {\n        const createProduct$ = this.dataService.product.createProduct(input);\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\n        return forkJoin(createProduct$, createOptionGroups$).pipe(mergeMap(([{ createProduct }, optionGroups]) => {\n            const addOptionsToProduct$ = optionGroups.length\n                ? forkJoin(optionGroups.map(optionGroup => this.dataService.product.addOptionGroupToProduct({\n                    productId: createProduct.id,\n                    optionGroupId: optionGroup.id,\n                })))\n                : of([]);\n            return addOptionsToProduct$.pipe(map(() => ({ createProduct, optionGroups })));\n        }), mergeMap(({ createProduct, optionGroups }) => {\n            const variants = createVariantsConfig.variants.map(v => {\n                const optionIds = optionGroups.length\n                    ? v.optionValues.map((optionName, index) => {\n                        const option = optionGroups[index].options.find(o => o.name === optionName);\n                        if (!option) {\n                            throw new Error(`Could not find a matching ProductOption \"${optionName}\" when creating variant`);\n                        }\n                        return option.id;\n                    })\n                    : [];\n                return {\n                    ...v,\n                    optionIds,\n                };\n            });\n            const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\n            return this.createProductVariants(createProduct, variants, options, languageCode, createVariantsConfig.stockLocationId);\n        }));\n    }\n    createProductOptionGroups(groups, languageCode) {\n        return groups.length\n            ? forkJoin(groups.map(c => this.dataService.product\n                .createProductOptionGroups({\n                code: normalizeString(c.name, '-'),\n                translations: [{ languageCode, name: c.name }],\n                options: c.values.map(v => ({\n                    code: normalizeString(v, '-'),\n                    translations: [{ languageCode, name: v }],\n                })),\n            })\n                .pipe(map(data => data.createProductOptionGroup))))\n            : of([]);\n    }\n    createProductVariants(product, variantData, options, languageCode, stockLocationId) {\n        const variants = variantData.map(v => {\n            const name = options.length\n                ? `${product.name} ${v.optionIds\n                    .map(id => options.find(o => o.id === id))\n                    .filter(notNullOrUndefined)\n                    .map(o => o.name)\n                    .join(' ')}`\n                : product.name;\n            return {\n                productId: product.id,\n                price: v.price,\n                sku: v.sku,\n                translations: [\n                    {\n                        languageCode,\n                        name,\n                    },\n                ],\n                stockLevels: [\n                    {\n                        stockLocationId,\n                        stockOnHand: v.stock,\n                    },\n                ],\n                optionIds: v.optionIds,\n            };\n        });\n        return this.dataService.product.createProductVariants(variants).pipe(map(({ createProductVariants }) => ({\n            createProductVariants,\n            productId: product.id,\n        })));\n    }\n    updateProduct(updateOptions) {\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\n        const updateOperations = [];\n        const updateVariantsInput = variantsInput || [];\n        const variants$ = autoUpdate\n            ? this.dataService.product\n                .getProductVariantsForProduct({}, product.id)\n                .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n        return variants$.pipe(mergeMap(variants => {\n            if (productInput) {\n                updateOperations.push(this.dataService.product.updateProduct(productInput));\n                const productOldName = findTranslation(product, languageCode)?.name ?? '';\n                const productNewName = findTranslation(productInput, languageCode)?.name;\n                if (productNewName && productOldName !== productNewName && autoUpdate) {\n                    for (const variant of variants) {\n                        const currentVariantName = findTranslation(variant, languageCode)?.name || '';\n                        let variantInput;\n                        const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\n                        if (existingVariantInput) {\n                            variantInput = existingVariantInput;\n                        }\n                        else {\n                            variantInput = {\n                                id: variant.id,\n                                translations: [{ languageCode, name: currentVariantName }],\n                            };\n                            updateVariantsInput.push(variantInput);\n                        }\n                        const variantTranslation = findTranslation(variantInput, languageCode);\n                        if (variantTranslation) {\n                            if (variantTranslation.name) {\n                                variantTranslation.name = replaceLast(variantTranslation.name, productOldName, productNewName);\n                            }\n                            else {\n                                // The variant translation was falsy, which occurs\n                                // when defining the product name for a new translation\n                                // language that had not yet been defined.\n                                variantTranslation.name = [\n                                    productNewName,\n                                    ...variant.options.map(o => o.name),\n                                ].join(' ');\n                            }\n                        }\n                    }\n                }\n            }\n            if (updateVariantsInput.length) {\n                updateOperations.push(this.dataService.product.updateProductVariants(updateVariantsInput));\n            }\n            return forkJoin(updateOperations);\n        }));\n    }\n    updateProductOptions(inputs, autoUpdateProductNames, product, languageCode) {\n        const variants$ = autoUpdateProductNames\n            ? this.dataService.product\n                .getProductVariantsForProduct({}, product.id)\n                .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n        return variants$.pipe(mergeMap(variants => {\n            let updateProductVariantNames$ = of([]);\n            if (autoUpdateProductNames) {\n                const replacementMap = new Map();\n                for (const input of inputs) {\n                    const newOptionName = findTranslation(input, languageCode)?.name;\n                    let oldOptionName;\n                    for (const variant of variants) {\n                        if (oldOptionName) {\n                            continue;\n                        }\n                        if (variant.options.map(o => o.id).includes(input.id)) {\n                            if (!oldOptionName) {\n                                oldOptionName = findTranslation(variant.options.find(o => o.id === input.id), languageCode)?.name;\n                            }\n                        }\n                    }\n                    if (oldOptionName && newOptionName) {\n                        replacementMap.set(oldOptionName, newOptionName);\n                    }\n                }\n                const variantsToUpdate = [];\n                if (replacementMap.size) {\n                    const oldOptionNames = Array.from(replacementMap.keys());\n                    for (const variant of variants) {\n                        const variantName = findTranslation(variant, languageCode)?.name;\n                        if (!variantName) {\n                            continue;\n                        }\n                        if (!oldOptionNames.some(oldOptionName => variantName.includes(oldOptionName))) {\n                            continue;\n                        }\n                        const updatedVariantName = oldOptionNames.reduce((name, oldOptionName) => replaceLast(name, oldOptionName, replacementMap.get(oldOptionName)), variantName);\n                        variantsToUpdate.push({\n                            id: variant.id,\n                            translations: [\n                                {\n                                    languageCode,\n                                    name: updatedVariantName,\n                                },\n                            ],\n                        });\n                    }\n                }\n                if (variantsToUpdate.length) {\n                    updateProductVariantNames$ =\n                        this.dataService.product.updateProductVariants(variantsToUpdate);\n                }\n                else {\n                    updateProductVariantNames$ = of([]);\n                }\n            }\n            return forkJoin(inputs.map(input => this.dataService.product.updateProductOption(input))).pipe(mergeMap(() => updateProductVariantNames$));\n        }));\n    }\n    deleteProductVariant(id, productId) {\n        return this.dataService.product.deleteProductVariant(id).pipe(switchMap(result => {\n            if (result.deleteProductVariant.result === DeletionResult.DELETED) {\n                return this.dataService.product.getProduct(productId).single$;\n            }\n            else {\n                return throwError(result.deleteProductVariant.message);\n            }\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductDetailService, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductDetailService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductDetailService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nclass ProductOptionsEditorComponent extends BaseDetailComponent {\n    constructor(route, router, serverConfigService, dataService, permissionsService, productDetailService, formBuilder, changeDetector, notificationService) {\n        super(route, router, serverConfigService, dataService, permissionsService);\n        this.route = route;\n        this.router = router;\n        this.serverConfigService = serverConfigService;\n        this.dataService = dataService;\n        this.permissionsService = permissionsService;\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.changeDetector = changeDetector;\n        this.notificationService = notificationService;\n        this.autoUpdateVariantNames = true;\n        this.paginationSettings = {};\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\n    }\n    ngOnInit() {\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(map((product) => product.optionGroups), tap((optionGroups) => {\n            for (const group of optionGroups) {\n                this.paginationSettings[group.id] = {\n                    currentPage: 1,\n                    itemsPerPage: 10,\n                };\n            }\n        }));\n        this.detailForm = new UntypedFormGroup({\n            optionGroups: new UntypedFormArray([]),\n        });\n        super.init();\n    }\n    getOptionGroups() {\n        const optionGroups = this.detailForm.get('optionGroups');\n        return optionGroups.controls;\n    }\n    getOptions(optionGroup) {\n        const options = optionGroup.get('options');\n        return options.controls;\n    }\n    save() {\n        if (this.detailForm.invalid || this.detailForm.pristine) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product);\n        combineLatest(this.entity$, this.languageCode$, $product)\n            .pipe(take(1), mergeMap(([{ optionGroups }, languageCode, product]) => {\n            const updateOperations = [];\n            const updatedProductOptionInputs = [];\n            for (const optionGroupForm of this.getOptionGroups()) {\n                if (optionGroupForm.dirty) {\n                    const optionGroupEntity = optionGroups.find(og => og.id === optionGroupForm.value.id);\n                    if (optionGroupEntity) {\n                        const input = this.getUpdatedOptionGroup(optionGroupEntity, optionGroupForm, languageCode);\n                        updateOperations.push(this.dataService.product.updateProductOptionGroup(input));\n                    }\n                }\n                for (const optionForm of this.getOptions(optionGroupForm)) {\n                    if (optionForm.dirty) {\n                        const optionGroup = optionGroups\n                            .find(og => og.id === optionGroupForm.value.id)\n                            ?.options.find(o => o.id === optionForm.value.id);\n                        if (optionGroup) {\n                            const input = this.getUpdatedOption(optionGroup, optionForm, languageCode);\n                            updatedProductOptionInputs.push(input);\n                        }\n                    }\n                }\n            }\n            if (updatedProductOptionInputs.length) {\n                updateOperations.push(this.productDetailService.updateProductOptions(updatedProductOptionInputs, this.autoUpdateVariantNames, product, languageCode));\n            }\n            return forkJoin(updateOperations);\n        }))\n            .subscribe(() => {\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ProductOptionGroup',\n            });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ProductOptionGroup',\n            });\n        });\n    }\n    getUpdatedOptionGroup(optionGroup, optionGroupFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: optionGroup,\n            updatedFields: optionGroupFormGroup.value,\n            customFieldConfig: this.optionGroupCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: optionGroup.name || '',\n            },\n        });\n        return input;\n    }\n    getUpdatedOption(option, optionFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: option,\n            updatedFields: optionFormGroup.value,\n            customFieldConfig: this.optionCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: option.name || '',\n            },\n        });\n        return input;\n    }\n    setFormValues(entity, languageCode) {\n        const groupsForm = this.detailForm.get('optionGroups');\n        for (const optionGroup of entity.optionGroups) {\n            const groupTranslation = findTranslation(optionGroup, languageCode);\n            const groupForm = this.setOptionGroupForm(optionGroup, groupsForm, groupTranslation);\n            this.setCustomFieldsForm(this.optionGroupCustomFields, groupForm, optionGroup, groupTranslation);\n            let optionsForm = groupForm.get('options');\n            if (!optionsForm) {\n                optionsForm = this.formBuilder.array([]);\n                groupForm.addControl('options', optionsForm);\n            }\n            for (const option of optionGroup.options) {\n                const optionTranslation = findTranslation(option, languageCode);\n                const optionForm = this.setOptionForm(option, optionsForm, optionTranslation);\n                this.setCustomFieldsForm(this.optionCustomFields, optionForm, option, optionTranslation);\n            }\n        }\n    }\n    setCustomFieldsForm(customFields, formGroup, entity, currentTranslation) {\n        if (customFields.length) {\n            let customValueFieldsGroup = formGroup.get(['customFields']);\n            if (!customValueFieldsGroup) {\n                customValueFieldsGroup = this.formBuilder.group(customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}));\n                formGroup.addControl('customFields', customValueFieldsGroup);\n            }\n            this.setCustomFieldFormValues(customFields, customValueFieldsGroup, entity, currentTranslation);\n        }\n    }\n    setOptionGroupForm(entity, groupsForm, currentTranslation) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let groupForm = groupsForm.controls.find(control => control.value.id === entity.id);\n        if (groupForm) {\n            groupForm.get('id')?.setValue(group.id);\n            groupForm.get('code')?.setValue(group.code);\n            groupForm.get('name')?.setValue(group.name);\n            groupForm.get('createdAt')?.setValue(group.createdAt);\n            groupForm.get('updatedAt')?.setValue(group.updatedAt);\n        }\n        else {\n            groupForm = this.formBuilder.group(group);\n            groupsForm.push(groupForm);\n        }\n        return groupForm;\n    }\n    setOptionForm(entity, optionsForm, currentTranslation) {\n        const group = {\n            id: entity.id,\n            createdAt: entity.createdAt,\n            updatedAt: entity.updatedAt,\n            code: entity.code,\n            name: currentTranslation?.name ?? '',\n        };\n        let optionForm = optionsForm.controls.find(control => control.value.id === entity.id);\n        if (optionForm) {\n            optionForm.get('id')?.setValue(group.id);\n            optionForm.get('code')?.setValue(group.code);\n            optionForm.get('name')?.setValue(group.name);\n            optionForm.get('createdAt')?.setValue(group.createdAt);\n            optionForm.get('updatedAt')?.setValue(group.updatedAt);\n        }\n        else {\n            optionForm = this.formBuilder.group(group);\n            optionsForm.push(optionForm);\n        }\n        return optionForm;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductOptionsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.ServerConfigService }, { token: i1.DataService }, { token: i1.PermissionsService }, { token: ProductDetailService }, { token: i2.UntypedFormBuilder }, { token: i0.ChangeDetectorRef }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductOptionsEditorComponent, selector: \"vdr-product-options-editor\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageHeaderComponent, selector: \"vdr-page-header\" }, { kind: \"component\", type: i1.PageTitleComponent, selector: \"vdr-page-title\", inputs: [\"title\"] }, { kind: \"component\", type: i1.PageHeaderDescriptionComponent, selector: \"vdr-page-header-description\" }, { kind: \"component\", type: i1.PageBodyComponent, selector: \"vdr-page-body\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductOptionsEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-options-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.ServerConfigService }, { type: i1.DataService }, { type: i1.PermissionsService }, { type: ProductDetailService }, { type: i2.UntypedFormBuilder }, { type: i0.ChangeDetectorRef }, { type: i1.NotificationService }] });\n\nclass CreateProductOptionGroupDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            code: ['', Validators.required],\n        });\n    }\n    updateCode() {\n        const nameControl = this.form.get('name');\n        const codeControl = this.form.get('code');\n        if (nameControl && codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\n        }\n    }\n    confirm() {\n        const { name, code } = this.form.value;\n        if (!name || !code) {\n            return;\n        }\n        this.resolveWith({\n            code,\n            options: [],\n            translations: [{ languageCode: this.languageCode, name }],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CreateProductOptionGroupDialogComponent, selector: \"vdr-create-product-option-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-product-option-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nclass CreateProductVariantDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            sku: ['', Validators.required],\n            price: [''],\n            options: this.formBuilder.record({}),\n        });\n    }\n    ngOnInit() {\n        this.currencyCode = this.product.variants[0]?.currencyCode;\n        for (const optionGroup of this.product.optionGroups) {\n            this.form.get('options').addControl(optionGroup.code, new FormControl('', Validators.required));\n        }\n        const optionsRecord = this.form.get('options');\n        optionsRecord.valueChanges.subscribe(value => {\n            const nameControl = this.form.get('name');\n            const allNull = Object.values(value).every(v => v == null);\n            if (!allNull && value && nameControl && !nameControl.dirty) {\n                const name = Object.entries(value)\n                    .map(([groupCode, optionId]) => this.product.optionGroups\n                    .find(og => og.code === groupCode)\n                    ?.options.find(o => o.id === optionId)?.name)\n                    .join(' ');\n                nameControl.setValue(`${this.product.name} ${name}`);\n            }\n            const allSelected = Object.values(value).every(v => v != null);\n            if (allSelected) {\n                this.existingVariant = this.product.variants.find(v => Object.entries(value).every(([groupCode, optionId]) => v.options.find(o => o.groupId === this.getGroupIdFromCode(groupCode))?.id ===\n                    optionId));\n            }\n        });\n    }\n    confirm() {\n        const { name, sku, options, price } = this.form.value;\n        if (!name || !sku || !options || !price) {\n            return;\n        }\n        const optionIds = Object.values(options).filter(notNullOrUndefined);\n        this.resolveWith({\n            productId: this.product.id,\n            sku,\n            price: Number(price),\n            optionIds,\n            translations: [\n                {\n                    languageCode: this.product.languageCode,\n                    name,\n                },\n            ],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    getGroupCodeFromId(id) {\n        return this.product.optionGroups.find(og => og.id === id)?.code ?? '';\n    }\n    getGroupIdFromCode(code) {\n        return this.product.optionGroups.find(og => og.code === code)?.id ?? '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateProductVariantDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CreateProductVariantDialogComponent, selector: \"vdr-create-product-variant-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateProductVariantDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-product-variant-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nconst OPTION_VALUE_INPUT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OptionValueInputComponent),\n    multi: true,\n};\nclass OptionValueInputComponent {\n    get optionValues() {\n        return this.formValue ?? this.options ?? [];\n    }\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.groupName = '';\n        this.add = new EventEmitter();\n        this.remove = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.disabled = false;\n        this.input = '';\n        this.isFocussed = false;\n        this.lastSelected = false;\n        this.editingIndex = -1;\n    }\n    registerOnChange(fn) {\n        this.onChangeFn = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouchFn = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.changeDetector.markForCheck();\n    }\n    writeValue(obj) {\n        this.formValue = obj || [];\n    }\n    focus() {\n        this.textArea.nativeElement.focus();\n    }\n    editName(index, event) {\n        const optionValue = this.optionValues[index];\n        if (!optionValue.locked && !optionValue.id) {\n            event.cancelBubble = true;\n            this.editingIndex = index;\n            const input = this.nameInputs.get(index)?.nativeElement;\n            setTimeout(() => input?.focus());\n        }\n    }\n    updateOption(index, event) {\n        const optionValue = this.optionValues[index];\n        const newName = event.target.value;\n        if (optionValue) {\n            if (newName) {\n                optionValue.name = newName;\n                this.edit.emit({ index, option: optionValue });\n            }\n            this.editingIndex = -1;\n        }\n    }\n    removeOption(option) {\n        if (!option.locked) {\n            if (this.formValue) {\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\n                this.onChangeFn(this.formValue);\n            }\n            else {\n                this.remove.emit(option);\n            }\n        }\n    }\n    handleKey(event) {\n        switch (event.key) {\n            case ',':\n            case 'Enter':\n                this.addOptionValue();\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (this.lastSelected) {\n                    this.removeLastOption();\n                    this.lastSelected = false;\n                }\n                else if (this.input === '') {\n                    this.lastSelected = true;\n                }\n                break;\n            default:\n                this.lastSelected = false;\n        }\n    }\n    handleBlur() {\n        this.isFocussed = false;\n        this.addOptionValue();\n    }\n    addOptionValue() {\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\n            // do not add an option with the same name\n            // as an existing option\n            const existing = this.options ?? this.formValue;\n            return !existing?.find(o => o?.name === option.name);\n        });\n        if (!this.formValue && this.options) {\n            for (const option of options) {\n                this.add.emit(option);\n            }\n        }\n        else {\n            this.formValue = unique([...this.formValue, ...options]);\n            this.onChangeFn(this.formValue);\n        }\n        this.input = '';\n    }\n    parseInputIntoOptions(input) {\n        return input\n            .split(/[,\\n]/)\n            .map(s => s.trim())\n            .filter(s => s !== '')\n            .map(s => ({ name: s, locked: false }));\n    }\n    removeLastOption() {\n        if (this.optionValues.length) {\n            const option = this.optionValues[this.optionValues.length - 1];\n            this.removeOption(option);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: OptionValueInputComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: { groupName: \"groupName\", options: \"options\", disabled: \"disabled\" }, outputs: { add: \"add\", remove: \"remove\", edit: \"edit\" }, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"textArea\", first: true, predicate: [\"textArea\"], descendants: true, static: true }, { propertyName: \"nameInputs\", predicate: [\"editNameInput\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: OptionValueInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-option-value-input', changeDetection: ChangeDetectionStrategy.Default, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { groupName: [{\n                type: Input\n            }], textArea: [{\n                type: ViewChild,\n                args: ['textArea', { static: true }]\n            }], nameInputs: [{\n                type: ViewChildren,\n                args: ['editNameInput', { read: ElementRef }]\n            }], options: [{\n                type: Input\n            }], add: [{\n                type: Output\n            }], remove: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass GeneratedVariant {\n    constructor(config) {\n        for (const key of Object.keys(config)) {\n            this[key] = config[key];\n        }\n    }\n}\nclass ProductVariantsEditorComponent {\n    constructor(route, dataService, productDetailService, notificationService, modalService, changeDetector) {\n        this.route = route;\n        this.dataService = dataService;\n        this.productDetailService = productDetailService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.changeDetector = changeDetector;\n        this.formValueChanged = false;\n        this.optionsChanged = false;\n        this.itemsPerPage = 100;\n        this.currentPage = 1;\n        this.searchTermControl = new FormControl('');\n        this.selectionManager = new SelectionManager({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n        this.optionsToAddToVariant = {};\n        this.refresh$ = new Subject();\n    }\n    ngOnInit() {\n        this.languageCode =\n            this.route.snapshot.paramMap.get('lang') || getDefaultUiLanguage();\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\n        });\n        const product$ = this.refresh$.pipe(switchMap(() => this.dataService.product\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            .getProductVariantsOptions(this.route.parent?.snapshot.paramMap.get('id'))\n            .mapSingle(data => data.product)), startWith(this.route.snapshot.data.product));\n        this.variants$ = product$.pipe(switchMap(product => this.searchTermControl.valueChanges.pipe(startWith(''), map(term => term\n            ? product.variants.filter(v => v.name.toLowerCase().includes(term.toLowerCase()))\n            : product.variants))));\n        this.optionGroups$ = product$.pipe(map(product => product.optionGroups));\n        this.totalItems$ = this.variants$.pipe(map(variants => variants.length));\n        product$.subscribe(p => {\n            this.product = p;\n            const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\n            const allUsedOptionGroupIds = p.variants.map(v => v.options.map(option => option.groupId)).flat();\n            this.optionGroups = p.optionGroups.map(og => ({\n                id: og.id,\n                isNew: false,\n                name: og.name,\n                locked: allUsedOptionGroupIds.includes(og.id),\n                values: og.options.map(o => ({\n                    id: o.id,\n                    name: o.name,\n                    locked: allUsedOptionIds.includes(o.id),\n                })),\n            }));\n        });\n    }\n    setItemsPerPage(itemsPerPage) {\n        this.itemsPerPage = itemsPerPage;\n        this.currentPage = 1;\n    }\n    setPageNumber(page) {\n        this.currentPage = page;\n    }\n    onFormChanged(variantInfo) {\n        this.formValueChanged = true;\n        variantInfo.enabled = true;\n    }\n    canDeactivate() {\n        return !this.formValueChanged;\n    }\n    addOptionGroup() {\n        this.modalService\n            .fromComponent(CreateProductOptionGroupDialogComponent, {\n            locals: {\n                languageCode: this.languageCode,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.product.createProductOptionGroups(result).pipe(switchMap(({ createProductOptionGroup }) => this.dataService.product.addOptionGroupToProduct({\n                    optionGroupId: createProductOptionGroup.id,\n                    productId: this.product.id,\n                })));\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ProductOptionGroup',\n            });\n            this.refresh$.next();\n            this.changeDetector.markForCheck();\n        });\n    }\n    removeOptionGroup(optionGroup) {\n        const id = optionGroup.id;\n        const usedByVariantsCount = this.product.variants.filter(v => v.options.map(o => o.groupId).includes(id)).length;\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product-option-group'),\n            body: usedByVariantsCount ? marker('catalog.confirm-delete-product-option-group-body') : '',\n            translationVars: { name: optionGroup.name, count: usedByVariantsCount },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(val => {\n            if (val) {\n                return this.dataService.product.removeOptionGroupFromProduct({\n                    optionGroupId: id,\n                    productId: this.product.id,\n                    force: true,\n                });\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(({ removeOptionGroupFromProduct }) => {\n            if (removeOptionGroupFromProduct.__typename === 'Product') {\n                this.notificationService.success(marker('common.notify-delete-success'), {\n                    entity: 'ProductOptionGroup',\n                });\n                this.refresh$.next();\n            }\n            else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\n                this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\n            }\n        });\n    }\n    addOption(index, optionName) {\n        const group = this.optionGroups[index];\n        if (group && group.id) {\n            this.dataService.product\n                .addOptionToGroup({\n                productOptionGroupId: group.id,\n                code: normalizeString(optionName, '-'),\n                translations: [{ name: optionName, languageCode: this.languageCode }],\n            })\n                .subscribe(({ createProductOption }) => {\n                this.notificationService.success(marker('common.notify-create-success'), {\n                    entity: 'ProductOption',\n                });\n                this.refresh$.next();\n            });\n        }\n    }\n    removeOption(index, { id, name }) {\n        const optionGroup = this.optionGroups[index];\n        if (optionGroup) {\n            this.modalService\n                .dialog({\n                title: marker('catalog.confirm-delete-product-option'),\n                translationVars: { name },\n                buttons: [\n                    { type: 'secondary', label: marker('common.cancel') },\n                    { type: 'danger', label: marker('common.delete'), returnValue: true },\n                ],\n            })\n                .pipe(switchMap(val => {\n                if (val) {\n                    return this.dataService.product.deleteProductOption(id);\n                }\n                else {\n                    return EMPTY;\n                }\n            }))\n                .subscribe(({ deleteProductOption }) => {\n                if (deleteProductOption.result === DeletionResult.DELETED) {\n                    this.notificationService.success(marker('common.notify-delete-success'), {\n                        entity: 'ProductOption',\n                    });\n                    optionGroup.values = optionGroup.values.filter(v => v.id !== id);\n                    this.refresh$.next();\n                }\n                else {\n                    this.notificationService.error(deleteProductOption.message ?? '');\n                }\n            });\n        }\n    }\n    setOptionToAddToVariant(variantId, optionGroupId, optionId) {\n        if (!this.optionsToAddToVariant[variantId]) {\n            this.optionsToAddToVariant[variantId] = {};\n        }\n        if (optionId) {\n            this.optionsToAddToVariant[variantId][optionGroupId] = optionId;\n        }\n        else {\n            delete this.optionsToAddToVariant[variantId][optionGroupId];\n        }\n    }\n    addOptionToVariant(variant) {\n        const optionIds = [\n            ...variant.options.map(o => o.id),\n            ...Object.values(this.optionsToAddToVariant[variant.id]),\n        ];\n        this.dataService.product\n            .updateProductVariants([\n            {\n                id: variant.id,\n                optionIds: unique(optionIds),\n            },\n        ])\n            .subscribe(({ updateProductVariants }) => {\n            this.refresh$.next();\n        });\n    }\n    deleteVariant(variant) {\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product-variant'),\n            translationVars: { name: variant.name },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response\n            ? this.productDetailService.deleteProductVariant(variant.id, this.product.id)\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'ProductVariant',\n            });\n            this.refresh$.next();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'ProductVariant',\n            });\n        });\n    }\n    createNewVariant() {\n        this.modalService\n            .fromComponent(CreateProductVariantDialogComponent, {\n            locals: {\n                product: this.product,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                return this.dataService.product.createProductVariants([result]);\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ProductVariant',\n            });\n            this.refresh$.next();\n        });\n    }\n    getOption(variant, groupId) {\n        return variant.options.find(o => o.groupId === groupId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1.DataService }, { token: ProductDetailService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductVariantsEditorComponent, selector: \"vdr-product-variants-editor\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variants-editor', changeDetection: ChangeDetectionStrategy.Default, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1.DataService }, { type: ProductDetailService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i0.ChangeDetectorRef }] });\n\nclass ProductVariantsResolver extends BaseEntityResolver {\n    constructor(router, dataService) {\n        super(router, {\n            __typename: 'Product',\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            name: '',\n            languageCode: '',\n            optionGroups: [],\n            variants: [],\n        }, id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsResolver, deps: [{ token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsResolver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsResolver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i1$1.Router }, { type: i1.DataService }] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'products',\n        component: PageComponent,\n        data: {\n            locationId: 'product-list',\n            breadcrumb: marker('breadcrumb.products'),\n        },\n        children: pageService.getPageTabRoutes('product-list'),\n    },\n    {\n        path: 'inventory',\n        redirectTo: 'products',\n    },\n    {\n        path: 'products/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'product-detail',\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\n        },\n        children: [\n            {\n                path: 'manage-variants',\n                component: ProductVariantsEditorComponent,\n                canDeactivate: [CanDeactivateDetailGuard],\n                data: {\n                    breadcrumb: ({ product }) => [\n                        {\n                            label: `${product.name}`,\n                            link: ['../'],\n                        },\n                        {\n                            label: marker('breadcrumb.manage-variants'),\n                            link: ['manage-variants'],\n                        },\n                    ],\n                },\n                resolve: {\n                    product: (route) => inject(DataService)\n                        .product.getProductVariantsOptions(route.parent?.params.id)\n                        .mapSingle(data => data.product),\n                },\n            },\n            ...pageService.getPageTabRoutes('product-detail'),\n        ],\n    },\n    {\n        path: 'products/:productId/variants/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'product-variant-detail',\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\n        },\n        children: pageService.getPageTabRoutes('product-variant-detail'),\n    },\n    {\n        path: 'products/:id/options',\n        component: ProductOptionsEditorComponent,\n        resolve: createResolveData(ProductVariantsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productOptionsEditorBreadcrumb,\n        },\n    },\n    {\n        path: 'facets',\n        component: PageComponent,\n        data: {\n            locationId: 'facet-list',\n            breadcrumb: marker('breadcrumb.facets'),\n        },\n        children: pageService.getPageTabRoutes('facet-list'),\n    },\n    {\n        path: 'facets/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'facet-detail',\n            breadcrumb: { label: marker('breadcrumb.facets'), link: ['../', 'facets'] },\n        },\n        children: pageService.getPageTabRoutes('facet-detail'),\n    },\n    {\n        path: 'collections',\n        component: PageComponent,\n        data: {\n            locationId: 'collection-list',\n            breadcrumb: marker('breadcrumb.collections'),\n        },\n        children: pageService.getPageTabRoutes('collection-list'),\n    },\n    {\n        path: 'collections/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'collection-detail',\n            breadcrumb: { label: marker('breadcrumb.collections'), link: ['../', 'collections'] },\n        },\n        children: pageService.getPageTabRoutes('collection-detail'),\n    },\n    {\n        path: 'assets',\n        component: PageComponent,\n        data: {\n            locationId: 'asset-list',\n            breadcrumb: marker('breadcrumb.assets'),\n        },\n        children: pageService.getPageTabRoutes('asset-list'),\n    },\n    {\n        path: 'assets/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'asset-detail',\n            breadcrumb: { label: marker('breadcrumb.assets'), link: ['../', 'assets'] },\n        },\n        children: pageService.getPageTabRoutes('asset-detail'),\n    },\n];\nfunction productOptionsEditorBreadcrumb(data, params) {\n    return data.entity.pipe(map((entity) => [\n        {\n            label: marker('breadcrumb.products'),\n            link: ['../', 'products'],\n        },\n        {\n            label: `${entity.name}`,\n            link: ['../', 'products', params.id],\n        },\n        {\n            label: marker('breadcrumb.product-options'),\n            link: ['options'],\n        },\n    ]));\n}\n\nclass ApplyFacetDialogComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.selectedValues = [];\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.selector.focus(), 0);\n    }\n    selectValues() {\n        this.resolveWith(this.selectedValues);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ApplyFacetDialogComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ApplyFacetDialogComponent, selector: \"vdr-apply-facet-dialog\", viewQueries: [{ propertyName: \"selector\", first: true, predicate: FacetValueSelectorComponent, descendants: true }], ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ApplyFacetDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-apply-facet-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { selector: [{\n                type: ViewChild,\n                args: [FacetValueSelectorComponent]\n            }] } });\n\nconst ASSET_DETAIL_QUERY = gql `\r\n    query AssetDetailQuery($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\nclass AssetDetailComponent extends TypedBaseDetailComponent {\n    constructor(notificationService, dataService, formBuilder) {\n        super();\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.customFields = this.getCustomFieldConfig('Asset');\n        this.detailForm = new FormGroup({\n            name: new FormControl(''),\n            tags: new FormControl([]),\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    onAssetChange(event) {\n        this.detailForm.get('name')?.setValue(event.name);\n        this.detailForm.get('tags')?.setValue(event.tags);\n        this.detailForm.markAsDirty();\n    }\n    save() {\n        this.dataService.product\n            .updateAsset({\n            id: this.id,\n            name: this.detailForm.value.name,\n            tags: this.detailForm.value.tags,\n            customFields: this.detailForm.value.customFields,\n        })\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Asset' });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Asset',\n            });\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.get('name')?.setValue(entity.name);\n        this.detailForm.get('tags')?.setValue(entity.tags.map(t => t.id));\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssetDetailComponent, deps: [{ token: i1.NotificationService }, { token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AssetDetailComponent, selector: \"vdr-asset-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\" />\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"asset-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"], dependencies: [{ kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetPreviewComponent, selector: \"vdr-asset-preview\", inputs: [\"asset\", \"assets\", \"editable\", \"customFields\", \"customFieldsForm\"], outputs: [\"assetChange\", \"editClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssetDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-asset-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\" />\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"asset-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.NotificationService }, { type: i1.DataService }, { type: i2.UntypedFormBuilder }] });\n\nclass AssetListComponent extends BaseListComponent {\n    constructor(notificationService, modalService, dataService, router, route) {\n        super(router, route);\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.dataService = dataService;\n        this.searchTerm$ = new BehaviorSubject(undefined);\n        this.filterByTags$ = new BehaviorSubject(undefined);\n        this.uploading = false;\n        super.setQueryFn((...args) => this.dataService.product.getAssetList(...args).refetchOnChannelChange(), data => data.assets, (skip, take) => {\n            const searchTerm = this.searchTerm$.value;\n            const tags = this.filterByTags$.value?.map(t => t.value);\n            return {\n                options: {\n                    skip,\n                    take,\n                    ...(searchTerm\n                        ? {\n                            filter: {\n                                name: { contains: searchTerm },\n                            },\n                        }\n                        : {}),\n                    sort: {\n                        createdAt: SortOrder.DESC,\n                    },\n                    tags,\n                    tagsOperator: LogicalOperator.AND,\n                },\n            };\n        }, { take: 25, skip: 0 });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })));\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\n    }\n    filesSelected(files) {\n        if (files.length) {\n            this.uploading = true;\n            this.dataService.product\n                .createAssets(files)\n                .pipe(finalize(() => (this.uploading = false)))\n                .subscribe(({ createAssets }) => {\n                let successCount = 0;\n                for (const result of createAssets) {\n                    switch (result.__typename) {\n                        case 'Asset':\n                            successCount++;\n                            break;\n                        case 'MimeTypeError':\n                            this.notificationService.error(result.message);\n                            break;\n                    }\n                }\n                if (0 < successCount) {\n                    super.refresh();\n                    this.notificationService.success(marker('asset.notify-create-assets-success'), {\n                        count: successCount,\n                    });\n                }\n            });\n        }\n    }\n    deleteAssets(assets) {\n        this.showModalAndDelete(assets.map(a => a.id))\n            .pipe(switchMap(response => {\n            if (response.result === DeletionResult.DELETED) {\n                return [true];\n            }\n            else {\n                return this.showModalAndDelete(assets.map(a => a.id), response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\n            }\n        }))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Assets',\n            });\n            this.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'Assets',\n            });\n        });\n    }\n    showModalAndDelete(assetIds, message) {\n        return this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-assets'),\n            translationVars: {\n                count: assetIds.length,\n            },\n            body: message,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)), map(res => res.deleteAssets));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssetListComponent, deps: [{ token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.DataService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AssetListComponent, selector: \"vdr-asset-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"component\", type: i1.AssetSearchInputComponent, selector: \"vdr-asset-search-input\", inputs: [\"tags\"], outputs: [\"searchTermChange\", \"tagsChange\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.AssetFileInputComponent, selector: \"vdr-asset-file-input\", inputs: [\"dropZoneTarget\", \"uploading\"], outputs: [\"selectFiles\"] }, { kind: \"component\", type: i1.AssetGalleryComponent, selector: \"vdr-asset-gallery\", inputs: [\"assets\", \"multiSelect\", \"canDelete\"], outputs: [\"selectionChange\", \"deleteAssets\", \"editAssetClick\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssetListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-asset-list', template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.DataService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }] });\n\nclass AssignProductsToChannelDialogComponent {\n    get isProductVariantMode() {\n        return this.productVariantIds != null;\n    }\n    constructor(dataService, notificationService) {\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.priceFactorControl = new UntypedFormControl(1);\n        this.selectedChannelIdControl = new UntypedFormControl();\n    }\n    ngOnInit() {\n        const activeChannelId$ = this.dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.currentChannel = channels.items.find(c => c.id === activeChannelId);\n            this.availableChannels = channels.items;\n        });\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\n            this.selectChannel(ids);\n        });\n        this.variantsPreview$ = combineLatest(from(this.getTopVariants(10)), this.priceFactorControl.valueChanges.pipe(startWith(1))).pipe(map(([variants, factor]) => variants.map(v => ({\n            id: v.id,\n            name: v.name,\n            price: v.price,\n            pricePreview: v.price * +factor,\n        }))));\n    }\n    selectChannel(channelIds) {\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\n    }\n    assign() {\n        const selectedChannel = this.selectedChannel;\n        if (selectedChannel) {\n            if (!this.isProductVariantMode) {\n                this.dataService.product\n                    .assignProductsToChannel({\n                    channelId: selectedChannel.id,\n                    productIds: this.productIds,\n                    priceFactor: +this.priceFactorControl.value,\n                })\n                    .subscribe(() => {\n                    this.notificationService.success(marker('catalog.assign-product-to-channel-success'), {\n                        channel: selectedChannel.code,\n                        count: this.productIds.length,\n                    });\n                    this.resolveWith(true);\n                });\n            }\n            else if (this.productVariantIds) {\n                this.dataService.product\n                    .assignVariantsToChannel({\n                    channelId: selectedChannel.id,\n                    productVariantIds: this.productVariantIds,\n                    priceFactor: +this.priceFactorControl.value,\n                })\n                    .subscribe(() => {\n                    this.notificationService.success(marker('catalog.assign-variant-to-channel-success'), {\n                        channel: selectedChannel.code,\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        count: this.productVariantIds.length,\n                    });\n                    this.resolveWith(true);\n                });\n            }\n        }\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    async getTopVariants(take) {\n        return (await lastValueFrom(this.dataService.product.getProductVariants({\n            filterOperator: LogicalOperator.OR,\n            filter: {\n                productId: { in: this.productIds },\n                id: { in: this.productVariantIds },\n            },\n            take,\n        }).single$)).productVariants.items;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssignProductsToChannelDialogComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AssignProductsToChannelDialogComponent, selector: \"vdr-assign-products-to-channel-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AssignProductsToChannelDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-assign-products-to-channel-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }] });\n\nconst GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\r\n        products(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\r\n        productVariants(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst UPDATE_PRODUCTS_BULK = gql `\r\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\r\n        updateProducts(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\nconst UPDATE_VARIANTS_BULK = gql `\r\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\n\nclass BulkAddFacetValuesDialogComponent {\n    constructor(dataService, changeDetectorRef) {\n        this.dataService = dataService;\n        this.changeDetectorRef = changeDetectorRef;\n        /* provided by call to ModalService */\n        this.mode = 'product';\n        this.state = 'loading';\n        this.selectedValues = [];\n        this.items = [];\n        this.facetValuesRemoved = false;\n    }\n    ngOnInit() {\n        const fetchData$ = this.mode === 'product'\n            ? this.dataService\n                .query(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\n                ids: this.ids ?? [],\n            })\n                .mapSingle(({ products }) => products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })))\n            : this.dataService\n                .query(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\n                ids: this.ids ?? [],\n            })\n                .mapSingle(({ productVariants }) => productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })));\n        this.subscription = fetchData$.subscribe({\n            next: items => {\n                this.items = items;\n                this.state = 'ready';\n                this.changeDetectorRef.markForCheck();\n            },\n        });\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    removeFacetValue(item, facetValueId) {\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\n        this.facetValuesRemoved = true;\n    }\n    addFacetValues() {\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\n        this.state = 'saving';\n        const save$ = this.mode === 'product'\n            ? this.dataService.mutate(UPDATE_PRODUCTS_BULK, {\n                input: this.items?.map(product => ({\n                    id: product.id,\n                    facetValueIds: unique([\n                        ...product.facetValues.map(fv => fv.id),\n                        ...selectedFacetValueIds,\n                    ]),\n                })),\n            })\n            : this.dataService.mutate(UPDATE_VARIANTS_BULK, {\n                input: this.items?.map(product => ({\n                    id: product.id,\n                    facetValueIds: unique([\n                        ...product.facetValues.map(fv => fv.id),\n                        ...selectedFacetValueIds,\n                    ]),\n                })),\n            });\n        return save$.subscribe(result => {\n            this.resolveWith(this.selectedValues);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, deps: [{ token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: BulkAddFacetValuesDialogComponent, selector: \"vdr-bulk-add-facet-values-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrSpinner, selector: \"clr-spinner\", inputs: [\"clrInline\", \"clrInverse\", \"clrSmall\", \"clrMedium\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-bulk-add-facet-values-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nclass CollectionContentsComponent {\n    constructor(route, router, dataService) {\n        this.route = route;\n        this.router = router;\n        this.dataService = dataService;\n        this.previewUpdatedFilters = false;\n        this.filterTermControl = new UntypedFormControl('');\n        this.isLoading = false;\n        this.collectionIdChange$ = new BehaviorSubject('');\n        this.parentIdChange$ = new BehaviorSubject('');\n        this.filterChanges$ = new BehaviorSubject([]);\n        this.inheritFiltersChanges$ = new BehaviorSubject(true);\n        this.refresh$ = new BehaviorSubject(true);\n        this.destroy$ = new Subject();\n    }\n    ngOnInit() {\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPage')), map(page => (!page ? 1 : +page)), startWith(1), distinctUntilChanged());\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPerPage')), map(perPage => (!perPage ? 10 : +perPage)), startWith(10), distinctUntilChanged());\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(filter(() => this.previewUpdatedFilters), tap(() => this.setContentsPageNumber(1)), startWith([]));\n        const inheritFiltersChanges$ = this.inheritFiltersChanges$.asObservable().pipe(filter(() => this.inheritFilters != null), distinctUntilChanged(), tap(() => this.setContentsPageNumber(1)), startWith(true));\n        const fetchUpdate$ = combineLatest(this.collectionIdChange$, this.parentIdChange$, this.contentsCurrentPage$, this.contentsItemsPerPage$, filterTerm$, filterChanges$, inheritFiltersChanges$, this.refresh$);\n        const collection$ = fetchUpdate$.pipe(takeUntil(this.destroy$), tap(() => (this.isLoading = true)), debounceTime(50), switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters, inheritFilters]) => {\n            const take = itemsPerPage;\n            const skip = (currentPage - 1) * itemsPerPage;\n            if (filters.length && this.previewUpdatedFilters) {\n                const filterClause = filterTerm\n                    ? { name: { contains: filterTerm } }\n                    : undefined;\n                return this.dataService.collection\n                    .previewCollectionVariants({\n                    parentId,\n                    filters,\n                    inheritFilters,\n                }, {\n                    take,\n                    skip,\n                    filter: filterClause,\n                })\n                    .mapSingle(data => data.previewCollectionVariants)\n                    .pipe(catchError(() => of({ items: [], totalItems: 0 })));\n            }\n            else if (id) {\n                return this.dataService.collection\n                    .getCollectionContents(id, take, skip, filterTerm)\n                    .mapSingle(data => data.collection?.productVariants);\n            }\n            else {\n                return of(null);\n            }\n        }), tap(() => (this.isLoading = false)), finalize(() => (this.isLoading = false)));\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\n    }\n    ngOnChanges(changes) {\n        if ('collectionId' in changes) {\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\n        }\n        if ('parentId' in changes) {\n            this.parentIdChange$.next(changes.parentId.currentValue);\n        }\n        if ('inheritFilters' in changes) {\n            this.inheritFiltersChanges$.next(changes.inheritFilters.currentValue);\n        }\n        if ('updatedFilters' in changes) {\n            if (this.updatedFilters) {\n                this.filterChanges$.next(this.updatedFilters);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    setContentsPageNumber(page) {\n        this.setParam('contentsPage', page);\n    }\n    setContentsItemsPerPage(perPage) {\n        this.setParam('contentsPerPage', perPage);\n    }\n    refresh() {\n        this.refresh$.next(true);\n    }\n    setParam(key, value) {\n        this.router.navigate(['./'], {\n            relativeTo: this.route,\n            queryParams: {\n                [key]: value,\n            },\n            queryParamsHandling: 'merge',\n            replaceUrl: true,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionContentsComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: { collectionId: \"collectionId\", parentId: \"parentId\", inheritFilters: \"inheritFilters\", updatedFilters: \"updatedFilters\", previewUpdatedFilters: \"previewUpdatedFilters\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: TemplateRef, descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionContentsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-contents', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.DataService }], propDecorators: { collectionId: [{\n                type: Input\n            }], parentId: [{\n                type: Input\n            }], inheritFilters: [{\n                type: Input\n            }], updatedFilters: [{\n                type: Input\n            }], previewUpdatedFilters: [{\n                type: Input\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n\nclass CollectionDataTableComponent extends DataTable2Component {\n    constructor(changeDetectorRef, localStorageService, dataService, dragDrop) {\n        super(changeDetectorRef, localStorageService, dataService);\n        this.changeDetectorRef = changeDetectorRef;\n        this.localStorageService = localStorageService;\n        this.dataService = dataService;\n        this.dragDrop = dragDrop;\n        this.changeOrder = new EventEmitter();\n        this.dragRefs = [];\n        this.absoluteIndex = {};\n        this.sortPredicate = (index, item) => {\n            const itemAtIndex = this.dropList.getSortedItems()[index];\n            return itemAtIndex?.data.collection.parentId === item.data.collection.parentId;\n        };\n    }\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n        if (changes.subCollections || changes.items) {\n            const allCollections = [];\n            for (const collection of this.items ?? []) {\n                allCollections.push(collection);\n                const subCollectionMatches = this.getSubcollections(collection);\n                allCollections.push(...subCollectionMatches.flat());\n            }\n            allCollections.forEach((collection, index) => (this.absoluteIndex[collection.id] = index));\n        }\n    }\n    ngAfterViewInit() {\n        this.collectionRowList.changes.subscribe((val) => {\n            this.dropList.getSortedItems().forEach(item => this.dropList.removeItem(item));\n            for (const ref of val.toArray()) {\n                ref.dropContainer = this.dropList;\n                ref._dragRef._withDropContainer(this.dropList._dropListRef);\n                this.dropList.addItem(ref);\n            }\n        });\n    }\n    getSubcollections(item) {\n        return this.subCollections?.filter(c => c.parentId === item.id) ?? [];\n    }\n    onDrop(event) {\n        const isTopLevel = event.item.data.collection.breadcrumbs.length === 2;\n        const pageIndexOffset = isTopLevel ? (this.currentPage - 1) * this.itemsPerPage : 0;\n        const parentId = event.item.data.collection.parentId;\n        const parentIndex = this.items.findIndex(i => i.id === parentId);\n        const adjustedIndex = pageIndexOffset + event.currentIndex - parentIndex - 1;\n        this.changeOrder.emit({\n            collectionId: event.item.data.collection.id,\n            index: adjustedIndex,\n            parentId: event.item.data.collection.parentId,\n        });\n        if (isTopLevel) {\n            this.items = [...this.items];\n            this.items.splice(event.previousIndex, 1);\n            this.items.splice(event.currentIndex, 0, event.item.data.collection);\n        }\n        else {\n            const parent = this.items.find(i => i.id === parentId);\n            if (parent) {\n                const subCollections = this.getSubcollections(parent);\n                const adjustedPreviousIndex = pageIndexOffset + event.previousIndex - parentIndex - 1;\n                subCollections.splice(adjustedPreviousIndex, 1);\n                subCollections.splice(event.currentIndex, 0, event.item.data.collection);\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionDataTableComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.LocalStorageService }, { token: i1.DataService }, { token: i2$1.DragDrop }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: { subCollections: \"subCollections\" }, outputs: { changeOrder: \"changeOrder\" }, viewQueries: [{ propertyName: \"dropList\", first: true, predicate: CdkDropList, descendants: true, static: true }, { propertyName: \"collectionRowList\", predicate: [\"collectionRow\"], descendants: true, read: CdkDrag }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgComponentOutlet, selector: \"[ngComponentOutlet]\", inputs: [\"ngComponentOutlet\", \"ngComponentOutletInputs\", \"ngComponentOutletInjector\", \"ngComponentOutletContent\", \"ngComponentOutletNgModule\", \"ngComponentOutletNgModuleFactory\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.EmptyPlaceholderComponent, selector: \"vdr-empty-placeholder\", inputs: [\"emptyStateLabel\"] }, { kind: \"component\", type: i1.UiExtensionPointComponent, selector: \"vdr-ui-extension-point\", inputs: [\"locationId\", \"metadata\", \"topPx\", \"leftPx\", \"display\", \"api\"] }, { kind: \"component\", type: i1.DataTableFiltersComponent, selector: \"vdr-data-table-filters\", inputs: [\"filters\", \"filterWithValue\"] }, { kind: \"component\", type: i1.DataTableColumnPickerComponent, selector: \"vdr-data-table-colum-picker\", inputs: [\"columns\", \"uiLanguage\"], outputs: [\"reorder\", \"resetColumns\"] }, { kind: \"component\", type: i1.DataTableFilterPresetsComponent, selector: \"vdr-data-table-filter-presets\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"component\", type: i1.AddFilterPresetButtonComponent, selector: \"vdr-add-filter-preset-button\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionDataTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-data-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);color:var(--color-weight-700);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap;background-color:transparent}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1);color:var(--color-text-100)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.LocalStorageService }, { type: i1.DataService }, { type: i2$1.DragDrop }], propDecorators: { subCollections: [{\n                type: Input\n            }], changeOrder: [{\n                type: Output\n            }], dropList: [{\n                type: ViewChild,\n                args: [CdkDropList, { static: true }]\n            }], collectionRowList: [{\n                type: ViewChildren,\n                args: ['collectionRow', { read: CdkDrag }]\n            }] } });\n\nconst COLLECTION_DETAIL_QUERY = gql `\r\n    query CollectionDetailQuery($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\nclass CollectionDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService, localStorageService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.localStorageService = localStorageService;\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\n            description: '',\n            visible: false,\n            inheritFilters: true,\n            filters: this.formBuilder.array([]),\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.assetChanges = {};\n        this.filters = [];\n        this.allFilters = [];\n        this.livePreview = false;\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\n        this.filterRemoved$ = new Subject();\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\n            this.allFilters = res.collectionFilters;\n        });\n        const filtersFormArray = this.detailForm.get('filters');\n        const inheritFiltersControl = this.detailForm.get('inheritFilters');\n        this.inheritFilters$ = inheritFiltersControl.valueChanges.pipe(distinctUntilChanged());\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(debounceTime(200), filter(() => filtersFormArray.touched), map(() => this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\n            // ensure all the arguments have valid values. E.g. a newly-added\n            // filter will not yet have valid values\n            for (const arg of _filter.arguments) {\n                if (arg.value === '') {\n                    return false;\n                }\n            }\n            return true;\n        })));\n        this.parentId$ = this.route.paramMap.pipe(map(pm => pm.get('parentId') || undefined), switchMap(parentId => {\n            if (parentId) {\n                return of(parentId);\n            }\n            else {\n                return this.entity$.pipe(map(collection => collection.parent?.id));\n            }\n        }));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    getFilterDefinition(_filter) {\n        return this.allFilters.find(f => f.code === _filter.code);\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    /**\n     * If creating a new Collection, automatically generate the slug based on the collection name.\n     */\n    updateSlug(nameValue) {\n        const slugControl = this.detailForm.get(['slug']);\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n        }\n    }\n    addFilter(collectionFilter) {\n        const filtersArray = this.detailForm.get('filters');\n        const argsHash = collectionFilter.args.reduce((output, arg) => ({\n            ...output,\n            [arg.name]: getConfigArgValue(arg.value),\n        }), {});\n        filtersArray.push(this.formBuilder.control({\n            code: collectionFilter.code,\n            args: argsHash,\n        }));\n        this.filters.push({\n            code: collectionFilter.code,\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\n        });\n    }\n    removeFilter(index) {\n        const filtersArray = this.detailForm.get('filters');\n        if (index !== -1) {\n            filtersArray.removeAt(index);\n            filtersArray.markAsDirty();\n            filtersArray.markAsTouched();\n            this.filters.splice(index, 1);\n            this.filterRemoved$.next();\n        }\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const input = this.getUpdatedCollection({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            languageCode: this.languageCode,\n            name: '',\n            slug: '',\n            isPrivate: false,\n            breadcrumbs: [],\n            description: '',\n            featuredAsset: null,\n            assets: [],\n            translations: [],\n            inheritFilters: true,\n            filters: [],\n            parent: {},\n            children: null,\n        }, this.detailForm, this.languageCode);\n        const parentId = this.route.snapshot.paramMap.get('parentId');\n        if (parentId) {\n            input.parentId = parentId;\n        }\n        this.dataService.collection.createCollection(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Collection',\n            });\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Collection',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([category, languageCode]) => {\n            const input = this.getUpdatedCollection(category, this.detailForm, languageCode);\n            return this.dataService.collection.updateCollection(input);\n        }))\n            .subscribe(() => {\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Collection',\n            });\n            this.contentsComponent.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Collection',\n            });\n        });\n    }\n    canDeactivate() {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n    toggleLivePreview() {\n        this.livePreview = !this.livePreview;\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\n    }\n    trackByFn(index, item) {\n        return JSON.stringify(item);\n    }\n    /**\n     * Sets the values of the form on changes to the category or current language.\n     */\n    setFormValues(entity, languageCode) {\n        const currentTranslation = findTranslation(entity, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            visible: !entity.isPrivate,\n            inheritFilters: entity.inheritFilters,\n        });\n        const formArray = this.detailForm.get('filters');\n        if (formArray.length !== entity.filters.length) {\n            formArray.clear();\n            this.filters = [];\n            entity.filters.forEach(f => this.addFilter(f));\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity, currentTranslation);\n        }\n    }\n    /**\n     * Given a category and the value of the form, this method creates an updated copy of the category which\n     * can then be persisted to the API.\n     */\n    getUpdatedCollection(category, form, languageCode) {\n        const updatedCategory = createUpdatedTranslatable({\n            translatable: category,\n            updatedFields: form.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: category.name || '',\n                slug: category.slug || '',\n                description: category.description || '',\n            },\n        });\n        return {\n            ...updatedCategory,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            isPrivate: !form.value.visible,\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\n        };\n    }\n    /**\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\n     */\n    mapOperationsToInputs(operations, formValueOperations) {\n        return operations.map((o, i) => ({\n            code: o.code,\n            arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => ({\n                name,\n                value: encodeConfigArgValue(value),\n            })),\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionDetailComponent, selector: \"vdr-collection-detail\", viewQueries: [{ propertyName: \"contentsComponent\", first: true, predicate: [\"collectionContents\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field [label]=\\\"'catalog.filter-inheritance' | translate\\\" for=\\\"inheritFilters\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:last-child{font-weight:600}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field [label]=\\\"'catalog.filter-inheritance' | translate\\\" for=\\\"inheritFilters\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:last-child{font-weight:600}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.LocalStorageService }], propDecorators: { contentsComponent: [{\n                type: ViewChild,\n                args: ['collectionContents']\n            }] } });\n\n/**\n * Removes the root collection and self breadcrumb from the collection breadcrumb list.\n */\nclass CollectionBreadcrumbPipe {\n    transform(value) {\n        return value?.breadcrumbs.slice(1, -1);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionBreadcrumbPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionBreadcrumbPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'collectionBreadcrumb',\n                }]\n        }] });\n\nclass MoveCollectionsDialogComponent {\n    constructor(dataService, i18nService) {\n        this.dataService = dataService;\n        this.i18nService = i18nService;\n        this.searchTermControl = new FormControl('');\n        this.currentPage$ = new BehaviorSubject(1);\n        this.itemsPerPage$ = new BehaviorSubject(10);\n        this.expandedIds$ = new Subject();\n        this.expandedIds = [];\n    }\n    ngOnInit() {\n        const getCollectionsResult = this.dataService.collection.getCollections();\n        const searchTerm$ = this.searchTermControl.valueChanges.pipe(debounceTime(250), distinctUntilChanged(), startWith(''));\n        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());\n        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());\n        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(([searchTerm, currentPage, itemsPerPage]) => {\n            const topLevelOnly = searchTerm === '';\n            getCollectionsResult.ref.refetch({\n                options: {\n                    skip: (currentPage - 1) * itemsPerPage,\n                    take: itemsPerPage,\n                    filter: {\n                        name: { contains: searchTerm },\n                    },\n                    topLevelOnly,\n                },\n            });\n        });\n        const rootCollectionId$ = this.dataService.collection\n            .getCollections({\n            take: 1,\n            topLevelOnly: true,\n        })\n            .mapSingle(data => data.collections.items[0].parentId);\n        this.items$ = combineLatest(getCollectionsResult.mapStream(({ collections }) => collections), rootCollectionId$).pipe(map(([collections, rootCollectionId]) => [\n            ...(rootCollectionId\n                ? [\n                    {\n                        id: rootCollectionId,\n                        name: this.i18nService.translate('catalog.root-collection'),\n                        slug: '',\n                        parentId: '__',\n                        position: 0,\n                        featuredAsset: null,\n                        children: [],\n                        breadcrumbs: [],\n                        isPrivate: false,\n                        createdAt: '',\n                        updatedAt: '',\n                    },\n                ]\n                : []),\n            ...collections.items,\n        ]));\n        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);\n        this.subCollections$ = this.expandedIds$.pipe(tap(val => (this.expandedIds = val)), switchMap(ids => {\n            if (ids.length) {\n                return this.dataService.collection\n                    .getCollections({\n                    take: 999,\n                    filter: {\n                        parentId: { in: ids },\n                    },\n                })\n                    .mapStream(data => data.collections.items);\n            }\n            else {\n                return of([]);\n            }\n        }));\n    }\n    toggleExpanded(collection) {\n        let expandedIds = this.expandedIds;\n        if (!expandedIds.includes(collection.id)) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.expandedIds$.next(expandedIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: MoveCollectionsDialogComponent, deps: [{ token: i1.DataService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: MoveCollectionsDialogComponent, selector: \"vdr-move-collections-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: MoveCollectionsDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-move-collections-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.I18nService }] });\n\nconst deleteCollectionsBulkAction = createBulkDeleteAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCollection) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.collection.deleteCollections(ids).pipe(map(res => res.deleteCollections)),\n});\nconst moveCollectionsBulkAction = {\n    location: 'collection-list',\n    label: marker('catalog.move-collections'),\n    icon: 'drag-handle',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateCollection),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .fromComponent(MoveCollectionsDialogComponent, {\n            size: 'xl',\n            closable: true,\n        })\n            .pipe(switchMap(result => {\n            if (result) {\n                const inputs = selection.map(c => ({\n                    collectionId: c.id,\n                    parentId: result.id,\n                    index: 0,\n                }));\n                return dataService.collection.moveCollection(inputs);\n            }\n            else {\n                return EMPTY;\n            }\n        }))\n            .subscribe(result => {\n            notificationService.success(marker('catalog.move-collections-success'), {\n                count: selection.length,\n            });\n            clearSelection();\n            hostComponent.refresh();\n        });\n    },\n};\nconst assignCollectionsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateCollection),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, collectionIds, channelIds) => channelIds.map(channelId => dataService.collection\n        .assignCollectionsToChannel({\n        collectionIds,\n        channelId,\n    })\n        .pipe(map(res => res.assignCollectionsToChannel))),\n});\nconst removeCollectionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'collection-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteCollection),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, collectionIds, channelId) => dataService.collection\n        .removeCollectionsFromChannel({\n        channelId: channelId,\n        collectionIds,\n    })\n        .pipe(map(res => res.removeCollectionsFromChannel)),\n});\nconst duplicateCollectionsBulkAction = {\n    location: 'collection-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Collection',\n                title: marker('catalog.duplicate-collections'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nclass CollectionListComponent extends TypedBaseListComponent {\n    constructor(dataService, notificationService) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.expandedIds = [];\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'slug',\n            label: marker('common.slug'),\n            type: { kind: 'text' },\n            filterField: 'slug',\n        })\n            .addFilter({\n            name: 'visibility',\n            type: { kind: 'boolean' },\n            label: marker('common.visibility'),\n            toFilterInput: value => ({\n                isPrivate: { eq: !value },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('position', 'ASC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'slug' })\n            .addSort({ name: 'position' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetCollectionListDocument,\n            getItems: data => data.collections,\n            setVariables: (skip, _take) => {\n                const topLevelOnly = this.searchTermControl.value === '' && this.filters.activeFilters.length === 0\n                    ? true\n                    : undefined;\n                return {\n                    options: {\n                        skip,\n                        take: _take,\n                        filter: {\n                            name: { contains: this.searchTermControl.value },\n                            ...this.filters.createFilterInput(),\n                        },\n                        topLevelOnly,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this.activeCollectionId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\n        const expandedIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('expanded')), distinctUntilChanged(), map(ids => (ids ? ids.split(',') : [])));\n        expandedIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\n            this.expandedIds = ids;\n        });\n        this.subCollections$ = combineLatest(expandedIds$, this.refresh$).pipe(switchMap(([ids]) => {\n            if (ids.length) {\n                return this.dataService.collection\n                    .getCollections({\n                    take: 999,\n                    filter: {\n                        parentId: { in: ids },\n                    },\n                })\n                    .mapStream(data => data.collections.items);\n            }\n            else {\n                return of([]);\n            }\n        }));\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\n            if (id) {\n                const match = [...collections, ...subCollections].find(c => c.id === id);\n                return match ? match.name : '';\n            }\n            return '';\n        }));\n        this.activeCollectionIndex$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\n            if (id) {\n                const allCollections = [];\n                for (const collection of collections) {\n                    allCollections.push(collection);\n                    const subCollectionMatches = subCollections.filter(c => c.parentId && c.parentId === collection.id);\n                    allCollections.push(...subCollectionMatches);\n                }\n                return allCollections.findIndex(c => c.id === id);\n            }\n            return -1;\n        }));\n    }\n    onRearrange(event) {\n        this.dataService.collection.moveCollection([event]).subscribe({\n            next: () => {\n                this.notificationService.success(marker('common.notify-saved-changes'));\n                this.refresh();\n            },\n            error: err => {\n                this.notificationService.error(marker('common.notify-save-changes-error'));\n            },\n        });\n    }\n    closeContents() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    toggleExpanded(collection) {\n        let expandedIds = this.expandedIds;\n        if (!expandedIds.includes(collection.id)) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: expandedIds.filter(id => !!id).join(','),\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionListComponent, selector: \"vdr-collection-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        [queryParams]=\\\"{ contentsPage: 1 }\\\"\\r\\n                        queryParamsHandling=\\\"merge\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"collection-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        [queryParams]=\\\"{ contentsPage: 1 }\\\"\\r\\n                        queryParamsHandling=\\\"merge\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }] });\n\n/**\n * Facilitates communication between the CollectionTreeComponent and child CollectionTreeNodeComponents\n * without introducing a cyclic dependency.\n */\nclass CollectionTreeService {\n    constructor() {\n        this.allMoveListItems = [];\n        this._rearrange$ = new Subject();\n        this._delete$ = new Subject();\n        this.rearrange$ = this._rearrange$.asObservable();\n        this.delete$ = this._delete$.asObservable();\n    }\n    ngOnDestroy() {\n        this._rearrange$.complete();\n        this._delete$.complete();\n    }\n    setCollectionTree(tree) {\n        this.collectionTree = tree;\n    }\n    resetMoveList() {\n        this.allMoveListItems = [];\n    }\n    getMoveListItems(collection) {\n        if (this.allMoveListItems.length === 0) {\n            this.allMoveListItems = this.calculateAllMoveListItems();\n        }\n        return this.allMoveListItems.filter(item => item.id !== collection.id &&\n            !item.ancestorIdPath.has(collection.id) &&\n            item.id !== collection.parent?.id);\n    }\n    onDrop(event) {\n        const item = event.item.data;\n        const newParent = event.container.data;\n        const newParentId = newParent.id;\n        if (newParentId == null) {\n            throw new Error(`Could not determine the ID of the root Collection`);\n        }\n        this._rearrange$.next({\n            collectionId: item.id,\n            parentId: newParentId,\n            index: event.currentIndex,\n        });\n    }\n    onMove(event) {\n        this._rearrange$.next(event);\n    }\n    onDelete(id) {\n        this._delete$.next(id);\n    }\n    calculateAllMoveListItems() {\n        const visit = (node, parentPath, ancestorIdPath, output) => {\n            const path = parentPath.concat(node.name);\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\n            node.children.forEach(child => visit(child, path, new Set([...ancestorIdPath, node.id]), output));\n            return output;\n        };\n        return visit(this.collectionTree, [], new Set(), []);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n\nclass CollectionTreeNodeComponent {\n    constructor(parent, dataService, collectionTreeService, router, route, changeDetectorRef) {\n        this.parent = parent;\n        this.dataService = dataService;\n        this.collectionTreeService = collectionTreeService;\n        this.router = router;\n        this.route = route;\n        this.changeDetectorRef = changeDetectorRef;\n        this.depth = 0;\n        this.expandAll = false;\n        this.moveListItems = [];\n        if (parent) {\n            this.depth = parent.depth + 1;\n        }\n    }\n    ngOnInit() {\n        this.parentName = this.collectionTree.name || '<root>';\n        const permissions$ = this.dataService.client\n            .userStatus()\n            .mapStream(data => data.userStatus.permissions)\n            .pipe(shareReplay(1));\n        this.hasUpdatePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection)));\n        this.hasDeletePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection)));\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n    ngOnChanges(changes) {\n        const expandAllChange = changes['expandAll'];\n        if (expandAllChange) {\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\n                this.collectionTree.children.forEach(c => (c.expanded = false));\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n    trackByFn(index, item) {\n        return item.id;\n    }\n    toggleExpanded(collection) {\n        collection.expanded = !collection.expanded;\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\n        if (collection.expanded) {\n            expandedIds.push(collection.id);\n        }\n        else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: expandedIds.filter(id => !!id).join(','),\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n    getMoveListItems(collection) {\n        this.moveListItems = this.collectionTreeService.getMoveListItems(collection);\n    }\n    move(collection, parentId) {\n        this.collectionTreeService.onMove({\n            index: 0,\n            parentId,\n            collectionId: collection.id,\n        });\n    }\n    moveUp(collection, currentIndex) {\n        if (!collection.parent) {\n            return;\n        }\n        this.collectionTreeService.onMove({\n            index: currentIndex - 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n    moveDown(collection, currentIndex) {\n        if (!collection.parent) {\n            return;\n        }\n        this.collectionTreeService.onMove({\n            index: currentIndex + 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n    drop(event) {\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\n        this.collectionTreeService.onDrop(event);\n    }\n    delete(id) {\n        this.collectionTreeService.onDelete(id);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeNodeComponent, deps: [{ token: CollectionTreeNodeComponent, optional: true, skipSelf: true }, { token: i1.DataService }, { token: CollectionTreeService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: { collectionTree: \"collectionTree\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", selectionManager: \"selectionManager\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeNodeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-tree-node', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"] }]\n        }], ctorParameters: () => [{ type: CollectionTreeNodeComponent, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Optional\n                }] }, { type: i1.DataService }, { type: CollectionTreeService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.ChangeDetectorRef }], propDecorators: { collectionTree: [{\n                type: Input\n            }], activeCollectionId: [{\n                type: Input\n            }], expandAll: [{\n                type: Input\n            }], selectionManager: [{\n                type: Input\n            }] } });\n\n/**\n * Builds a tree from an array of nodes which have a parent.\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\n */\nfunction arrayToTree(nodes, currentState, expandedIds = []) {\n    const topLevelNodes = [];\n    const mappedArr = {};\n    const currentStateMap = treeToMap(currentState);\n    // First map the nodes of the array to an object -> create a hash table.\n    for (const node of nodes) {\n        mappedArr[node.id] = { ...node, children: [] };\n    }\n    for (const id of nodes.map(n => n.id)) {\n        if (mappedArr.hasOwnProperty(id)) {\n            const mappedElem = mappedArr[id];\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\n            const parent = mappedElem.parent;\n            if (!parent) {\n                continue;\n            }\n            // If the element is not at the root level, add it to its parent array of children.\n            const parentIsRoot = !mappedArr[parent.id];\n            if (!parentIsRoot) {\n                if (mappedArr[parent.id]) {\n                    mappedArr[parent.id].children.push(mappedElem);\n                }\n                else {\n                    mappedArr[parent.id] = { children: [mappedElem] };\n                }\n            }\n            else {\n                topLevelNodes.push(mappedElem);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent.id : undefined;\n    return { id: rootId, children: topLevelNodes };\n}\n/**\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\n * tree.\n */\nfunction treeToMap(tree) {\n    const nodeMap = new Map();\n    function visit(node) {\n        nodeMap.set(node.id, node);\n        node.children.forEach(visit);\n    }\n    if (tree) {\n        visit(tree);\n    }\n    return nodeMap;\n}\n\nclass CollectionTreeComponent {\n    constructor(collectionTreeService) {\n        this.collectionTreeService = collectionTreeService;\n        this.expandAll = false;\n        this.expandedIds = [];\n        this.rearrange = new EventEmitter();\n        this.deleteCollection = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if ('collections' in changes && this.collections) {\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\n            this.collectionTreeService.setCollectionTree(this.collectionTree);\n            this.collectionTreeService.resetMoveList();\n        }\n    }\n    ngOnInit() {\n        this.collectionTreeService.rearrange$.subscribe(event => this.rearrange.emit(event));\n        this.collectionTreeService.delete$.subscribe(id => this.deleteCollection.emit(id));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeComponent, deps: [{ token: CollectionTreeService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CollectionTreeComponent, selector: \"vdr-collection-tree\", inputs: { collections: \"collections\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", expandedIds: \"expandedIds\", selectionManager: \"selectionManager\" }, outputs: { rearrange: \"rearrange\", deleteCollection: \"deleteCollection\" }, providers: [CollectionTreeService], usesOnChanges: true, ngImport: i0, template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CollectionTreeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-collection-tree', changeDetection: ChangeDetectionStrategy.OnPush, providers: [CollectionTreeService], template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: CollectionTreeService }], propDecorators: { collections: [{\n                type: Input\n            }], activeCollectionId: [{\n                type: Input\n            }], expandAll: [{\n                type: Input\n            }], expandedIds: [{\n                type: Input\n            }], selectionManager: [{\n                type: Input\n            }], rearrange: [{\n                type: Output\n            }], deleteCollection: [{\n                type: Output\n            }] } });\n\nclass ConfirmVariantDeletionDialogComponent {\n    constructor() {\n        this.variants = [];\n    }\n    confirm() {\n        this.resolveWith(true);\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ConfirmVariantDeletionDialogComponent, selector: \"vdr-confirm-variant-deletion-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-confirm-variant-deletion-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nclass CreateFacetValueDialogComponent {\n    constructor(formBuilder) {\n        this.formBuilder = formBuilder;\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            code: ['', Validators.required],\n        });\n    }\n    updateCode() {\n        const nameControl = this.form.get('name');\n        const codeControl = this.form.get('code');\n        if (nameControl && codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\n        }\n    }\n    confirm() {\n        const { name, code } = this.form.value;\n        if (!name || !code) {\n            return;\n        }\n        this.resolveWith({\n            facetId: this.facetId,\n            code,\n            translations: [{ languageCode: this.languageCode, name }],\n        });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateFacetValueDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CreateFacetValueDialogComponent, selector: \"vdr-create-facet-value-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-facet-value' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CreateFacetValueDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-create-facet-value-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-facet-value' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i2.FormBuilder }] });\n\nconst FACET_DETAIL_QUERY = gql `\n    query GetFacetDetail($id: ID!, $facetValueListOptions: FacetValueListOptions) {\n        facet(id: $id) {\n            ...FacetWithValueList\n        }\n    }\n    ${FACET_WITH_VALUE_LIST_FRAGMENT}\n`;\nclass FacetDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\n        this.detailForm = this.formBuilder.group({\n            facet: this.formBuilder.group({\n                code: ['', Validators.required],\n                name: '',\n                visible: true,\n                customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n            }),\n            values: this.formBuilder.record({}),\n        });\n        this.currentPage = 1;\n        this.itemsPerPage = 10;\n        this.totalItems = 0;\n        this.filterControl = new FormControl('');\n        this.values$ = new BehaviorSubject([]);\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\n    }\n    ngOnInit() {\n        this.init();\n        this.filterControl.valueChanges\n            .pipe(debounceTime(200), takeUntil(this.destroy$))\n            .subscribe(filterTerm => {\n            this.currentPage = 1;\n            this.fetchFacetValues(this.currentPage, this.itemsPerPage, filterTerm);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['facet', 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    updateValueCode(currentCode, nameValue, valueId) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['values', valueId, 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    customValueFieldIsSet(index, name) {\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\n    }\n    addFacetValue() {\n        this.modalService\n            .fromComponent(CreateFacetValueDialogComponent, {\n            locals: {\n                languageCode: this.languageCode,\n                facetId: this.id,\n            },\n        })\n            .pipe(switchMap(result => {\n            if (!result) {\n                return EMPTY;\n            }\n            else {\n                return this.dataService.facet.createFacetValues([result]);\n            }\n        }))\n            .subscribe(result => {\n            if (result.createFacetValues) {\n                this.notificationService.success(marker('common.notify-create-success'), {\n                    entity: 'FacetValue',\n                });\n                this.currentPage = 1;\n                this.fetchFacetValues(this.currentPage, this.itemsPerPage);\n            }\n        });\n    }\n    create() {\n        const facetForm = this.detailForm.get('facet');\n        if (!facetForm || !facetForm.dirty) {\n            return;\n        }\n        const newFacet = this.getUpdatedFacet({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            isPrivate: false,\n            languageCode: this.languageCode,\n            name: '',\n            code: '',\n            translations: [],\n        }, facetForm, this.languageCode);\n        this.dataService.facet.createFacet(newFacet).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Facet' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Facet',\n            });\n        });\n    }\n    save() {\n        const valuesFormRecord = this.detailForm.get('values');\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([facet, languageCode]) => {\n            const facetForm = this.detailForm.get('facet');\n            const updateOperations = [];\n            if (facetForm && facetForm.dirty) {\n                const updatedFacetInput = this.getUpdatedFacet(facet, facetForm, languageCode);\n                if (updatedFacetInput) {\n                    updateOperations.push(this.dataService.facet.updateFacet(updatedFacetInput));\n                }\n            }\n            if (valuesFormRecord && valuesFormRecord.dirty) {\n                const updatedValues = this.getUpdatedFacetValues(valuesFormRecord, languageCode);\n                if (updatedValues.length) {\n                    updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\n                }\n            }\n            return forkJoin(updateOperations);\n        }))\n            .subscribe(() => {\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Facet' });\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Facet',\n            });\n        });\n    }\n    deleteFacetValue(facetValueId) {\n        this.showModalAndDelete(facetValueId)\n            .pipe(switchMap(response => {\n            if (response.result === DeletionResult.DELETED) {\n                return [true];\n            }\n            else {\n                return this.showModalAndDelete(facetValueId, response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\n            }\n        }), switchMap(deleted => deleted\n            ? this.dataService.query(GetFacetDetailDocument, {\n                id: this.id,\n            }).single$\n            : []))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'FacetValue',\n            });\n            this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'FacetValue',\n            });\n        });\n    }\n    showModalAndDelete(facetValueId, message) {\n        return this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-facet-value'),\n            body: message,\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(result => result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY), map(result => result.deleteFacetValues[0]));\n    }\n    setCurrentPage(newPage) {\n        this.currentPage = newPage;\n        this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n    }\n    setItemsPerPage(itemsPerPage) {\n        this.itemsPerPage = itemsPerPage;\n        this.fetchFacetValues(this.currentPage, this.itemsPerPage, this.filterControl.value);\n    }\n    fetchFacetValues(currentPage, itemsPerPage, filterTerm) {\n        this.dataService\n            .query(FACET_DETAIL_QUERY, {\n            id: this.id,\n            facetValueListOptions: {\n                take: itemsPerPage,\n                skip: (currentPage - 1) * itemsPerPage,\n                sort: {\n                    createdAt: SortOrder$1.DESC,\n                },\n                ...(filterTerm ? { filter: { name: { contains: filterTerm } } } : {}),\n            },\n        })\n            .single$.subscribe(({ facet }) => {\n            if (facet) {\n                this.values$.next([...facet.valueList.items]);\n                this.totalItems = facet.valueList.totalItems;\n                this.setFacetValueFormValues(facet, this.languageCode);\n            }\n        });\n    }\n    /**\n     * Sets the values of the form on changes to the facet or current language.\n     */\n    setFormValues(facet, languageCode) {\n        const currentTranslation = findTranslation(facet, languageCode);\n        this.detailForm.patchValue({\n            facet: {\n                code: facet.code,\n                visible: !facet.isPrivate,\n                name: currentTranslation?.name ?? '',\n            },\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['facet', 'customFields']), facet, currentTranslation);\n        }\n        this.values$.next([...facet.valueList.items]);\n        this.totalItems = facet.valueList.totalItems;\n        this.setFacetValueFormValues(facet, languageCode);\n    }\n    setFacetValueFormValues(facet, languageCode) {\n        const currentValuesFormGroup = this.detailForm.get('values');\n        facet.valueList.items.forEach(value => {\n            const valueTranslation = findTranslation(value, languageCode);\n            const group = {\n                id: value.id,\n                code: value.code,\n                name: valueTranslation ? valueTranslation.name : '',\n            };\n            let valueControl = currentValuesFormGroup.get(value.id);\n            if (!valueControl) {\n                valueControl = this.formBuilder.group(group);\n                currentValuesFormGroup.addControl(value.id, valueControl);\n            }\n            else {\n                valueControl.patchValue(group);\n            }\n            if (this.customValueFields.length) {\n                let customValueFieldsGroup = valueControl.get(['customFields']);\n                if (!customValueFieldsGroup) {\n                    customValueFieldsGroup = new UntypedFormGroup({});\n                    valueControl.addControl('customFields', customValueFieldsGroup);\n                }\n                if (customValueFieldsGroup) {\n                    for (const fieldDef of this.customValueFields) {\n                        const key = fieldDef.name;\n                        const fieldValue = fieldDef.type === 'localeString'\n                            ? valueTranslation?.customFields?.[key]\n                            : value.customFields[key];\n                        const control = customValueFieldsGroup.get(key);\n                        if (control) {\n                            control.setValue(fieldValue);\n                        }\n                        else {\n                            customValueFieldsGroup.addControl(key, new UntypedFormControl(fieldValue));\n                        }\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\n     * can then be persisted to the API.\n     */\n    getUpdatedFacet(facet, facetFormGroup, languageCode) {\n        const input = createUpdatedTranslatable({\n            translatable: facet,\n            updatedFields: facetFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: facet.name || '',\n            },\n        });\n        input.isPrivate = !facetFormGroup.value.visible;\n        return input;\n    }\n    /**\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\n     * which can be persisted to the API via an updateFacetValues mutation.\n     */\n    getUpdatedFacetValues(valuesFormGroup, languageCode) {\n        const dirtyValueValues = Object.values(valuesFormGroup.controls)\n            .filter(c => c.dirty)\n            .map(c => c.value);\n        return dirtyValueValues\n            .map((value, i) => createUpdatedTranslatable({\n            translatable: value,\n            updatedFields: value,\n            customFieldConfig: this.customValueFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: '',\n            },\n        }))\n            .filter(notNullOrUndefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: FacetDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: FacetDetailComponent, selector: \"vdr-facet-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"values$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: totalItems,\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"totalItems\\\"\\r\\n                            (pageChange)=\\\"setCurrentPage($event)\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.EntityInfoComponent, selector: \"vdr-entity-info\", inputs: [\"small\", \"entity\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: FacetDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-facet-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"values$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: totalItems,\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"totalItems\\\"\\r\\n                            (pageChange)=\\\"setCurrentPage($event)\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }] });\n\nconst deleteFacetsBulkAction = createBulkDeleteAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteFacet) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    shouldRetryItem: (response, item) => !!response.message,\n    bulkDelete: (dataService, ids, retrying) => dataService.facet.deleteFacets(ids, retrying).pipe(map(res => res.deleteFacets)),\n});\nconst assignFacetsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateFacet),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, facetIds, channelIds) => channelIds.map(channelId => dataService.facet\n        .assignFacetsToChannel({\n        facetIds,\n        channelId,\n    })\n        .pipe(map(res => res.assignFacetsToChannel))),\n});\nconst removeFacetsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'facet-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteFacet),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, facetIds, channelId, retrying) => dataService.facet\n        .removeFacetsFromChannel({\n        channelId: channelId,\n        facetIds,\n        force: retrying,\n    })\n        .pipe(map(res => res.removeFacetsFromChannel)),\n    isErrorResult: result => (result.__typename === 'FacetInUseError' ? result.message : undefined),\n});\nconst removeFacetsFromChannelBulkAction2 = {\n    location: 'facet-list',\n    label: marker('catalog.remove-from-channel'),\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\n    icon: 'layers',\n    iconClass: 'is-warning',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateFacet) ||\n        userPermissions.includes(Permission.UpdateCatalog),\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const activeChannelId$ = dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        function showModalAndDelete(facetIds, message) {\n            return modalService\n                .dialog({\n                title: marker('catalog.remove-from-channel'),\n                translationVars: {\n                    count: selection.length,\n                },\n                size: message ? 'lg' : 'md',\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: marker('common.cancel') },\n                    {\n                        type: 'danger',\n                        label: message ? marker('common.force-remove') : marker('common.remove'),\n                        returnValue: true,\n                    },\n                ],\n            })\n                .pipe(switchMap(res => res\n                ? activeChannelId$.pipe(switchMap(activeChannelId => activeChannelId\n                    ? dataService.facet.removeFacetsFromChannel({\n                        channelId: activeChannelId,\n                        facetIds,\n                        force: !!message,\n                    })\n                    : EMPTY), map(res2 => res2.removeFacetsFromChannel))\n                : EMPTY));\n        }\n        showModalAndDelete(unique(selection.map(f => f.id)))\n            .pipe(switchMap(result => {\n            let removedCount = selection.length;\n            const errors = [];\n            const errorIds = [];\n            let i = 0;\n            for (const item of result) {\n                if (item.__typename === 'FacetInUseError') {\n                    errors.push(item.message);\n                    errorIds.push(selection[i]?.id);\n                    removedCount--;\n                }\n                i++;\n            }\n            if (0 < errorIds.length) {\n                return showModalAndDelete(errorIds, errors.join('\\n')).pipe(map(result2 => {\n                    const notRemovedCount = result2.filter(r => r.__typename === 'FacetInUseError').length;\n                    return selection.length - notRemovedCount;\n                }));\n            }\n            else {\n                return of(removedCount);\n            }\n        }), switchMap(removedCount => removedCount\n            ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\n                channelCode,\n                removedCount,\n            }))\n            : EMPTY))\n            .subscribe(({ removedCount, channelCode }) => {\n            if (removedCount) {\n                hostComponent.refresh();\n                clearSelection();\n                notificationService.success(marker('catalog.notify-remove-facets-from-channel-success'), {\n                    count: removedCount,\n                    channelCode,\n                });\n            }\n        });\n    },\n};\nconst duplicateFacetsBulkAction = {\n    location: 'facet-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Facet',\n                title: marker('catalog.duplicate-facets'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nconst FACET_LIST_QUERY = gql `\r\n    query GetFacetList($options: FacetListOptions, $facetValueListOptions: FacetValueListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValueList\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUE_LIST_FRAGMENT}\r\n`;\nclass FacetListComponent extends TypedBaseListComponent {\n    constructor(dataService) {\n        super();\n        this.dataService = dataService;\n        this.initialLimit = 3;\n        this.displayLimit = {};\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'visibility',\n            type: { kind: 'boolean' },\n            label: marker('common.visibility'),\n            toFilterInput: value => ({\n                isPrivate: { eq: !value },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'id' })\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetFacetListDocument,\n            getItems: data => data.facets,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n                facetValueListOptions: {\n                    take: 100,\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    toggleDisplayLimit(facet) {\n        if (this.displayLimit[facet.id] === facet.valueList.items.length) {\n            this.displayLimit[facet.id] = this.initialLimit;\n        }\n        else {\n            this.displayLimit[facet.id] = facet.valueList.items.length;\n        }\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: FacetListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: FacetListComponent, selector: \"vdr-facet-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3$1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: FacetListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-facet-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"facet-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\nclass GenerateProductVariantsComponent {\n    constructor(dataService, formBuilder) {\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.variantsChange = new EventEmitter();\n        this.optionGroups = [];\n        this.variantFormValues = {};\n        this.selectedStockLocationId = null;\n    }\n    ngOnInit() {\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\n        });\n        this.stockLocations$ = this.dataService\n            .query(GetStockLocationListDocument, {\n            options: {\n                take: 999,\n            },\n        })\n            .refetchOnChannelChange()\n            .mapStream(({ stockLocations }) => stockLocations.items)\n            .pipe(tap(items => {\n            if (items.length) {\n                this.selectedStockLocationId = items[0].id;\n            }\n        }));\n        this.generateVariants();\n    }\n    addOption() {\n        this.optionGroups.push({ name: '', values: [] });\n        const index = this.optionGroups.length - 1;\n        setTimeout(() => {\n            const input = this.groupNameInputs.get(index)?.nativeElement;\n            input?.focus();\n        });\n    }\n    removeOption(name) {\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\n        this.generateVariants();\n    }\n    generateVariants() {\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\n        const groups = totalValuesCount\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\n            : [[DEFAULT_VARIANT_CODE]];\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\n        this.variants.forEach((variant, index) => {\n            if (!this.variantFormValues[variant.id]) {\n                const formGroup = this.formBuilder.nonNullable.group({\n                    optionValues: [variant.values],\n                    enabled: true,\n                    price: this.copyFromDefault(variant.id, 'price', 0),\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\n                });\n                formGroup.valueChanges.subscribe(() => this.onFormChange());\n                if (index === 0) {\n                    formGroup.get('price')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('price', formGroup.get('price'));\n                    });\n                    formGroup.get('sku')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('sku', formGroup.get('sku'));\n                    });\n                    formGroup.get('stock')?.valueChanges.subscribe(value => {\n                        this.copyValuesToPristine('stock', formGroup.get('stock'));\n                    });\n                }\n                this.variantFormValues[variant.id] = formGroup;\n            }\n        });\n        this.onFormChange();\n    }\n    trackByFn(index, variant) {\n        return variant.values.join('|');\n    }\n    handleEnter(event, optionValueInputComponent) {\n        event.preventDefault();\n        event.stopPropagation();\n        optionValueInputComponent.focus();\n    }\n    copyValuesToPristine(field, formControl) {\n        if (!formControl) {\n            return;\n        }\n        Object.values(this.variantFormValues).forEach(formGroup => {\n            const correspondingFormControl = formGroup.get(field);\n            if (correspondingFormControl && correspondingFormControl.pristine) {\n                correspondingFormControl.setValue(formControl.value, { emitEvent: false });\n            }\n        });\n    }\n    onFormChange() {\n        const variantsToCreate = this.variants\n            .map(v => this.variantFormValues[v.id].value)\n            .filter(v => v.enabled);\n        this.variantsChange.emit({\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\n            variants: variantsToCreate,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            stockLocationId: this.selectedStockLocationId,\n        });\n    }\n    copyFromDefault(variantId, prop, value) {\n        return variantId !== DEFAULT_VARIANT_CODE\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value\n            : value;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: GenerateProductVariantsComponent, deps: [{ token: i1.DataService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: { variantsChange: \"variantsChange\" }, viewQueries: [{ propertyName: \"groupNameInputs\", predicate: [\"optionGroupName\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: GenerateProductVariantsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-generate-product-variants', template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i2.FormBuilder }], propDecorators: { variantsChange: [{\n                type: Output\n            }], groupNameInputs: [{\n                type: ViewChildren,\n                args: ['optionGroupName', { read: ElementRef }]\n            }] } });\n\nclass ProductVariantListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.hideLanguageSelect = false;\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'name',\n                type: { kind: 'text' },\n                label: marker('common.name'),\n                filterField: 'name',\n            },\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: marker('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: marker('catalog.sku'),\n                filterField: 'sku',\n            },\n            {\n                name: 'price',\n                type: { kind: 'number', inputType: 'currency' },\n                label: marker('common.price'),\n                filterField: 'price',\n            },\n            {\n                name: 'priceWithTax',\n                type: { kind: 'number', inputType: 'currency' },\n                label: marker('common.price-with-tax'),\n                filterField: 'priceWithTax',\n            },\n        ])\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'sku' },\n            { name: 'price' },\n            { name: 'priceWithTax' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: ProductVariantListQueryDocument,\n            getItems: data => data.productVariants,\n            setVariables: (skip, take) => {\n                const searchTerm = this.searchTermControl.value;\n                const filterParam = { _and: [] };\n                const filterInput = this.filters.createFilterInput();\n                if (Object.keys(filterInput).length) {\n                    filterParam._and?.push(filterInput);\n                }\n                if (searchTerm) {\n                    filterParam._and?.push({\n                        _or: [\n                            {\n                                name: { contains: searchTerm },\n                            },\n                            {\n                                sku: { contains: searchTerm },\n                            },\n                        ],\n                    });\n                }\n                if (this.productId) {\n                    filterParam._and?.push({\n                        productId: {\n                            eq: this.productId,\n                        },\n                    });\n                }\n                return {\n                    options: {\n                        skip,\n                        take,\n                        filter: filterParam,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: { productId: \"productId\", hideLanguageSelect: \"hideLanguageSelect\", dataTableId: \"dataTableId\" }, usesInheritance: true, ngImport: i0, template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-list', template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { productId: [{\n                type: Input\n            }], hideLanguageSelect: [{\n                type: Input\n            }], dataTableId: [{\n                type: Input\n            }] } });\n\nconst GET_PRODUCT_DETAIL = gql `\r\n    query GetProductDetail($id: ID!) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n`;\nclass ProductDetailComponent extends TypedBaseDetailComponent {\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\n        super();\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.changeDetector = changeDetector;\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.detailForm = this.formBuilder.group({\n            enabled: true,\n            name: ['', Validators.required],\n            autoUpdateVariantNames: true,\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\n            description: '',\n            facetValueIds: [[]],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.assetChanges = {};\n        this.createVariantsConfig = { groups: [], variants: [], stockLocationId: '' };\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    }\n    ngOnInit() {\n        this.init();\n        const productFacetValues$ = this.isNew$.pipe(switchMap(isNew => {\n            return isNew ? of([]) : this.entity$.pipe(map(product => product.facetValues));\n        }));\n        const productGroup = this.detailForm;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const formFacetValueIdChanges$ = productGroup.get('facetValueIds').valueChanges.pipe(distinctUntilChanged(), switchMap(ids => this.dataService.facet\n            .getFacetValues({ filter: { id: { in: ids } } })\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\n        this.facetValues$ = concat(productFacetValues$.pipe(take(1)), productFacetValues$.pipe(switchMap(() => formFacetValueIdChanges$)));\n        this.productChannels$ = this.entity$.pipe(map(p => p.channels));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    isDefaultChannel(channelCode) {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n    assignToChannel() {\n        this.productChannels$\n            .pipe(take(1), switchMap(channels => this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: [this.id],\n                currentChannelIds: channels.map(c => c.id),\n            },\n        })))\n            .subscribe();\n    }\n    removeFromChannel(channelId) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\n            title: marker('catalog.remove-product-from-channel'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                {\n                    type: 'danger',\n                    label: marker('catalog.remove-from-channel'),\n                    translationVars: { channelCode },\n                    returnValue: true,\n                },\n            ],\n        })), switchMap(response => response\n            ? this.dataService.product.removeProductsFromChannel({\n                channelId,\n                productIds: [this.id],\n            })\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('catalog.notify-remove-product-from-channel-success'));\n        }, err => {\n            this.notificationService.error(marker('catalog.notify-remove-product-from-channel-error'));\n        });\n    }\n    assignVariantToChannel(variant) {\n        return this.modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: [this.id],\n                productVariantIds: [variant.id],\n                currentChannelIds: variant.channels.map(c => c.id),\n            },\n        })\n            .subscribe();\n    }\n    removeVariantFromChannel({ channelId, variant }) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\n            title: marker('catalog.remove-product-variant-from-channel'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                {\n                    type: 'danger',\n                    label: marker('catalog.remove-from-channel'),\n                    translationVars: { channelCode },\n                    returnValue: true,\n                },\n            ],\n        })), switchMap(response => response\n            ? this.dataService.product.removeVariantsFromChannel({\n                channelId,\n                productVariantIds: [variant.id],\n            })\n            : EMPTY))\n            .subscribe(() => {\n            this.notificationService.success(marker('catalog.notify-remove-variant-from-channel-success'));\n        }, err => {\n            this.notificationService.error(marker('catalog.notify-remove-variant-from-channel-error'));\n        });\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    /**\n     * If creating a new product, automatically generate the slug based on the product name.\n     */\n    updateSlug(nameValue) {\n        const slugControl = this.detailForm.get('slug');\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n        }\n    }\n    selectProductFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const productGroup = this.detailForm;\n                const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n                productGroup.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                productGroup.markAsDirty();\n                this.changeDetector.markForCheck();\n            }\n        });\n    }\n    removeProductFacetValue(facetValueId) {\n        const productGroup = this.detailForm;\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n    displayFacetValueModal() {\n        return this.modalService\n            .fromComponent(ApplyFacetDialogComponent, {\n            size: 'md',\n            closable: true,\n        })\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\n    }\n    create() {\n        const productGroup = this.detailForm;\n        if (!productGroup.dirty) {\n            return;\n        }\n        const newProduct = this.getUpdatedProduct({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            enabled: true,\n            languageCode: this.languageCode,\n            name: '',\n            slug: '',\n            featuredAsset: null,\n            assets: [],\n            description: '',\n            translations: [],\n            optionGroups: [],\n            facetValues: [],\n            channels: [],\n        }, productGroup, this.languageCode);\n        this.productDetailService\n            .createProductWithVariants(newProduct, this.createVariantsConfig, this.languageCode)\n            .subscribe(({ createProductVariants, productId }) => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Product',\n            });\n            this.assetChanges = {};\n            this.detailForm.markAsPristine();\n            this.router.navigate(['../', productId], { relativeTo: this.route });\n        }, err => {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([product, languageCode]) => {\n            const productGroup = this.detailForm;\n            let productInput;\n            let variantsInput;\n            if (productGroup.dirty || this.assetsChanged()) {\n                productInput = this.getUpdatedProduct(product, productGroup, languageCode);\n            }\n            return this.productDetailService.updateProduct({\n                product,\n                languageCode,\n                autoUpdate: this.detailForm.get(['autoUpdateVariantNames'])?.value ?? false,\n                productInput,\n                variantsInput,\n            });\n        }))\n            .subscribe(result => {\n            this.updateSlugAfterSave(result);\n            this.detailForm.markAsPristine();\n            this.assetChanges = {};\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Product',\n            });\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    canDeactivate() {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n    /**\n     * Sets the values of the form on changes to the product or current language.\n     */\n    setFormValues(product, languageCode) {\n        const currentTranslation = findTranslation(product, languageCode);\n        this.detailForm.patchValue({\n            enabled: product.enabled,\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            facetValueIds: product.facetValues.map(fv => fv.id),\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), product, currentTranslation);\n        }\n    }\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    getUpdatedProduct(product, productFormGroup, languageCode) {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: product,\n            updatedFields: productFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: product.name || '',\n                slug: product.slug || '',\n                description: product.description || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: productFormGroup.value.facetValueIds,\n        };\n    }\n    /**\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\n     */\n    updateSlugAfterSave(results) {\n        const firstResult = results[0];\n        const slugControl = this.detailForm.get(['product', 'slug']);\n        function isUpdateMutation(input) {\n            return input.hasOwnProperty('updateProduct');\n        }\n        if (slugControl && isUpdateMutation(firstResult)) {\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductDetailComponent, selector: \"vdr-product-detail2\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'common.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"directive\", type: i1.IfMultichannelDirective, selector: \"[vdrIfMultichannel]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"directive\", type: i1.IfDefaultChannelActiveDirective, selector: \"[vdrIfDefaultChannelActive]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: [\"variantsChange\"] }, { kind: \"component\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: [\"productId\", \"hideLanguageSelect\", \"dataTableId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-detail2', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'common.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"] }]\n        }], ctorParameters: () => [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nconst deleteProductsBulkAction = {\n    location: 'product-list',\n    label: marker('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .dialog({\n            title: marker('catalog.confirm-bulk-delete-products'),\n            translationVars: {\n                count: selection.length,\n            },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response ? dataService.product.deleteProducts(unique(selection.map(p => p.id))) : EMPTY))\n            .subscribe(result => {\n            let deleted = 0;\n            const errors = [];\n            for (const item of result.deleteProducts) {\n                if (item.result === DeletionResult.DELETED) {\n                    deleted++;\n                }\n                else if (item.message) {\n                    errors.push(item.message);\n                }\n            }\n            if (0 < deleted) {\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\n                    count: deleted,\n                });\n            }\n            if (0 < errors.length) {\n                notificationService.error(errors.join('\\n'));\n            }\n            hostComponent.refresh();\n            clearSelection();\n        });\n    },\n};\nconst assignProductsToChannelBulkAction = {\n    location: 'product-list',\n    label: marker('common.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productIds: unique(selection.map(p => p.id)),\n                currentChannelIds: [],\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n            }\n        });\n    },\n};\nconst removeProductsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'product-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, productIds, channelId) => dataService.product\n        .removeProductsFromChannel({\n        channelId: channelId,\n        productIds,\n    })\n        .pipe(map(res => res.removeProductsFromChannel)),\n});\nconst assignFacetValuesToProductsBulkAction = {\n    location: 'product-list',\n    label: marker('catalog.edit-facet-values'),\n    icon: 'tag',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const notificationService = injector.get(NotificationService);\n        const mode = 'product';\n        const ids = unique(selection.map(p => p.id));\n        return modalService\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\n            size: 'xl',\n            locals: {\n                mode,\n                ids,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                notificationService.success(marker('common.notify-bulk-update-success'), {\n                    count: selection.length,\n                    entity: mode === 'product' ? 'Products' : 'ProductVariants',\n                });\n                clearSelection();\n            }\n        });\n    },\n};\nconst duplicateProductsBulkAction = {\n    location: 'product-list',\n    label: marker('common.duplicate'),\n    icon: 'copy',\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent((DuplicateEntityDialogComponent), {\n            locals: {\n                entities: selection,\n                entityName: 'Product',\n                title: marker('catalog.duplicate-products'),\n                getEntityName: entity => entity.name,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n                hostComponent.refresh();\n            }\n        });\n    },\n};\n\nclass ProductListComponent extends TypedBaseListComponent {\n    constructor(dataService, modalService, notificationService, jobQueueService) {\n        super();\n        this.dataService = dataService;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.jobQueueService = jobQueueService;\n        this.pendingSearchIndexUpdates = 0;\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: marker('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'slug',\n                type: { kind: 'text' },\n                label: marker('common.slug'),\n                filterField: 'slug',\n            },\n        ])\n            .addFilter({\n            name: 'facetValues',\n            type: {\n                kind: 'custom',\n                component: FacetValueFormInputComponent,\n                serializeValue: value => value.map(v => v.id).join(','),\n                deserializeValue: value => value.split(',').map(id => ({ id })),\n                getLabel: value => {\n                    if (value.length === 0) {\n                        return '';\n                    }\n                    if (value[0].name) {\n                        return value.map(v => v.name).join(', ');\n                    }\n                    else {\n                        return lastValueFrom(this.dataService.facet\n                            .getFacetValues({ filter: { id: { in: value.map(v => v.id) } } })\n                            .mapSingle(({ facetValues }) => facetValues.items.map(fv => fv.name).join(', ')));\n                    }\n                },\n            },\n            label: marker('catalog.facet-values'),\n            toFilterInput: (value) => ({\n                facetValueId: {\n                    in: value.map(v => v.id),\n                },\n            }),\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'slug' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: ProductListQueryDocument,\n            getItems: data => data.products,\n            setVariables: (skip, take) => {\n                const searchTerm = this.searchTermControl.value;\n                let filterInput = this.filters.createFilterInput();\n                if (searchTerm) {\n                    filterInput = {\n                        name: {\n                            contains: searchTerm,\n                        },\n                        sku: {\n                            contains: searchTerm,\n                        },\n                    };\n                }\n                return {\n                    options: {\n                        skip,\n                        take,\n                        filter: {\n                            ...(filterInput ?? {}),\n                        },\n                        filterOperator: searchTerm ? LogicalOperator.OR : LogicalOperator.AND,\n                        sort: this.sorts.createSortInput(),\n                    },\n                };\n            },\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    rebuildSearchIndex() {\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\n            this.notificationService.info(marker('catalog.reindexing'));\n            this.jobQueueService.addJob(reindex.id, job => {\n                if (job.state === JobState.COMPLETED) {\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\n                    this.notificationService.success(marker('catalog.reindex-successful'), {\n                        count: job.result.indexedItemCount,\n                        time,\n                    });\n                    this.refresh();\n                }\n                else {\n                    this.notificationService.error(marker('catalog.reindex-error'));\n                }\n            });\n        });\n    }\n    deleteProduct(productId) {\n        this.modalService\n            .dialog({\n            title: marker('catalog.confirm-delete-product'),\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)), \n        // Short delay to allow the product to be removed from the search index before\n        // refreshing.\n        delay(500))\n            .subscribe(() => {\n            this.notificationService.success(marker('common.notify-delete-success'), {\n                entity: 'Product',\n            });\n            this.refresh();\n        }, err => {\n            this.notificationService.error(marker('common.notify-delete-error'), {\n                entity: 'Product',\n            });\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductListComponent, deps: [{ token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.JobQueueService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductListComponent, selector: \"vdr-products-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"product-list\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                    <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                    {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-products-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu [alwaysShow]=\\\"true\\\" locationId=\\\"product-list\\\">\\r\\n                <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                    <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                    {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                </button>\\r\\n            </vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'settings.search-by-product-name-or-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.JobQueueService }] });\n\nclass VariantPriceDetailComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.priceChange$ = new BehaviorSubject(0);\n        this.taxCategoryIdChange$ = new BehaviorSubject('');\n    }\n    ngOnInit() {\n        const taxRates$ = this.dataService.settings\n            .getTaxRatesSimple(999, 0, 'cache-first')\n            .mapStream(data => data.taxRates.items);\n        const activeChannel$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel);\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(map(([channel, taxRates, taxCategoryId]) => {\n            const defaultTaxZone = channel.defaultTaxZone;\n            if (!defaultTaxZone) {\n                return 0;\n            }\n            const applicableRate = taxRates.find(taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId);\n            if (!applicableRate) {\n                return 0;\n            }\n            return applicableRate.value;\n        }));\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(map(([taxRate, price]) => Math.round(price * ((100 + taxRate) / 100))));\n    }\n    ngOnChanges(changes) {\n        if ('price' in changes) {\n            this.priceChange$.next(changes.price.currentValue);\n        }\n        if ('taxCategoryId' in changes) {\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: VariantPriceDetailComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: { priceIncludesTax: \"priceIncludesTax\", price: \"price\", currencyCode: \"currencyCode\", taxCategoryId: \"taxCategoryId\" }, usesOnChanges: true, ngImport: i0, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: VariantPriceDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-variant-price-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { priceIncludesTax: [{\n                type: Input\n            }], price: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], taxCategoryId: [{\n                type: Input\n            }] } });\n\nclass VariantPriceStrategyDetailComponent {\n    calculatedPriceDiffersFromInputPrice() {\n        const defaultPrice = this.variant.prices.find(p => p.currencyCode === this.channelDefaultCurrencyCode) ??\n            this.variant.prices[0];\n        if (!defaultPrice) {\n            return false;\n        }\n        if (this.channelPriceIncludesTax) {\n            return this.variant.priceWithTax !== defaultPrice.price;\n        }\n        else {\n            return this.variant.price !== defaultPrice.price;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: VariantPriceStrategyDetailComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: VariantPriceStrategyDetailComponent, selector: \"vdr-variant-price-strategy-detail\", inputs: { channelPriceIncludesTax: \"channelPriceIncludesTax\", variant: \"variant\", channelDefaultCurrencyCode: \"channelDefaultCurrencyCode\" }, ngImport: i0, template: \"<div *ngIf=\\\"calculatedPriceDiffersFromInputPrice()\\\" class=\\\"price-strategy-detail\\\">\\r\\n    <vdr-form-item\\r\\n        [label]=\\\"'catalog.calculated-price' | translate\\\"\\r\\n        [tooltip]=\\\"'catalog.calculated-price-tooltip' | translate\\\"\\r\\n        for=\\\"price\\\"\\r\\n    >\\r\\n    </vdr-form-item>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-item [label]=\\\"'common.price' | translate\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n        <vdr-form-item [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: VariantPriceStrategyDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-variant-price-strategy-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"calculatedPriceDiffersFromInputPrice()\\\" class=\\\"price-strategy-detail\\\">\\r\\n    <vdr-form-item\\r\\n        [label]=\\\"'catalog.calculated-price' | translate\\\"\\r\\n        [tooltip]=\\\"'catalog.calculated-price-tooltip' | translate\\\"\\r\\n        for=\\\"price\\\"\\r\\n    >\\r\\n    </vdr-form-item>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-item [label]=\\\"'common.price' | translate\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n        <vdr-form-item [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </vdr-form-item>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.price-strategy-detail{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}\\n\"] }]\n        }], propDecorators: { channelPriceIncludesTax: [{\n                type: Input\n            }], variant: [{\n                type: Input\n            }], channelDefaultCurrencyCode: [{\n                type: Input\n            }] } });\n\nconst GET_PRODUCT_VARIANTS_QUICK_JUMP = gql `\r\n    query GetProductVariantsQuickJump($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            variants {\r\n                id\r\n                name\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\nclass ProductVariantQuickJumpComponent {\n    constructor(dataService, router) {\n        this.dataService = dataService;\n        this.router = router;\n        this.searchFn = (term, item) => item.name.toLowerCase().includes(term.toLowerCase()) ||\n            item.sku.toLowerCase().includes(term.toLowerCase());\n    }\n    ngOnInit() {\n        this.variants$ = this.dataService\n            .query(GetProductVariantsQuickJumpDocument, {\n            id: this.productId,\n        })\n            .mapSingle(data => data.product?.variants ?? []);\n    }\n    onSelect(item) {\n        if (item) {\n            this.router\n                .navigate(['catalog', 'products', this.productId, 'variants', item.id])\n                .then(() => (this.selectedVariantId = undefined));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantQuickJumpComponent, deps: [{ token: i1.DataService }, { token: i1$1.Router }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: { productId: \"productId\" }, ngImport: i0, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5$1.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantQuickJumpComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-quick-jump', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1$1.Router }], propDecorators: { productId: [{\n                type: Input\n            }] } });\n\nclass ProductVariantDetailComponent extends TypedBaseDetailComponent {\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\n        super();\n        this.productDetailService = productDetailService;\n        this.formBuilder = formBuilder;\n        this.modalService = modalService;\n        this.notificationService = notificationService;\n        this.dataService = dataService;\n        this.changeDetector = changeDetector;\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\n        this.detailForm = this.formBuilder.group({\n            id: '',\n            enabled: false,\n            sku: '',\n            name: '',\n            taxCategoryId: '',\n            stockOnHand: 0,\n            useGlobalOutOfStockThreshold: true,\n            outOfStockThreshold: 0,\n            trackInventory: GlobalFlag.TRUE,\n            facetValueIds: [],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.stockLevelsForm = this.formBuilder.array([]);\n        this.pricesForm = this.formBuilder.array([]);\n        this.assetChanges = {};\n        this.GlobalFlag = GlobalFlag;\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\n            this.globalTrackInventory = globalSettings.trackInventory;\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\n            this.changeDetector.markForCheck();\n        });\n        this.taxCategories$ = this.result$.pipe(map(data => data.taxCategories.items));\n        const availableCurrencyCodes$ = this.result$.pipe(tap(data => (this.channelDefaultCurrencyCode = data.activeChannel.defaultCurrencyCode)), map(data => data.activeChannel.availableCurrencyCodes));\n        this.unusedCurrencyCodes$ = combineLatest(this.pricesForm.valueChanges, availableCurrencyCodes$).pipe(map(([prices, currencyCodes]) => currencyCodes.filter(code => !prices.map(p => p.currencyCode).includes(code))));\n        const stockLocations$ = this.result$.pipe(map(data => data.stockLocations.items));\n        this.unusedStockLocation$ = combineLatest(this.entity$, stockLocations$).pipe(map(([entity, stockLocations]) => {\n            const usedIds = entity.stockLevels.map(l => l.stockLocation.id);\n            return stockLocations.filter(l => !usedIds.includes(l.id));\n        }));\n        this.channelPriceIncludesTax$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\n            .pipe(shareReplay(1));\n        this.stockLevels$ = this.entity$.pipe(map(entity => entity?.stockLevels ?? []));\n        const facetValues$ = this.entity$.pipe(map(variant => variant.facetValues ?? []));\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const formFacetValueIdChanges$ = this.detailForm.get('facetValueIds').valueChanges.pipe(skip(1), distinctUntilChanged(), switchMap(ids => this.dataService.facet\n            .getFacetValues({ filter: { id: { in: ids } } })\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\n        this.facetValues$ = concat(facetValues$.pipe(take(1)), facetValues$.pipe(switchMapTo(formFacetValueIdChanges$)));\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    addPriceInCurrency(currencyCode) {\n        this.pricesForm.push(this.formBuilder.group({\n            currencyCode,\n            price: 0,\n            delete: false,\n        }));\n    }\n    toggleDeletePrice(deleteFormControl) {\n        deleteFormControl.setValue(!deleteFormControl.value);\n        deleteFormControl.markAsDirty();\n    }\n    addStockLocation(stockLocation) {\n        this.stockLevelsForm.push(this.formBuilder.group({\n            stockLocationId: stockLocation.id,\n            stockLocationName: stockLocation.name,\n            stockOnHand: 0,\n            stockAllocated: 0,\n        }));\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([variant, languageCode]) => {\n            const input = pick(this.getUpdatedVariant(variant, this.detailForm, languageCode), [\n                'id',\n                'enabled',\n                'translations',\n                'sku',\n                'taxCategoryId',\n                'facetValueIds',\n                'featuredAssetId',\n                'assetIds',\n                'trackInventory',\n                'outOfStockThreshold',\n                'useGlobalOutOfStockThreshold',\n                'customFields',\n            ]);\n            if (this.stockLevelsForm.dirty) {\n                input.stockLevels = this.stockLevelsForm.controls\n                    .filter(control => control.dirty)\n                    .map(control => ({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    stockLocationId: control.value.stockLocationId,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    stockOnHand: control.value.stockOnHand,\n                }));\n            }\n            if (this.pricesForm.dirty) {\n                input.prices = this.pricesForm.controls\n                    .filter(control => control.dirty)\n                    .map(control => ({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    price: control.value.price,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    currencyCode: control.value.currencyCode,\n                    delete: control.value.delete === true,\n                }));\n            }\n            return this.dataService.mutate(ProductVariantUpdateMutationDocument, {\n                input: [input],\n            });\n        }))\n            .subscribe(result => {\n            this.detailForm.markAsPristine();\n            this.stockLevelsForm.markAsPristine();\n            this.pricesForm.markAsPristine();\n            this.assetChanges = {};\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ProductVariant',\n            });\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ProductVariant',\n            });\n        });\n    }\n    assetsChanged() {\n        return !!Object.values(this.assetChanges).length;\n    }\n    inventoryIsNotTracked(formGroup) {\n        const trackInventory = formGroup.get('trackInventory')?.value;\n        return (trackInventory === GlobalFlag.FALSE ||\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false));\n    }\n    optionGroupCode(optionGroupId) {\n        const group = this.entity?.product.optionGroups.find(g => g.id === optionGroupId);\n        return group?.code;\n    }\n    optionName(option) {\n        const translation = option.translations.find(t => t.languageCode === this.languageCode) ?? option.translations[0];\n        return translation.name;\n    }\n    removeFacetValue(facetValueId) {\n        const productGroup = this.detailForm;\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n    selectFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const currentFacetValueIds = this.detailForm.value.facetValueIds ?? [];\n                this.detailForm.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                this.detailForm.markAsDirty();\n            }\n        });\n    }\n    displayFacetValueModal() {\n        return this.modalService\n            .fromComponent(ApplyFacetDialogComponent, {\n            size: 'md',\n            closable: true,\n        })\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\n    }\n    setFormValues(variant, languageCode) {\n        const variantTranslation = findTranslation(variant, languageCode);\n        const facetValueIds = variant.facetValues.map(fv => fv.id);\n        this.detailForm.patchValue({\n            id: variant.id,\n            enabled: variant.enabled,\n            sku: variant.sku,\n            name: variantTranslation ? variantTranslation.name : '',\n            taxCategoryId: variant.taxCategory.id,\n            stockOnHand: variant.stockLevels[0]?.stockOnHand ?? 0,\n            useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\n            outOfStockThreshold: variant.outOfStockThreshold,\n            trackInventory: variant.trackInventory,\n            facetValueIds,\n        });\n        this.stockLevelsForm.clear();\n        for (const stockLevel of variant.stockLevels) {\n            this.stockLevelsForm.push(this.formBuilder.group({\n                stockLocationId: stockLevel.stockLocation.id,\n                stockLocationName: stockLevel.stockLocation.name,\n                stockOnHand: stockLevel.stockOnHand,\n                stockAllocated: stockLevel.stockAllocated,\n            }));\n        }\n        this.pricesForm.clear();\n        for (const price of variant.prices) {\n            this.pricesForm.push(this.formBuilder.group({\n                price: price.price,\n                currencyCode: price.currencyCode,\n                delete: false,\n            }));\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), variant, variantTranslation);\n        }\n    }\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    getUpdatedVariant(variant, variantFormGroup, languageCode) {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: variant,\n            updatedFields: variantFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: variant.name || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: variantFormGroup.value.facetValueIds,\n            taxCategoryId: variantFormGroup.value.taxCategoryId,\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductVariantDetailComponent, selector: \"vdr-product-variant-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-variant-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <vdr-variant-price-strategy-detail\\r\\n                    [channelPriceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                    [channelDefaultCurrencyCode]=\\\"channelDefaultCurrencyCode\\\"\\r\\n                    [variant]=\\\"variant\\\"\\r\\n                />\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: [\"priceIncludesTax\", \"price\", \"currencyCode\", \"taxCategoryId\"] }, { kind: \"component\", type: VariantPriceStrategyDetailComponent, selector: \"vdr-variant-price-strategy-detail\", inputs: [\"channelPriceIncludesTax\", \"variant\", \"channelDefaultCurrencyCode\"] }, { kind: \"component\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: [\"productId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variant-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"product-variant-detail\\\"></vdr-action-bar-dropdown-menu>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <vdr-variant-price-strategy-detail\\r\\n                    [channelPriceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                    [channelDefaultCurrencyCode]=\\\"channelDefaultCurrencyCode\\\"\\r\\n                    [variant]=\\\"variant\\\"\\r\\n                />\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"] }]\n        }], ctorParameters: () => [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }] });\n\nconst assignProductVariantsToChannelBulkAction = {\n    location: 'product-variant-list',\n    label: marker('common.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n            size: 'lg',\n            locals: {\n                productVariantIds: unique(selection.map(p => p.id)),\n                currentChannelIds: [],\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                clearSelection();\n            }\n        });\n    },\n};\nconst removeProductVariantsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'product-variant-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, ids, channelId) => dataService.product\n        .removeVariantsFromChannel({\n        channelId: channelId,\n        productVariantIds: ids,\n    })\n        .pipe(map(res => res.removeProductVariantsFromChannel)),\n});\nconst deleteProductVariantsBulkAction = {\n    location: 'product-variant-list',\n    label: marker('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .dialog({\n            title: marker('common.confirm-bulk-delete'),\n            translationVars: {\n                count: selection.length,\n            },\n            buttons: [\n                { type: 'secondary', label: marker('common.cancel') },\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\n            ],\n        })\n            .pipe(switchMap(response => response\n            ? dataService.product.deleteProductVariants(unique(selection.map(p => p.id)))\n            : EMPTY))\n            .subscribe(result => {\n            let deleted = 0;\n            const errors = [];\n            for (const item of result.deleteProductVariants) {\n                if (item.result === DeletionResult.DELETED) {\n                    deleted++;\n                }\n                else if (item.message) {\n                    errors.push(item.message);\n                }\n            }\n            if (0 < deleted) {\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\n                    count: deleted,\n                });\n            }\n            if (0 < errors.length) {\n                notificationService.error(errors.join('\\n'));\n            }\n            hostComponent.refresh();\n            clearSelection();\n        });\n    },\n};\nconst assignFacetValuesToProductVariantsBulkAction = {\n    location: 'product-variant-list',\n    label: marker('catalog.edit-facet-values'),\n    icon: 'tag',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    onClick: ({ injector, selection, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const notificationService = injector.get(NotificationService);\n        const mode = 'variant';\n        const ids = unique(selection.map(p => p.id));\n        return modalService\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\n            size: 'xl',\n            locals: {\n                mode,\n                ids,\n            },\n        })\n            .subscribe(result => {\n            if (result) {\n                notificationService.success(marker('common.notify-bulk-update-success'), {\n                    count: selection.length,\n                    entity: mode === 'variant' ? 'Products' : 'ProductVariants',\n                });\n                clearSelection();\n            }\n        });\n    },\n};\n\nclass ProductVariantsTableComponent {\n    constructor(changeDetector) {\n        this.changeDetector = changeDetector;\n        this.formGroupMap = new Map();\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    }\n    ngOnInit() {\n        this.subscription = this.formArray.valueChanges\n            .pipe(map(value => value.length), debounceTime(1), distinctUntilChanged())\n            .subscribe(() => {\n            this.buildFormGroupMap();\n        });\n        this.buildFormGroupMap();\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    trackByFn(index, item) {\n        if (item.id != null) {\n            return item.id;\n        }\n        else {\n            return index;\n        }\n    }\n    getFeaturedAsset(variant) {\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\n    }\n    optionGroupName(optionGroupId) {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        return group && group.name;\n    }\n    buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsTableComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProductVariantsTableComponent, selector: \"vdr-product-variants-table\", inputs: { formArray: [\"productVariantsFormArray\", \"formArray\"], variants: \"variants\", paginationConfig: \"paginationConfig\", channelPriceIncludesTax: \"channelPriceIncludesTax\", optionGroups: \"optionGroups\", pendingAssetChanges: \"pendingAssetChanges\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.StringToColorPipe, name: \"stringToColor\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProductVariantsTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-product-variants-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }], propDecorators: { formArray: [{\n                type: Input,\n                args: ['productVariantsFormArray']\n            }], variants: [{\n                type: Input\n            }], paginationConfig: [{\n                type: Input\n            }], channelPriceIncludesTax: [{\n                type: Input\n            }], optionGroups: [{\n                type: Input\n            }], pendingAssetChanges: [{\n                type: Input\n            }] } });\n\nclass UpdateProductOptionDialogComponent {\n    constructor() {\n        this.updateVariantName = true;\n        this.codeInputTouched = false;\n    }\n    ngOnInit() {\n        const currentTranslation = this.productOption.translations.find(t => t.languageCode === this.activeLanguage);\n        this.name = currentTranslation?.name ?? '';\n        this.code = this.productOption.code;\n        this.customFieldsForm = new UntypedFormGroup({});\n        if (this.customFields) {\n            const cfCurrentTranslation = (currentTranslation && currentTranslation.customFields) || {};\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = fieldDef.type === 'localeString'\n                    ? cfCurrentTranslation[key]\n                    : this.productOption.customFields[key];\n                this.customFieldsForm.addControl(fieldDef.name, new UntypedFormControl(value));\n            }\n        }\n    }\n    update() {\n        const result = createUpdatedTranslatable({\n            translatable: this.productOption,\n            languageCode: this.activeLanguage,\n            updatedFields: {\n                code: this.code,\n                name: this.name,\n                customFields: this.customFieldsForm.value,\n            },\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                languageCode: this.activeLanguage,\n                name: '',\n            },\n        });\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    updateCode(nameValue) {\n        if (!this.codeInputTouched && !this.productOption.code) {\n            this.code = normalizeString(nameValue, '-');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: UpdateProductOptionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: UpdateProductOptionDialogComponent, selector: \"vdr-update-product-option-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: UpdateProductOptionDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-update-product-option-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }] });\n\nconst CATALOG_COMPONENTS = [\n    ProductListComponent,\n    ProductDetailComponent,\n    FacetListComponent,\n    FacetDetailComponent,\n    GenerateProductVariantsComponent,\n    ApplyFacetDialogComponent,\n    AssetListComponent,\n    VariantPriceDetailComponent,\n    VariantPriceStrategyDetailComponent,\n    CollectionListComponent,\n    CollectionDetailComponent,\n    CollectionTreeComponent,\n    CollectionTreeNodeComponent,\n    CollectionContentsComponent,\n    ProductVariantsTableComponent,\n    OptionValueInputComponent,\n    UpdateProductOptionDialogComponent,\n    ProductVariantsEditorComponent,\n    AssignProductsToChannelDialogComponent,\n    AssetDetailComponent,\n    ConfirmVariantDeletionDialogComponent,\n    ProductOptionsEditorComponent,\n    BulkAddFacetValuesDialogComponent,\n    CollectionDataTableComponent,\n    CollectionBreadcrumbPipe,\n    MoveCollectionsDialogComponent,\n    ProductVariantListComponent,\n    ProductDetailComponent,\n    ProductVariantDetailComponent,\n    CreateProductVariantDialogComponent,\n    CreateProductOptionGroupDialogComponent,\n    ProductVariantQuickJumpComponent,\n    CreateFacetValueDialogComponent,\n];\nclass CatalogModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (CatalogModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductVariantsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignProductVariantsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeProductVariantsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteProductVariantsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateFacetsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\n        bulkActionRegistryService.registerBulkAction(moveCollectionsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(duplicateCollectionsBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-list',\n            tab: marker('catalog.products'),\n            route: '',\n            component: ProductListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-detail',\n            tab: marker('catalog.product'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ProductDetailComponent,\n                query: GetProductDetailDocument,\n                entityKey: 'product',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-product'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-list',\n            tab: marker('catalog.product-variants'),\n            route: 'variants',\n            component: ProductVariantListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'product-variant-detail',\n            tab: marker('catalog.product-variants'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ProductVariantDetailComponent,\n                query: GetProductVariantDetailDocument,\n                entityKey: 'productVariant',\n                getBreadcrumbs: entity => [\n                    {\n                        label: `${entity?.product.name}`,\n                        link: ['/catalog', 'products', entity?.product.id],\n                    },\n                    {\n                        label: `${entity?.name} (${entity?.sku})`,\n                        link: ['variants', entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'facet-list',\n            tab: marker('catalog.facets'),\n            route: '',\n            component: FacetListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'facet-detail',\n            tab: marker('catalog.facet'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: FacetDetailComponent,\n                query: GetFacetDetailDocument,\n                variables: {\n                    facetValueListOptions: {\n                        take: 10,\n                        skip: 0,\n                        sort: {\n                            createdAt: SortOrder$1.DESC,\n                        },\n                    },\n                },\n                entityKey: 'facet',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-facet'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'collection-list',\n            tab: marker('catalog.collections'),\n            route: '',\n            component: CollectionListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'collection-detail',\n            tab: marker('catalog.collection'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CollectionDetailComponent,\n                query: CollectionDetailQueryDocument,\n                entityKey: 'collection',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-collection'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'asset-list',\n            tab: marker('catalog.assets'),\n            route: '',\n            component: AssetListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'asset-detail',\n            tab: marker('catalog.asset'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: AssetDetailComponent,\n                query: AssetDetailQueryDocument,\n                entityKey: 'asset',\n                getBreadcrumbs: entity => [\n                    {\n                        label: `${entity?.name}`,\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        CatalogModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CatalogModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.4\", ngImport: i0, type: CatalogModule, declarations: [ProductListComponent,\n            ProductDetailComponent,\n            FacetListComponent,\n            FacetDetailComponent,\n            GenerateProductVariantsComponent,\n            ApplyFacetDialogComponent,\n            AssetListComponent,\n            VariantPriceDetailComponent,\n            VariantPriceStrategyDetailComponent,\n            CollectionListComponent,\n            CollectionDetailComponent,\n            CollectionTreeComponent,\n            CollectionTreeNodeComponent,\n            CollectionContentsComponent,\n            ProductVariantsTableComponent,\n            OptionValueInputComponent,\n            UpdateProductOptionDialogComponent,\n            ProductVariantsEditorComponent,\n            AssignProductsToChannelDialogComponent,\n            AssetDetailComponent,\n            ConfirmVariantDeletionDialogComponent,\n            ProductOptionsEditorComponent,\n            BulkAddFacetValuesDialogComponent,\n            CollectionDataTableComponent,\n            CollectionBreadcrumbPipe,\n            MoveCollectionsDialogComponent,\n            ProductVariantListComponent,\n            ProductDetailComponent,\n            ProductVariantDetailComponent,\n            CreateProductVariantDialogComponent,\n            CreateProductOptionGroupDialogComponent,\n            ProductVariantQuickJumpComponent,\n            CreateFacetValueDialogComponent], imports: [SharedModule, i1$1.RouterModule], exports: [ProductListComponent,\n            ProductDetailComponent,\n            FacetListComponent,\n            FacetDetailComponent,\n            GenerateProductVariantsComponent,\n            ApplyFacetDialogComponent,\n            AssetListComponent,\n            VariantPriceDetailComponent,\n            VariantPriceStrategyDetailComponent,\n            CollectionListComponent,\n            CollectionDetailComponent,\n            CollectionTreeComponent,\n            CollectionTreeNodeComponent,\n            CollectionContentsComponent,\n            ProductVariantsTableComponent,\n            OptionValueInputComponent,\n            UpdateProductOptionDialogComponent,\n            ProductVariantsEditorComponent,\n            AssignProductsToChannelDialogComponent,\n            AssetDetailComponent,\n            ConfirmVariantDeletionDialogComponent,\n            ProductOptionsEditorComponent,\n            BulkAddFacetValuesDialogComponent,\n            CollectionDataTableComponent,\n            CollectionBreadcrumbPipe,\n            MoveCollectionsDialogComponent,\n            ProductVariantListComponent,\n            ProductDetailComponent,\n            ProductVariantDetailComponent,\n            CreateProductVariantDialogComponent,\n            CreateProductOptionGroupDialogComponent,\n            ProductVariantQuickJumpComponent,\n            CreateFacetValueDialogComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CatalogModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CatalogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    exports: [...CATALOG_COMPONENTS],\n                    declarations: [...CATALOG_COMPONENTS],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\nconst PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT = gql `\r\n    fragment ProductListQueryProductFragment on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        featuredAsset {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            preview\r\n            focalPoint {\r\n                x\r\n                y\r\n            }\r\n        }\r\n        variantList {\r\n            totalItems\r\n        }\r\n    }\r\n`;\nconst PRODUCT_LIST_QUERY = gql `\r\n    query ProductListQuery($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                ...ProductListQueryProductFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantDetailQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        prices {\r\n            price\r\n            currencyCode\r\n        }\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocationId\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n        product {\r\n            id\r\n            name\r\n            optionGroups {\r\n                id\r\n                name\r\n                code\r\n                translations {\r\n                    id\r\n                    languageCode\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\nconst PRODUCT_VARIANT_DETAIL_QUERY = gql `\r\n    query GetProductVariantDetail($id: ID!) {\r\n        productVariant(id: $id) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n        stockLocations(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                description\r\n            }\r\n        }\r\n        taxCategories(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                isDefault\r\n            }\r\n            totalItems\r\n        }\r\n        activeChannel {\r\n            id\r\n            availableCurrencyCodes\r\n            defaultCurrencyCode\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\nconst PRODUCT_VARIANT_UPDATE_MUTATION = gql `\r\n    mutation ProductVariantUpdateMutation($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantListQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        productId\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        trackInventory\r\n        outOfStockThreshold\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockLocationId\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        useGlobalOutOfStockThreshold\r\n        sku\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n    }\r\n\r\n    ${ASSET_FRAGMENT}\r\n`;\nconst PRODUCT_VARIANT_LIST_QUERY = gql `\r\n    query ProductVariantListQuery($options: ProductVariantListOptions!) {\r\n        productVariants(options: $options) {\r\n            items {\r\n                ...ProductVariantListQueryProductVariantFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ASSET_DETAIL_QUERY, ApplyFacetDialogComponent, AssetDetailComponent, AssetListComponent, AssignProductsToChannelDialogComponent, BulkAddFacetValuesDialogComponent, COLLECTION_DETAIL_QUERY, CatalogModule, CollectionBreadcrumbPipe, CollectionContentsComponent, CollectionDataTableComponent, CollectionDetailComponent, CollectionListComponent, CollectionTreeComponent, CollectionTreeNodeComponent, CollectionTreeService, ConfirmVariantDeletionDialogComponent, CreateFacetValueDialogComponent, CreateProductOptionGroupDialogComponent, CreateProductVariantDialogComponent, FACET_DETAIL_QUERY, FACET_LIST_QUERY, FacetDetailComponent, FacetListComponent, GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, GET_PRODUCT_DETAIL, GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, GenerateProductVariantsComponent, GeneratedVariant, MoveCollectionsDialogComponent, OPTION_VALUE_INPUT_VALUE_ACCESSOR, OptionValueInputComponent, PRODUCT_LIST_QUERY, PRODUCT_VARIANT_DETAIL_QUERY, PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT, PRODUCT_VARIANT_LIST_QUERY, PRODUCT_VARIANT_UPDATE_MUTATION, ProductDetailComponent, ProductDetailService, ProductListComponent, ProductOptionsEditorComponent, ProductVariantDetailComponent, ProductVariantListComponent, ProductVariantQuickJumpComponent, ProductVariantsEditorComponent, ProductVariantsResolver, ProductVariantsTableComponent, UPDATE_PRODUCTS_BULK, UPDATE_VARIANTS_BULK, UpdateProductOptionDialogComponent, VariantPriceDetailComponent, VariantPriceStrategyDetailComponent, arrayToTree, assignCollectionsToChannelBulkAction, assignFacetValuesToProductVariantsBulkAction, assignFacetValuesToProductsBulkAction, assignFacetsToChannelBulkAction, assignProductVariantsToChannelBulkAction, assignProductsToChannelBulkAction, createRoutes, deleteCollectionsBulkAction, deleteFacetsBulkAction, deleteProductVariantsBulkAction, deleteProductsBulkAction, duplicateCollectionsBulkAction, duplicateFacetsBulkAction, duplicateProductsBulkAction, moveCollectionsBulkAction, productOptionsEditorBreadcrumb, removeCollectionsFromChannelBulkAction, removeFacetsFromChannelBulkAction, removeFacetsFromChannelBulkAction2, removeProductVariantsFromChannelBulkAction, removeProductsFromChannelBulkAction, replaceLast };\n","import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n"],"x_google_ignoreList":[0,1,2]}