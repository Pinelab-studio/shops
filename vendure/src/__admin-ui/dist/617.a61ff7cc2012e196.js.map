{"version":3,"file":"617.a61ff7cc2012e196.js","mappings":"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","names":["updateGoedgepicktConfig","gql","getGoedgepicktConfig","runGoedgepicktFullSync","i0","ctx_r0","testFailed","testResultName","GoedgepicktComponent","constructor","formBuilder","dataService","changeDetector","notificationService","this","loadingSync","form","group","enabled","apiKey","webshopUuid","orderWebhookUrl","orderWebhookKey","stockWebhookUrl","stockWebhookKey","ngOnInit","_this","_asyncToGenerator","query","mapStream","d","goedgepicktConfig","subscribe","config","controls","setValue","save","_this2","dirty","formValue","value","result","mutate","input","toPromise","markAsPristine","markForCheck","success","entity","error","fullSync","_this3","e","message","test","_this4","undefined","fetch","method","headers","Accept","Authorization","redirect","status","webshop","json","items","find","item","uuid","name","static","t","i1","i2","core","VBU","selectors","decls","vars","consts","template","rf","ctx","GoedgepicktComponent_vdr_chip_17_Template","GoedgepicktComponent_vdr_chip_18_Template","invalid","pristine","GoedgepicktModule","$C","G2t","addNavMenuItem","id","label","routerLink","icon","imports","SharedModule","RouterModule","forChild","path","pathMatch","component","data","breadcrumb","globalObject","self","window","global","Error","getGlobal","module","exports","bind","Headers","Request","Response"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/extensions/72c58cfb6b28cae505bcf97a92eb3940a2ad9f39cfb445b3657bae6e74e6f487/queries.graphql.ts","./src/extensions/72c58cfb6b28cae505bcf97a92eb3940a2ad9f39cfb445b3657bae6e74e6f487/goedgepickt.component.ts","./src/extensions/72c58cfb6b28cae505bcf97a92eb3940a2ad9f39cfb445b3657bae6e74e6f487/goedgepickt.module.ts","../node_modules/node-fetch/browser.js"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const updateGoedgepicktConfig = gql`\n  mutation updateGoedgepicktConfig($input: GoedgepicktConfigInput!) {\n    updateGoedgepicktConfig(input: $input) {\n      ... on GoedgepicktConfig {\n        enabled\n        apiKey\n        webshopUuid\n        orderWebhookKey\n        orderWebhookUrl\n        stockWebhookKey\n        stockWebhookUrl\n      }\n      ... on GoedgepicktError {\n        message\n      }\n    }\n  }\n`;\n\nexport const getGoedgepicktConfig = gql`\n  query goedgepicktConfig {\n    goedgepicktConfig {\n      enabled\n      apiKey\n      webshopUuid\n      orderWebhookKey\n      orderWebhookUrl\n      stockWebhookKey\n      stockWebhookUrl\n    }\n  }\n`;\n\nexport const runGoedgepicktFullSync = gql`\n  mutation runGoedgepicktFullSync {\n    runGoedgepicktFullSync\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport {\n  getGoedgepicktConfig,\n  runGoedgepicktFullSync,\n  updateGoedgepicktConfig,\n} from './queries.graphql';\nimport fetch from 'node-fetch';\nimport { GoedgepicktConfig } from './generated/graphql';\n\n@Component({\n  selector: 'goedgepickt-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <button\n          class=\"btn btn-secondary\"\n          [disabled]=\"loadingSync\"\n          (click)=\"fullSync()\"\n        >\n          Synchronize\n        </button>\n        <vdr-help-tooltip\n          content=\"Pushes products and pulls stocklevels from Goedgepickt\"\n        ></vdr-help-tooltip>\n        <form class=\"form\" [formGroup]=\"form\">\n          <section class=\"form-block\">\n            <vdr-form-field label=\"Enabled\" for=\"enabled\">\n              <input\n                type=\"checkbox\"\n                name=\"enabled\"\n                clrCheckbox\n                formControlName=\"enabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"apikey\" for=\"apiKey\">\n              <input id=\"apiKey\" type=\"text\" formControlName=\"apiKey\" />\n            </vdr-form-field>\n            <vdr-form-field label=\"webshopUuid\" for=\"webshopUuid\">\n              <input\n                id=\"webshopUuid\"\n                type=\"text\"\n                formControlName=\"webshopUuid\"\n              />\n            </vdr-form-field>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"save()\"\n              [disabled]=\"form.invalid || form.pristine\"\n            >\n              Save\n            </button>\n            <button class=\"btn btn-secondary\" (click)=\"test()\">Test</button>\n            <vdr-chip *ngIf=\"testFailed\" title=\"Failed\" colorType=\"error\">\n              <clr-icon shape=\"error-standard\"></clr-icon>\n              {{ testFailed }}\n            </vdr-chip>\n            <vdr-chip\n              *ngIf=\"testResultName\"\n              title=\"Success!\"\n              colorType=\"success\"\n            >\n              <clr-icon shape=\"check-circle\"></clr-icon>\n              {{ testResultName }}\n            </vdr-chip>\n          </section>\n          <section class=\"form-block\">\n            <p>\n              The following settings are set automatically and cannot be edited\n            </p>\n            <br />\n            <vdr-form-field\n              label=\"Order webhook\"\n              for=\"orderWebhookUrl\"\n              tooltip=\"Goedgepickt will call this URL for order status updates\"\n            >\n              <input\n                id=\"orderWebhookUrl\"\n                type=\"text\"\n                formControlName=\"orderWebhookUrl\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"Webhook auth secret\" for=\"orderWebhookKey\">\n              <input\n                id=\"orderWebhookKey\"\n                type=\"text\"\n                formControlName=\"orderWebhookKey\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n          </section>\n          <section class=\"form-block\">\n            <vdr-form-field\n              label=\"Stock webhook\"\n              for=\"stockWebhookUrl\"\n              tooltip=\"Goedgepickt will call this URL for stocklevel updates\"\n            >\n              <input\n                id=\"stockWebhookUrl\"\n                type=\"text\"\n                formControlName=\"stockWebhookUrl\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"Webhook auth secret\" for=\"stockWebhookKey\">\n              <input\n                id=\"stockWebhookKey\"\n                type=\"text\"\n                formControlName=\"stockWebhookKey\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n          </section>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class GoedgepicktComponent implements OnInit {\n  form: FormGroup;\n  testFailed?: string;\n  testResultName?: string;\n  loadingSync = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      enabled: ['enabled'],\n      apiKey: ['your-api-key'],\n      webshopUuid: ['webshopUuid'],\n      orderWebhookUrl: ['orderWebhookUrl'],\n      orderWebhookKey: ['orderWebhookKey'],\n      stockWebhookUrl: ['stockWebhookUrl'],\n      stockWebhookKey: ['stockWebhookKey'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(getGoedgepicktConfig)\n      .mapStream((d: any) => d.goedgepicktConfig)\n      .subscribe((config: GoedgepicktConfig) => {\n        this.form.controls['enabled'].setValue(config.enabled);\n        this.form.controls['apiKey'].setValue(config.apiKey);\n        this.form.controls['webshopUuid'].setValue(config.webshopUuid);\n        this.form.controls['orderWebhookUrl'].setValue(config.orderWebhookUrl);\n        this.form.controls['orderWebhookKey'].setValue(config.orderWebhookKey);\n        this.form.controls['stockWebhookUrl'].setValue(config.stockWebhookUrl);\n        this.form.controls['stockWebhookKey'].setValue(config.stockWebhookKey);\n      });\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        const { updateGoedgepicktConfig: result } = (await this.dataService\n          .mutate(updateGoedgepicktConfig, {\n            input: {\n              enabled: formValue.enabled,\n              apiKey: formValue.apiKey,\n              webshopUuid: formValue.webshopUuid,\n            },\n          })\n          .toPromise()) as any;\n        this.form.controls['enabled'].setValue(result.enabled);\n        this.form.controls['apiKey'].setValue(result.apiKey);\n        this.form.controls['webshopUuid'].setValue(result.webshopUuid);\n        this.form.controls['orderWebhookUrl'].setValue(result.orderWebhookUrl);\n        this.form.controls['orderWebhookKey'].setValue(result.orderWebhookKey);\n        this.form.controls['stockWebhookUrl'].setValue(result.stockWebhookUrl);\n        this.form.controls['stockWebhookKey'].setValue(result.stockWebhookKey);\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'GoedgepicktConfig',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'GoedgepicktConfig',\n      });\n    }\n  }\n\n  async fullSync(): Promise<void> {\n    try {\n      this.loadingSync = true;\n      await this.dataService.mutate(runGoedgepicktFullSync).toPromise();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'products and stocklevels',\n      });\n    } catch (e: any) {\n      this.notificationService.error(e.message);\n    } finally {\n      this.loadingSync = false;\n    }\n  }\n\n  async test(): Promise<void> {\n    this.testFailed = undefined;\n    this.testResultName = undefined;\n    const result = await fetch(\n      'https://account.goedgepickt.nl/api/v1/webshops',\n      {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.form.controls['apiKey'].value}`,\n        },\n        redirect: 'follow',\n      }\n    );\n    if (result.status !== 200) {\n      this.testFailed = 'Invalid ApiKey';\n      return;\n    }\n    const json = await result.json();\n    const webshop = json.items?.find(\n      (item: { uuid: string }) =>\n        item.uuid === this.form.controls['webshopUuid'].value\n    );\n    if (!webshop) {\n      this.testFailed = 'Apikey is correct, but cannot find webshopUuid';\n    } else {\n      this.testResultName = webshop.name;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { GoedgepicktComponent } from './goedgepickt.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: GoedgepicktComponent,\n        data: { breadcrumb: 'Goedgepickt' },\n      },\n    ]),\n  ],\n  providers: [\n    addNavMenuItem(\n      {\n        id: 'goedgepickt',\n        label: 'Goedgepickt',\n        routerLink: ['/extensions/goedgepickt'],\n        icon: 'cursor-hand-open',\n      },\n      'settings'\n    ),\n  ],\n  declarations: [GoedgepicktComponent],\n})\nexport class GoedgepicktModule {}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n"],"x_google_ignoreList":[3]}