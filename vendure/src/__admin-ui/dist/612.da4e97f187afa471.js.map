{"version":3,"file":"612.da4e97f187afa471.js","mappings":"8LAEO,MAAMA,EAA0BC;;;;;;;;;EAW1BC,EAAuBD;;;;;;;;;oCC8C9B,MAAOE,EAGXC,YACUC,EACEC,EACFC,EACAC,GAHAC,KAAAJ,cACEI,KAAAH,cACFG,KAAAF,iBACAE,KAAAD,sBAERC,KAAKC,KAAOD,KAAKJ,YAAYM,MAAM,CACjCC,OAAQ,CAAC,eACTC,UAAW,CAAC,mBACZC,eAAgB,CAAC,sBAErB,CAEMC,WAAQ,IAAAC,EAAAP,KAAA,SAAAQ,KAAA,kBACND,EAAKV,YACRY,MAAMhB,GACNiB,UAAWC,GAAWA,EAAEC,iBACxBC,UAAWC,IACVP,EAAKN,KAAKc,SAASZ,OAAUa,SAASF,EAAOX,QAC7CI,EAAKN,KAAKc,SAASX,UAAaY,SAASF,EAAOV,WAChDG,EAAKN,KAAKc,SAASV,eAAkBW,SAASF,EAAOT,eAAc,EAClE,EARO,EASd,CAEMY,OAAI,IAAAC,EAAAlB,KAAA,SAAAQ,KAAA,YACR,IACE,GAAIU,EAAKjB,KAAKkB,MAAO,CACnB,MAAMC,EAAYF,EAAKjB,KAAKoB,YACtBH,EAAKrB,YACRyB,OAAO/B,EAAyB,CAC/BgC,MAAO,CACLpB,OAAQiB,EAAUjB,OAClBC,UAAWgB,EAAUhB,UACrBC,eAAgBe,EAAUf,kBAG7BmB,WACL,CACAN,EAAKjB,KAAKwB,iBACVP,EAAKpB,eAAe4B,eACpBR,EAAKnB,oBAAoB4B,QAAQ,+BAAgC,CAC/DC,OAAQ,oBAEZ,OACEV,EAAKnB,oBAAoB8B,MAAM,6BAA8B,CAC3DD,OAAQ,oBAEZ,CAAC,EAvBO,EAwBV,CAACE,SAAA9B,KAAA,mBAAA+B,iBAnDUrC,GAAkBsC,MAAAC,MAAAD,MAAAE,OAAAF,mBAAAE,OAAA,EAAAJ,SAAA9B,KAAA,UAAAmC,EAAAC,IAAA,MAAlB1C,EAAkB2C,UAAA,0BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,+YAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA/CnBV,MAJR,UAIQA,CAJa,UAIbA,CAHe,WAGfA,CAF6B,wBAE7BA,CADmB,WACZA,MAAA,sBAAgBA,QACvBA,MAAA,aAOFA,QAEEA,MADF,wBACEA,CADmB,WACZA,MAAA,0BAAoBA,QAC3BA,MAAA,cAOFA,QAEEA,MADF,yBACEA,CADmB,YACZA,MAAA,yBAAkBA,QACzBA,MAAA,cAOAA,MAAA,yBACGA,MAAA,2DAAoDA,MAAA,SACrDA,MAAA,2DAGJA,UACAA,MAAA,eAEEA,MAAA,0BAASW,EAAA1B,MAAM,GAIfe,MAAA,aAIRA,qBA9CUA,MAAA,GAAAA,MAAA,YAAAW,EAAA1C,MAwCF+B,MAAA,IAAAA,MAAA,WAAAW,EAAA1C,KAAA2C,SAAAD,EAAA1C,KAAA4C,+GC9BN,MAAOC,EAAehB,SAAA9B,KAAA,mBAAA+B,iBAAfe,EAAe,EAAAhB,SAAA9B,KAAA,UAAAmC,EAAAY,GAAA,MAAfD,IAAehB,SAAA9B,KAAA,UAAAmC,EAAAa,IAAA,UAbxBC,MACAC,KAAaC,SAAS,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAW5D,EACX6D,KAAM,CAAEC,WAAY","names":["UPDATE_SENDCLOUD_CONFIG","gql","GET_SENDCLOUD_CONFIG","SendcloudComponent","constructor","formBuilder","dataService","changeDetector","notificationService","this","form","group","secret","publicKey","defaultPhoneNr","ngOnInit","_this","_asyncToGenerator","query","mapStream","d","sendCloudConfig","subscribe","config","controls","setValue","save","_this2","dirty","formValue","value","mutate","input","toPromise","markAsPristine","markForCheck","success","entity","error","static","t","i0","i1","i2","core","VBU","selectors","decls","vars","consts","template","rf","ctx","invalid","pristine","SendcloudModule","$C","G2t","SharedModule","RouterModule","forChild","path","pathMatch","component","data","breadcrumb"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/extensions/ed8f991d6a4205abf4ebff438fec66d1fb7da7e278fdb26990b14a5265228843/queries.ts","./src/extensions/ed8f991d6a4205abf4ebff438fec66d1fb7da7e278fdb26990b14a5265228843/sendcloud.component.ts","./src/extensions/ed8f991d6a4205abf4ebff438fec66d1fb7da7e278fdb26990b14a5265228843/sendcloud.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const UPDATE_SENDCLOUD_CONFIG = gql`\n  mutation updateSendCloudConfig($input: SendCloudConfigInput) {\n    updateSendCloudConfig(input: $input) {\n      id\n      secret\n      publicKey\n      defaultPhoneNr\n    }\n  }\n`;\n\nexport const GET_SENDCLOUD_CONFIG = gql`\n  query sendCloudConfig {\n    sendCloudConfig {\n      id\n      secret\n      publicKey\n      defaultPhoneNr\n    }\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport { GET_SENDCLOUD_CONFIG, UPDATE_SENDCLOUD_CONFIG } from './queries';\n\n@Component({\n  selector: 'sendcloud-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <form [formGroup]=\"form\" clrForm>\n          <clr-input-container>\n            <label>SendCloud secret</label>\n            <input\n              id=\"secret\"\n              type=\"text\"\n              formControlName=\"secret\"\n              clrInput\n              size=\"28\"\n            />\n          </clr-input-container>\n          <clr-input-container>\n            <label>SendCloud public key</label>\n            <input\n              id=\"publicKey\"\n              type=\"text\"\n              formControlName=\"publicKey\"\n              clrInput\n              size=\"28\"\n            />\n          </clr-input-container>\n          <clr-input-container>\n            <label>Fallback phone nr.</label>\n            <input\n              id=\"defaultPhoneNr\"\n              type=\"text\"\n              formControlName=\"defaultPhoneNr\"\n              clrInput\n              size=\"28\"\n            />\n            <clr-control-helper\n              >Used when a customer hasn't entered a phone number. <br />\n              Phone number is required in some cases by\n              Sendcloud</clr-control-helper\n            >\n          </clr-input-container>\n          <button\n            class=\"btn btn-primary\"\n            (click)=\"save()\"\n            style=\"margin-left: 20rem\"\n            [disabled]=\"form.invalid || form.pristine\"\n          >\n            Save\n          </button>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class SendcloudComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      secret: ['your-secret'],\n      publicKey: ['your-public-key'],\n      defaultPhoneNr: ['your-phone-number'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(GET_SENDCLOUD_CONFIG)\n      .mapStream((d: any) => d.sendCloudConfig)\n      .subscribe((config) => {\n        this.form.controls['secret'].setValue(config.secret);\n        this.form.controls['publicKey'].setValue(config.publicKey);\n        this.form.controls['defaultPhoneNr'].setValue(config.defaultPhoneNr);\n      });\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        await this.dataService\n          .mutate(UPDATE_SENDCLOUD_CONFIG, {\n            input: {\n              secret: formValue.secret,\n              publicKey: formValue.publicKey,\n              defaultPhoneNr: formValue.defaultPhoneNr,\n            },\n          })\n          .toPromise();\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'SendCloud config',\n      });\n    } catch (e: any) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'SendCloud config',\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { SendcloudComponent } from './sendcloud.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: SendcloudComponent,\n        data: { breadcrumb: 'SendCloud' },\n      },\n    ]),\n  ],\n  providers: [],\n  declarations: [SendcloudComponent],\n})\nexport class SendcloudModule {}\n"],"x_google_ignoreList":[]}