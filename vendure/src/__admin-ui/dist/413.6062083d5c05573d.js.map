{"version":3,"file":"413.6062083d5c05573d.js","mappings":"6LAEO,MAAMA,EAAuBC;;;;;;EAQvBC,EAAoBD;;;;;;0BCkB3B,MAAOE,EAGXC,YACUC,EACEC,EACFC,EACAC,GAHAC,KAAAJ,cACEI,KAAAH,cACFG,KAAAF,iBACAE,KAAAD,sBAERC,KAAKC,KAAOD,KAAKJ,YAAYM,MAAM,CACjCC,OAAQ,CAAC,iBAEb,CAEMC,WAAQ,IAAAC,EAAAL,KAAA,SAAAM,KAAA,kBACND,EAAKR,YACRU,MAAMd,GACNe,UAAWC,GAAWA,EAAEC,gBACxBC,UAAWC,GACVP,EAAKJ,KAAKY,SAASV,OAAUW,SAASF,EAAOT,QAC7C,EANQ,EAOd,CAEMY,OAAI,IAAAC,EAAAhB,KAAA,SAAAM,KAAA,YACR,IACE,GAAIU,EAAKf,KAAKgB,MAAO,CACnB,MAAMC,EAAYF,EAAKf,KAAKkB,YACtBH,EAAKnB,YACRuB,OAAO7B,EAAsB,CAAE8B,MAAO,CAAElB,OAAQe,EAAUf,UAC1DmB,WACL,CACAN,EAAKf,KAAKsB,iBACVP,EAAKlB,eAAe0B,eACpBR,EAAKjB,oBAAoB0B,QAAQ,+BAAgC,CAC/DC,OAAQ,kBAEZ,OACEV,EAAKjB,oBAAoB4B,MAAM,6BAA8B,CAC3DD,OAAQ,kBAEZ,CAAC,EAjBO,EAkBV,CAACE,SAAA5B,KAAA,mBAAA6B,iBAzCUnC,GAAiBoC,MAAAC,MAAAD,MAAAE,OAAAF,mBAAAE,OAAA,EAAAJ,SAAA5B,KAAA,UAAAiC,EAAAC,IAAA,MAAjBxC,EAAiByC,UAAA,yBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,yNAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAhBlBV,MAJR,UAIQA,CAJa,UAIbA,CAHe,WAGfA,CAFkC,cAElCA,CAD0B,sBAExBA,MAAA,aACFA,QACAA,MAAA,cAEEA,MAAA,0BAASW,EAAA1B,MAAM,GAGfe,MAAA,YAKVA,uBAfuBA,MAAA,GAAAA,MAAA,YAAAW,EAAAxC,MAQb6B,MAAA,GAAAA,MAAA,WAAAW,EAAAxC,KAAAyC,SAAAD,EAAAxC,KAAA0C,uFCYR,MAAOC,EAAchB,SAAA5B,KAAA,mBAAA6B,iBAAde,EAAc,EAAAhB,SAAA5B,KAAA,UAAAiC,EAAAY,GAAA,MAAdD,IAAchB,SAAA5B,KAAA,UAAAiC,EAAAa,IAAA,WAbd,IACTC,OACE,CACEC,GAAI,WACJC,MAAO,WACPC,WAAY,CAAC,wBACbC,KAAM,oBAER,aAEHC,QAAA,CApBCC,MACAC,KAAaC,SAAS,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAWhE,EACXiE,KAAM,CAAEC,WAAY","names":["updateMyparcelConfig","gql","getMyparcelConfig","MyparcelComponent","constructor","formBuilder","dataService","changeDetector","notificationService","this","form","group","apiKey","ngOnInit","_this","_asyncToGenerator","query","mapStream","d","myparcelConfig","subscribe","config","controls","setValue","save","_this2","dirty","formValue","value","mutate","input","toPromise","markAsPristine","markForCheck","success","entity","error","static","t","i0","i1","i2","core","VBU","selectors","decls","vars","consts","template","rf","ctx","invalid","pristine","MyparcelModule","$C","G2t","addNavMenuItem","id","label","routerLink","icon","imports","SharedModule","RouterModule","forChild","path","pathMatch","component","data","breadcrumb"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/extensions/aa24796a907818f13f1e0783d2e789fbef1b5678c998f8a33d445cb0349ff142/queries.ts","./src/extensions/aa24796a907818f13f1e0783d2e789fbef1b5678c998f8a33d445cb0349ff142/myparcel.component.ts","./src/extensions/aa24796a907818f13f1e0783d2e789fbef1b5678c998f8a33d445cb0349ff142/myparcel.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const updateMyparcelConfig = gql`\n  mutation updateMyparcelConfig($input: MyparcelConfigInput!) {\n    updateMyparcelConfig(input: $input) {\n      apiKey\n    }\n  }\n`;\n\nexport const getMyparcelConfig = gql`\n  query myparcelConfig {\n    myparcelConfig {\n      apiKey\n    }\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport { getMyparcelConfig, updateMyparcelConfig } from './queries';\n\n@Component({\n  selector: 'myparcel-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <form class=\"form\" [formGroup]=\"form\">\n          <section class=\"form-block\">\n            <vdr-form-field label=\"MyParcel apikey\" for=\"apiKey\">\n              <input id=\"apiKey\" type=\"text\" formControlName=\"apiKey\" />\n            </vdr-form-field>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"save()\"\n              [disabled]=\"form.invalid || form.pristine\"\n            >\n              Save\n            </button>\n          </section>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class MyparcelComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      apiKey: ['your-api-key'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(getMyparcelConfig)\n      .mapStream((d: any) => d.myparcelConfig)\n      .subscribe((config) =>\n        this.form.controls['apiKey'].setValue(config.apiKey)\n      );\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        await this.dataService\n          .mutate(updateMyparcelConfig, { input: { apiKey: formValue.apiKey } })\n          .toPromise();\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'MyparcelConfig',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'MyparcelConfig',\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { MyparcelComponent } from './myparcel.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: MyparcelComponent,\n        data: { breadcrumb: 'MyParcel' },\n      },\n    ]),\n  ],\n  providers: [\n    addNavMenuItem(\n      {\n        id: 'myparcel',\n        label: 'MyParcel',\n        routerLink: ['/extensions/myparcel'],\n        icon: 'cursor-hand-open',\n      },\n      'settings'\n    ),\n  ],\n  declarations: [MyparcelComponent],\n})\nexport class MyparcelModule {}\n"],"x_google_ignoreList":[]}