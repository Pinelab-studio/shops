{"version":3,"file":"163.59ff177f9f2414b5.js","mappings":"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","names":["i0","strategy_r1","OrderExportComponent","constructor","formBuilder","dataService","changeDetector","notificationService","localStorageService","this","strategies","form","group","startsAt","endsAt","strategy","serverPath","getServerLocation","ngOnInit","query","gql","single$","subscribe","result","availableOrderExportStrategies","controls","setValue","download","_this","_asyncToGenerator","res","fetch","value","headers","getHeaders","ok","json","Error","message","filename","get","split","blob","downloadBlob","err","console","error","channelToken","authToken","authorization","fileName","blobUrl","window","URL","createObjectURL","a","document","createElement","body","appendChild","setAttribute","href","click","static","t","i1","i2","core","VBU","selectors","decls","vars","consts","template","rf","ctx","OrderExportComponent_option_20_Template","invalid","pristine","OrderExportModule","$C","G2t","SharedModule","RouterModule","forChild","path","pathMatch","component","data","breadcrumb"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/extensions/1404b13bc7fc8bbd041932ce4bb978927ca0a75f97923f28733f1b44cc09f9f8/order-export.component.ts","./src/extensions/1404b13bc7fc8bbd041932ce4bb978927ca0a75f97923f28733f1b44cc09f9f8/order-export.module.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  DataService,\n  getServerLocation,\n  LocalStorageService,\n  NotificationService,\n} from '@vendure/admin-ui/core';\nimport gql from 'graphql-tag';\n\n@Component({\n  selector: 'order-export-component',\n  styles: [],\n  template: `\n    <h1>Export orders</h1>\n    <form class=\"form\" [formGroup]=\"form\" id=\"export-form\">\n      <section class=\"form-block\">\n        <div class=\"flex\">\n          <div>\n            <label>{{ 'order.placed-at-start' | translate }}</label>\n            <vdr-datetime-picker\n              required\n              timeGranularityInterval=\"60\"\n              formControlName=\"startsAt\"\n            ></vdr-datetime-picker>\n          </div>\n          <div>\n            <label>{{ 'order.placed-at-end' | translate }}</label>\n            <vdr-datetime-picker\n              required\n              timeGranularityInterval=\"60\"\n              formControlName=\"endsAt\"\n            ></vdr-datetime-picker>\n          </div>\n        </div>\n        <br />\n        <clr-select-container>\n          <label>Export as</label>\n          <select clrSelect name=\"options\" formControlName=\"strategy\" required>\n            <option *ngFor=\"let strategy of strategies\" [value]=\"strategy\">\n              {{ strategy }}\n            </option>\n          </select>\n        </clr-select-container>\n        <br />\n        <button\n          class=\"btn btn-primary\"\n          [disabled]=\"form.invalid || form.pristine\"\n          (click)=\"download()\"\n        >\n          Export\n        </button>\n      </section>\n    </form>\n  `,\n})\nexport class OrderExportComponent implements OnInit {\n  form: FormGroup;\n  serverPath: string;\n  strategies: string[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService,\n    private localStorageService: LocalStorageService\n  ) {\n    this.form = this.formBuilder.group({\n      startsAt: null,\n      endsAt: null,\n      strategy: null,\n    });\n    this.serverPath = getServerLocation();\n  }\n\n  ngOnInit(): void {\n    this.dataService\n      .query(\n        gql`\n          query availableOrderExportStrategies {\n            availableOrderExportStrategies\n          }\n        `\n      )\n      .single$.subscribe((result: any) => {\n        this.strategies = result.availableOrderExportStrategies;\n        this.form.controls['strategy'].setValue(this.strategies?.[0]);\n      });\n  }\n\n  async download(): Promise<void> {\n    try {\n      const res = await fetch(\n        `${this.serverPath}/export-orders/export/${this.form.value.strategy}?startDate=${this.form.value.startsAt}&endDate=${this.form.value.endsAt}`,\n        {\n          headers: this.getHeaders(),\n        }\n      );\n      if (!res.ok) {\n        const json = await res.json();\n        throw Error(json?.message);\n      }\n      const header = res.headers.get('Content-Disposition');\n      const parts = header!.split(';');\n      const filename = parts[1].split('=')[1];\n      const blob = await res.blob();\n      await this.downloadBlob(blob, filename);\n    } catch (err: any) {\n      console.error(err);\n      this.notificationService.error(err.message);\n    }\n  }\n\n  private getHeaders(): Record<string, string> {\n    const headers: Record<string, string> = {};\n    const channelToken = this.localStorageService.get('activeChannelToken');\n    if (channelToken) {\n      headers['vendure-token'] = channelToken;\n    }\n    const authToken = this.localStorageService.get('authToken');\n    if (authToken) {\n      headers.authorization = `Bearer ${authToken}`;\n    }\n    return headers;\n  }\n\n  private async downloadBlob(blob: Blob, fileName: string): Promise<void> {\n    const blobUrl = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.setAttribute('hidden', 'true');\n    a.href = blobUrl;\n    a.download = fileName;\n    a.setAttribute('target', '_blank');\n    a.click();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\nimport { OrderExportComponent } from './order-export.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: OrderExportComponent,\n        data: { breadcrumb: 'Export orders' },\n      },\n    ]),\n  ],\n  providers: [],\n  declarations: [OrderExportComponent],\n})\nexport class OrderExportModule {}\n"],"x_google_ignoreList":[]}