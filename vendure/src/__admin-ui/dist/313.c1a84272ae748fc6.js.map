{"version":3,"file":"313.c1a84272ae748fc6.js","mappings":"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","names":["withLatestFrom","inputs","project","popResultSelector","operate","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","innerFrom","subscribe","createOperatorSubscriber","value","every","identity","noop","values","next","_c0","a0","ZoneMemberListComponent_ng_template_8_Template","rf","ctx","i0","member_r1","item","id","ZoneMemberListComponent_ng_template_11_Template","member_r2","createdAt","ZoneMemberListComponent_ng_template_14_Template","member_r3","ZoneMemberListComponent_ng_template_17_Template","member_r4","name","ZoneMemberListComponent_ng_template_20_Template","member_r5","code","ZoneMemberListComponent_ng_template_23_vdr_chip_0_Template","ZoneMemberListComponent_ng_template_23_vdr_chip_1_Template","ZoneMemberListComponent_ng_template_23_Template","member_r6","enabled","_c1","zoneName","AddCountryToZoneDialogComponent_ng_template_0_Template","ctx_r0","AddCountryToZoneDialogComponent_ng_template_3_Template","_r2","cancel","add","selectedMemberIds","PermissionGridComponent_tr_2_button_10_Template","_r1","section_r2","$implicit","ctx_r2","toggleAll","permissions","PermissionGridComponent_tr_2_td_11_Template","_r4","$event","permission_r5","setPermission","description","readonly","activePermissions","includes","PermissionGridComponent_tr_2_Template","label","_c2","AdminDetailComponent_button_5_Template","create","detailForm","invalid","pristine","AdminDetailComponent_ng_template_7_button_0_Template","save","AdminDetailComponent_ng_template_7_Template","AdminDetailComponent_vdr_card_13_Template","entity_r5","ngIf","AdminDetailComponent_vdr_form_field_30_Template","AdminDetailComponent_vdr_form_field_32_Template","AdminDetailComponent_vdr_card_35_Template","customFields","get","AdminDetailComponent_li_43_Template","_r6","channel_r7","selectedChannelId","channelId","channelCode","_c3","_c4","_c5","AdministratorListComponent_a_5_Template","AdministratorListComponent_ng_template_17_Template","administrator_r1","AdministratorListComponent_ng_template_20_Template","administrator_r2","AdministratorListComponent_ng_template_23_Template","administrator_r3","updatedAt","AdministratorListComponent_ng_template_26_Template","administrator_r4","firstName","lastName","AdministratorListComponent_ng_template_29_Template","administrator_r5","emailAddress","AdministratorListComponent_ng_template_32_vdr_chip_0_Template","role_r6","AdministratorListComponent_ng_template_32_Template","administrator_r7","user","roles","AdministratorListComponent_vdr_dt2_custom_field_column_33_Template","customField_r8","ctx_r8","sorts","_c6","ChannelDetailComponent_button_5_Template","ctx_r1","saveButtonEnabled","ChannelDetailComponent_ng_template_7_button_0_Template","_r3","ChannelDetailComponent_ng_template_7_Template","ChannelDetailComponent_vdr_card_13_Template","entity_r4","ChannelDetailComponent_vdr_form_field_18_Template","updatePermission","ChannelDetailComponent_vdr_form_item_19_Template","entity","ChannelDetailComponent_option_29_Template","seller_r5","ChannelDetailComponent_option_45_Template","languageCode_r6","ChannelDetailComponent_option_50_Template","code_r7","ChannelDetailComponent_clr_alert_56_Template","ChannelDetailComponent_clr_alert_62_Template","ChannelDetailComponent_vdr_card_68_Template","_c7","ChannelListComponent_a_5_Template","ChannelListComponent_ng_template_17_Template","channel_r1","ChannelListComponent_ng_template_20_Template","channel_r2","ChannelListComponent_ng_template_23_Template","channel_r3","ChannelListComponent_ng_template_26_Template","channel_r4","ChannelListComponent_ng_template_29_Template","channel_r5","token","ChannelListComponent_vdr_dt2_custom_field_column_30_Template","customField_r6","ctx_r6","CountryDetailComponent_button_9_Template","CountryDetailComponent_ng_template_11_button_0_Template","CountryDetailComponent_ng_template_11_Template","CountryDetailComponent_vdr_card_23_Template","CountryDetailComponent_vdr_card_36_Template","_c8","CountryListComponent_a_8_Template","CountryListComponent_ng_template_20_Template","country_r1","CountryListComponent_ng_template_23_Template","country_r2","CountryListComponent_ng_template_26_Template","country_r3","CountryListComponent_ng_template_29_Template","country_r4","CountryListComponent_ng_template_32_Template","country_r5","CountryListComponent_ng_template_35_vdr_chip_0_Template","CountryListComponent_ng_template_35_vdr_chip_1_Template","CountryListComponent_ng_template_35_Template","country_r6","CountryListComponent_vdr_dt2_custom_field_column_36_Template","customField_r7","ctx_r7","GlobalSettingsComponent_button_4_Template","GlobalSettingsComponent_vdr_card_25_Template","PaymentMethodDetailComponent_button_9_Template","selectedHandler","PaymentMethodDetailComponent_ng_template_11_button_0_Template","PaymentMethodDetailComponent_ng_template_11_Template","PaymentMethodDetailComponent_vdr_card_23_Template","PaymentMethodDetailComponent_vdr_card_40_Template","PaymentMethodDetailComponent_vdr_configurable_input_44_Template","removeChecker","selectedChecker","selectedCheckerDefinition","PaymentMethodDetailComponent_div_45_button_7_Template","_r7","checker_r8","selectChecker","PaymentMethodDetailComponent_div_45_Template","checkers","PaymentMethodDetailComponent_vdr_configurable_input_48_Template","_r9","removeHandler","selectedHandlerDefinition","PaymentMethodDetailComponent_div_49_button_7_Template","_r10","handler_r11","selectHandler","PaymentMethodDetailComponent_div_49_Template","handlers","_c9","PaymentMethodListComponent_a_8_Template","PaymentMethodListComponent_ng_template_20_Template","paymentMethod_r1","PaymentMethodListComponent_ng_template_23_Template","paymentMethod_r2","PaymentMethodListComponent_ng_template_26_Template","paymentMethod_r3","PaymentMethodListComponent_ng_template_29_Template","paymentMethod_r4","PaymentMethodListComponent_ng_template_32_Template","paymentMethod_r5","PaymentMethodListComponent_ng_template_35_vdr_chip_0_Template","PaymentMethodListComponent_ng_template_35_vdr_chip_1_Template","PaymentMethodListComponent_ng_template_35_Template","paymentMethod_r6","PaymentMethodListComponent_vdr_dt2_custom_field_column_36_Template","ProfileComponent_vdr_card_11_Template","entity_r1","ProfileComponent_vdr_form_field_25_Template","ProfileComponent_vdr_card_30_Template","RoleDetailComponent_button_5_Template","RoleDetailComponent_ng_template_7_button_0_Template","RoleDetailComponent_ng_template_7_Template","RoleDetailComponent_vdr_card_13_Template","RoleListComponent_a_5_Template","RoleListComponent_ng_template_17_Template","role_r1","RoleListComponent_ng_template_20_Template","role_r2","RoleListComponent_ng_template_23_Template","role_r3","RoleListComponent_ng_template_26_a_0_Template","role_r4","RoleListComponent_ng_template_26_ng_template_1_Template","RoleListComponent_ng_template_26_Template","defaultRole_r5","ctx_r5","isDefaultRole","RoleListComponent_ng_template_29_span_0_Template","role_r7","RoleListComponent_ng_template_29_Template","RoleListComponent_ng_template_32_ng_container_0_vdr_chip_1_Template","channel_r8","RoleListComponent_ng_template_32_ng_container_0_Template","role_r9","channels","RoleListComponent_ng_template_32_Template","RoleListComponent_ng_template_35_ng_container_0_vdr_chip_2_Template","permission_r10","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_container_1_Template","role_r12","initialLimit","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_template_2_Template","RoleListComponent_ng_template_35_ng_container_0_button_4_Template","_r11","toggleDisplayLimit","collapse_r13","displayLimit","RoleListComponent_ng_template_35_ng_container_0_Template","RoleListComponent_ng_template_35_ng_template_1_Template","RoleListComponent_ng_template_35_Template","defaultRole_r14","_c10","SellerDetailComponent_button_5_Template","SellerDetailComponent_ng_template_7_button_0_Template","SellerDetailComponent_ng_template_7_Template","SellerDetailComponent_vdr_card_13_Template","SellerDetailComponent_vdr_card_22_Template","_c12","SellerListComponent_a_5_Template","SellerListComponent_ng_template_17_Template","seller_r1","SellerListComponent_ng_template_20_Template","seller_r2","SellerListComponent_ng_template_23_Template","seller_r3","SellerListComponent_ng_template_26_Template","seller_r4","SellerListComponent_vdr_dt2_custom_field_column_27_Template","customField_r5","ShippingEligibilityTestResultComponent_div_2_vdr_object_tree_14_Template","quote_r1","metadata","ShippingEligibilityTestResultComponent_div_2_Template","testDataUpdated","price","currencyCode","priceWithTax","ShippingEligibilityTestResultComponent_div_3_Template","TestOrderBuilderComponent_table_0_tr_19_Template","line_r3","quantity","ctx_r3","updateQuantity","removeLine","preview","sku","unitPriceWithTax","TestOrderBuilderComponent_table_0_Template","lines","subTotal","TestOrderBuilderComponent_ng_template_1_Template","TestAddressFormComponent_option_18_Template","_c13","a1","a2","success","error","unknown","ShippingMethodTestResultComponent_clr_icon_9_Template","ShippingMethodTestResultComponent_clr_icon_10_Template","ShippingMethodTestResultComponent_clr_icon_11_Template","ShippingMethodTestResultComponent_vdr_labeled_data_14_Template","testResult","quote","ShippingMethodTestResultComponent_vdr_labeled_data_15_Template","ShippingMethodTestResultComponent_vdr_object_tree_16_Template","ShippingMethodDetailComponent_button_9_Template","selectedCalculator","ShippingMethodDetailComponent_ng_template_11_button_0_Template","ShippingMethodDetailComponent_ng_template_11_Template","ShippingMethodDetailComponent_vdr_card_17_Template","ShippingMethodDetailComponent_option_38_Template","handler_r6","ShippingMethodDetailComponent_vdr_card_39_Template","ShippingMethodDetailComponent_vdr_configurable_input_43_Template","ShippingMethodDetailComponent_div_44_button_7_Template","_r8","checker_r9","ShippingMethodDetailComponent_div_44_Template","ShippingMethodDetailComponent_vdr_configurable_input_47_Template","selectedCalculatorDefinition","ShippingMethodDetailComponent_div_48_button_7_Template","calculator_r12","selectCalculator","ShippingMethodDetailComponent_div_48_Template","calculators","_c14","ShippingMethodListComponent_a_8_Template","ShippingMethodListComponent_ng_template_20_Template","shippingMethod_r1","ShippingMethodListComponent_ng_template_23_Template","shippingMethod_r2","ShippingMethodListComponent_ng_template_26_Template","shippingMethod_r3","ShippingMethodListComponent_ng_template_29_Template","shippingMethod_r4","ShippingMethodListComponent_ng_template_32_Template","shippingMethod_r5","ShippingMethodListComponent_ng_template_35_Template","shippingMethod_r6","ShippingMethodListComponent_ng_template_38_Template","shippingMethod_r7","fulfillmentHandlerCode","ShippingMethodListComponent_vdr_dt2_custom_field_column_39_Template","_c15","pattern","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_button_0_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_13_Template","StockLocationDetailComponent_vdr_card_27_Template","_c16","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_17_Template","stockLocation_r1","StockLocationListComponent_ng_template_20_Template","stockLocation_r2","StockLocationListComponent_ng_template_23_Template","stockLocation_r3","StockLocationListComponent_ng_template_26_Template","stockLocation_r4","StockLocationListComponent_ng_template_29_Template","stockLocation_r5","StockLocationListComponent_vdr_dt2_custom_field_column_30_Template","field_r6","TaxCategoryDetailComponent_button_5_Template","TaxCategoryDetailComponent_ng_template_7_button_0_Template","TaxCategoryDetailComponent_ng_template_7_Template","TaxCategoryDetailComponent_vdr_card_13_Template","TaxCategoryDetailComponent_vdr_card_27_Template","_c17","TaxCategoryListComponent_a_5_Template","TaxCategoryListComponent_ng_template_17_Template","taxCategory_r1","TaxCategoryListComponent_ng_template_20_Template","taxCategory_r2","TaxCategoryListComponent_ng_template_23_Template","taxCategory_r3","TaxCategoryListComponent_ng_template_26_Template","taxCategory_r4","TaxCategoryListComponent_ng_template_29_vdr_chip_0_Template","TaxCategoryListComponent_ng_template_29_Template","taxCategory_r5","isDefault","TaxCategoryListComponent_vdr_dt2_custom_field_column_30_Template","TaxRateDetailComponent_button_5_Template","TaxRateDetailComponent_ng_template_7_button_0_Template","TaxRateDetailComponent_ng_template_7_Template","TaxRateDetailComponent_vdr_card_19_Template","TaxRateDetailComponent_option_37_Template","TaxRateDetailComponent_vdr_card_43_Template","_c18","TaxRateListComponent_a_5_Template","TaxRateListComponent_ng_template_17_Template","taxRate_r1","TaxRateListComponent_ng_template_20_Template","taxRate_r2","TaxRateListComponent_ng_template_23_Template","taxRate_r3","TaxRateListComponent_ng_template_26_Template","taxRate_r4","TaxRateListComponent_ng_template_29_Template","taxRate_r5","category","TaxRateListComponent_ng_template_32_Template","taxRate_r6","zone","TaxRateListComponent_ng_template_35_Template","taxRate_r7","customerGroup","TaxRateListComponent_ng_template_38_Template","taxRate_r8","TaxRateListComponent_ng_template_41_vdr_chip_0_Template","TaxRateListComponent_ng_template_41_vdr_chip_1_Template","TaxRateListComponent_ng_template_41_Template","taxRate_r9","TaxRateListComponent_vdr_dt2_custom_field_column_42_Template","customField_r10","ctx_r10","ZoneDetailComponent_button_5_Template","ZoneDetailComponent_ng_template_7_button_0_Template","ZoneDetailComponent_ng_template_7_Template","ZoneDetailComponent_vdr_card_13_Template","ZoneDetailComponent_vdr_card_22_Template","_c19","_c20","contents","ZoneListComponent_a_8_Template","ZoneListComponent_ng_template_12_ng_template_11_Template","customerGroup_r3","ZoneListComponent_ng_template_12_ng_template_14_Template","customerGroup_r4","ZoneListComponent_ng_template_12_ng_template_17_Template","customerGroup_r5","ZoneListComponent_ng_template_12_ng_template_20_Template","customerGroup_r6","ZoneListComponent_ng_template_12_ng_template_23_Template","customerGroup_r7","ZoneListComponent_ng_template_12_vdr_dt2_custom_field_column_24_Template","ZoneListComponent_ng_template_12_Template","setPageNumber","setItemsPerPage","items$","itemsPerPage$","totalItems$","currentPage$","filters","activeIndex$","selectionManager","searchTermControl","ZoneListComponent_ng_template_13_ng_container_0_vdr_zone_member_list_6_Template","activeZone_r12","ZoneListComponent_ng_template_13_ng_container_0_Template","activeZone_r10","addToZone","activeZone$","ZoneListComponent_ng_template_13_Template","ZoneMemberControlsDirective","constructor","templateRef","this","static","ɵfac","t","ɵdir","type","selectors","ZoneMemberListHeaderDirective","ZoneMemberListComponent","dataService","selectionChange","EventEmitter","filterTermControl","FormControl","currentPage","itemsPerPage","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","membersInput$","Subject","activeZoneInput$","BehaviorSubject","undefined","destroy$","refresh$","ngOnInit","activeZoneMembers$","merge","pipe","switchMap","activeZone","query","GetZoneMembersDocument","zoneId","mapSingle","members","of","members$","take","setCurrentItems","filter","m","selectionChanges$","takeUntil","selection","emit","s","filteredMembers$","combineLatest","valueChanges","startWith","filterTerm","term","toLocaleLowerCase","ngOnChanges","changes","ngOnDestroy","complete","refresh","i1","ɵcmp","contentQueries","dirIndex","_t","headerTemplate","first","controlsTemplate","locationId","outputs","features","decls","vars","consts","template","dependencies","i3","i2","i3$1","i5","styles","changeDetection","GET_ZONE_MEMBERS","gql","AddCountryToZoneDialogComponent","currentMembers$","availableCountries$","GetCountryListDocument","options","mapStream","data","countries","items","currentMembers","c","find","cm","resolveWith","PermissionGridComponent","permissionChange","buildGrid","permission","defs","some","d","def","crudGroups","Map","nonCrud","crudRe","permissionDefinitions","test","groupName","match","existing","push","set","assignable","gridData","from","entries","extractCrudDescription","replace","GET_ADMINISTRATOR_DETAIL","ADMINISTRATOR_FRAGMENT","AdminDetailComponent","TypedBaseDetailComponent","getAvailableChannels","Object","selectedRolePermissions","changeDetector","formBuilder","notificationService","super","getCustomFieldConfig","group","Validators","required","password","getCustomFieldsDefaults","selectedRoles","init","allRoles$","administrator","getRoles","CUSTOMER_ROLE_CODE","client","userStatus","single$","Permission","CreateAdministrator","UpdateAdministrator","rolesSelect","disable","serverConfigService","getPermissionDefinitions","destroy","rolesChanged","buildPermissionsMap","getPermissionsForSelectedChannel","getActivePermissions","input","active","roleIds","role","notNullOrUndefined","createAdministrator","marker","markAsPristine","markForCheck","router","navigate","relativeTo","route","err","entity$","mergeMap","formValue","updateAdministrator","setFormValues","languageCode","patchValue","setCustomFieldFormValues","passwordControl","setValidators","permissionsControl","channelIdPermissionsMap","channelIdCodeMap","channel","permissionSet","Set","forEach","p","keys","permissionsHash","has","i2$1","updateButton_r8","isNew$","i4","deleteAdministratorsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteAdministrator","getItemName","bulkDelete","ids","deleteAdministrators","res","GET_ADMINISTRATOR_LIST","AdministratorListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","addFilter","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetAdministratorListDocument","getItems","administrators","setVariables","skip","createSearchQuery","refreshListOnChanges","searchTerm","_filter","filterOperator","LogicalOperator","AND","contains","OR","createFilterInput","sort","createSortInput","GET_CHANNEL_DETAIL","CHANNEL_FRAGMENT","ChannelDetailComponent","DEFAULT_CHANNEL_CODE","pricesIncludeTax","availableLanguageCodes","availableCurrencyCodes","defaultCurrencyCode","defaultShippingZoneId","defaultLanguageCode","defaultTaxZoneId","sellerId","SuperAdmin","UpdateChannel","CreateChannel","sellers$","settings","getSellerList","sellers","availableLanguageCodes$","getAvailableLanguages","controls","setValue","dirty","valid","createChannel","auth","currentUser","me","updateUserChannels","__typename","message","updateChannel","generateToken","defaultShippingZone","defaultTaxZone","seller","codeControl","crypto","getRandomValues","Uint8Array","toString","padStart","join","deleteChannelsBulkAction","DeleteChannel","deleteChannels","GET_CHANNEL_LIST","ChannelListComponent","GetChannelListDocument","isDefaultChannel","GET_COUNTRY_DETAIL","COUNTRY_FRAGMENT","CountryDetailComponent","UpdateSettings","UpdateCountry","createUpdatedTranslatable","translatable","translations","updatedFields","customFieldConfig","defaultTranslation","createCountry","languageCode$","country","updateCountry","currentTranslation","findTranslation","setLanguage","updateButton_r6","availableLanguages$","deleteCountriesBulkAction","DeleteSettings","DeleteCountry","deleteCountries","GET_COUNTRY_LIST","CountryListComponent","contentLanguage$","GET_GLOBAL_SETTINGS_DETAIL","GlobalSettingsComponent","availableLanguages","trackInventory","outOfStockThreshold","languageCodes","LanguageCode","UpdateGlobalSettings","languagesSelect","updateGlobalSettings","tap","switchMap$1","refreshGlobalSettings","uiState","globalSettings","availableLangs","contentLanguage","setContentLanguage","GET_PAYMENT_METHOD_DETAIL","PAYMENT_METHOD_FRAGMENT","PaymentMethodDetailComponent","checker","handler","UpdatePaymentMethod","getPaymentMethodOperations","paymentMethodEligibilityCheckers","paymentMethodHandlers","updateCode","currentCode","nameValue","normalizeString","configurableDefinitionToInstance","formControl","clearValidators","updateValueAndValidity","onlySelf","markAsDirty","getUpdatedPaymentMethod","createPaymentMethod","paymentMethod","updatePaymentMethod","formGroup","toConfigurableOperationInput","args","getConfigArgValue","target","updateButton_r12","deletePaymentMethodsBulkAction","DeletePaymentMethod","shouldRetryItem","response","retrying","deletePaymentMethods","assignPaymentMethodsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","paymentMethodIds","channelIds","mutate","AssignPaymentMethodsToChannelDocument","assignPaymentMethodsToChannel","removePaymentMethodsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","RemovePaymentMethodsFromChannelDocument","removePaymentMethodsFromChannel","GET_PAYMENT_METHOD_LIST","PaymentMethodListComponent","GetPaymentMethodListDocument","paymentMethods","GET_PROFILE_DETAIL","ProfileComponent","updateActiveAdministrator","GET_ROLE_DETAIL","ROLE_FRAGMENT","RoleDetailComponent","change","currentPermissions","newValue","unique","createRole","updateRole","detectChanges","tmp_14_0","deleteRolesBulkAction","deleteRoles","GET_ROLE_LIST","RoleListComponent","GetRoleListDocument","SUPER_ADMIN_ROLE_CODE","GET_SELLER_DETAIL","SellerDetailComponent","UpdateSeller","CreateSeller","createSeller","updateSeller","updateButton_r5","deleteSellersBulkAction","DeleteSeller","deleteSellers","SellerListComponent","GetSellerListDocument","ShippingEligibilityTestResultComponent","okToRun","runTest","TestOrderBuilderComponent","reduce","sum","l","localStorageService","orderLinesChange","loadFromLocalStorage","getActiveChannel","result","activeChannel","selectResult","addToLines","productVariantId","productVariantName","productAsset","persistToLocalStorage","line","setForCurrentLocation","getForCurrentLocation","emptyPlaceholder_r5","i5$1","TestAddressFormComponent","addressChange","getAvailableCountries","initialValue","city","countryCode","postalCode","province","form","subscription","unsubscribe","ShippingMethodTestResultComponent","eligible","GET_SHIPPING_METHOD_DETAIL","SHIPPING_METHOD_FRAGMENT","ShippingMethodDetailComponent","fulfillmentHandler","calculator","fulfillmentHandlers","UpdateShippingMethod","fetchTestResult$","shippingMethod","getShippingMethodOperations","shippingEligibilityCheckers","shippingCalculators","activeChannel$","testResult$","address","shippingAddress","streetLine1","testShippingMethod","getUpdatedShippingMethod","createShippingMethod","updateShippingMethod","console","setTestOrderLines","event","testOrderLines","setTestAddress","testAddress","allTestDataPresent","tmp_28_0","updateButton_r13","deleteShippingMethodsBulkAction","DeleteShippingMethod","deleteShippingMethods","assignShippingMethodsToChannelBulkAction","shippingMethodIds","AssignShippingMethodsToChannelDocument","assignShippingMethodsToChannel","removeShippingMethodsFromChannelBulkAction","RemoveShippingMethodsFromChannelDocument","removeShippingMethodsFromChannel","GET_SHIPPING_METHOD_LIST","ShippingMethodListComponent","GetShippingMethodListDocument","shippingMethods","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","taxRate","UpdateStockLocationDocument","deleteStockLocationsBulkAction","DeleteStockLocation","DeleteCatalog","DeleteStockLocationsDocument","deleteStockLocations","DeletionResult","NOT_DELETED","assignStockLocationsToChannelBulkAction","UpdateCatalog","UpdateStockLocation","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","GET_STOCK_LOCATION_LIST","StockLocationListComponent","addFilters","addSorts","GetStockLocationListDocument","stockLocations","GET_TAX_CATEGORY_DETAIL","TAX_CATEGORY_FRAGMENT","TaxCategoryDetailComponent","UpdateTaxCategory","createTaxCategory","taxCategory","updateTaxCategory","deleteTaxCategoriesBulkAction","DeleteTaxCategory","deleteTaxCategories","GET_TAX_CATEGORY_LIST","TaxCategoryListComponent","getCustomFieldsFor","GetTaxCategoryListDocument","taxCategories","GET_TAX_RATE_DETAIL","TAX_RATE_FRAGMENT","TaxRateDetailComponent","taxCategoryId","customerGroupId","UpdateTaxRate","taxCategories$","getTaxCategories","categoryId","createTaxRate","updateTaxRate","deleteTaxRatesBulkAction","DeleteTaxRate","deleteTaxRates","GET_TAX_RATE_LIST","TaxRateListComponent","GetTaxRateListDocument","taxRates","TestShippingMethodsComponent","testEligibleShippingMethods","tmp_0_0","GET_ZONE_DETAIL","ZoneDetailComponent","UpdateZone","createZone","updateZone","deleteZonesBulkAction","DeleteZone","deleteZones","GET_ZONE_LIST","ZoneListComponent","modalService","GetZoneListDocument","zones","activeZoneId$","paramMap","pm","distinctUntilChanged","activeZoneId","z","findIndex","g","closeMembers","params","snapshot","queryParamsHandling","fromComponent","locals","size","memberIds","addMembersToZone","mapTo","EMPTY","countryCount","refreshMemberList","zoneMemberList","viewQuery","tmp_4_0","removeZoneMembersBulkAction","icon","iconClass","UpdateCustomerGroup","onClick","injector","hostComponent","clearSelection","DataService","NotificationService","removeMembersFromZone","ProfileResolver","BaseEntityResolver","getActiveAdministrator","activeAdministrator","ɵprov","factory","providedIn","createRoutes","pageService","path","component","PageComponent","breadcrumb","resolve","detail","inject","GetProfileDetailDocument","children","getPageTabRoutes","link","GetGlobalSettingsDetailDocument","SettingsModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetSellerDetailDocument","entityKey","getBreadcrumbs","GetChannelDetailDocument","GetAdministratorDetailDocument","GetRoleDetailDocument","GetShippingMethodDetailDocument","GetPaymentMethodDetailDocument","GetTaxCategoryDetailDocument","GetTaxRateDetailDocument","GetCountryDetailDocument","GetZoneDetailDocument","GetStockLocationDetailDocument","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-settings.mjs"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, Injectable, inject, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { SelectionManager, GetZoneMembersDocument, GetCountryListDocument, ADMINISTRATOR_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, Permission, createBulkDeleteAction, TypedBaseListComponent, GetAdministratorListDocument, LogicalOperator, CHANNEL_FRAGMENT, GetChannelListDocument, COUNTRY_FRAGMENT, createUpdatedTranslatable, findTranslation, LanguageCode, PAYMENT_METHOD_FRAGMENT, configurableDefinitionToInstance, toConfigurableOperationInput, getConfigArgValue, createBulkAssignToChannelAction, AssignPaymentMethodsToChannelDocument, createBulkRemoveFromChannelAction, RemovePaymentMethodsFromChannelDocument, GetPaymentMethodListDocument, ROLE_FRAGMENT, GetRoleListDocument, GetSellerListDocument, SHIPPING_METHOD_FRAGMENT, AssignShippingMethodsToChannelDocument, RemoveShippingMethodsFromChannelDocument, GetShippingMethodListDocument, CreateStockLocationDocument, UpdateStockLocationDocument, DeleteStockLocationsDocument, DeletionResult, AssignStockLocationsToChannelDocument, RemoveStockLocationsFromChannelDocument, GetStockLocationListDocument, TAX_CATEGORY_FRAGMENT, GetTaxCategoryListDocument, TAX_RATE_FRAGMENT, GetTaxRateListDocument, GetZoneListDocument, DataService, NotificationService, BaseEntityResolver, PageComponent, GetProfileDetailDocument, GetGlobalSettingsDetailDocument, detailComponentWithResolver, GetSellerDetailDocument, GetChannelDetailDocument, GetAdministratorDetailDocument, GetRoleDetailDocument, GetShippingMethodDetailDocument, GetPaymentMethodDetailDocument, GetTaxCategoryDetailDocument, GetTaxRateDetailDocument, GetCountryDetailDocument, GetZoneDetailDocument, GetStockLocationDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { take, takeUntil, startWith, map, withLatestFrom, mergeMap, tap, switchMap as switchMap$1, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport * as i2$1 from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Subject, BehaviorSubject, merge, switchMap, of, combineLatest, EMPTY } from 'rxjs';\nimport * as i3 from '@clr/angular';\nimport * as i2 from '@angular/common';\nimport * as i3$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i5 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { CUSTOMER_ROLE_CODE, DEFAULT_CHANNEL_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport * as i4 from '@ng-select/ng-select';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@angular/cdk/bidi';\n\nclass ZoneMemberControlsDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberControlsDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ZoneMemberControlsDirective, selector: \"[vdrZoneMemberControls]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberControlsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vdrZoneMemberControls]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass ZoneMemberListHeaderDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberListHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ZoneMemberListHeaderDirective, selector: \"[vdrZoneMemberListHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberListHeaderDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vdrZoneMemberListHeader]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\nclass ZoneMemberListComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedMemberIds = [];\n        this.selectionChange = new EventEmitter();\n        this.filterTermControl = new FormControl('');\n        this.currentPage = 1;\n        this.itemsPerPage = 10;\n        this.selectionManager = new SelectionManager({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n        this.membersInput$ = new Subject();\n        this.activeZoneInput$ = new BehaviorSubject(undefined);\n        this.destroy$ = new Subject();\n        this.refresh$ = new Subject();\n    }\n    ngOnInit() {\n        const activeZoneMembers$ = merge(this.activeZoneInput$, this.refresh$).pipe(switchMap(activeZone => this.activeZone\n            ? this.dataService\n                .query(GetZoneMembersDocument, { zoneId: this.activeZone.id })\n                .mapSingle(({ zone }) => zone?.members ?? [])\n            : of([])));\n        this.members$ = merge(activeZoneMembers$, this.membersInput$);\n        this.members$.pipe(take(1)).subscribe(members => {\n            this.selectionManager.setCurrentItems(members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);\n        });\n        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\n            this.selectionChange.emit(selection.map(s => s.id));\n        });\n        this.filteredMembers$ = combineLatest(this.members$, this.filterTermControl.valueChanges.pipe(startWith(''))).pipe(map(([members, filterTerm]) => {\n            if (filterTerm) {\n                const term = filterTerm?.toLocaleLowerCase() ?? '';\n                return members.filter(m => m.name.toLocaleLowerCase().includes(term) ||\n                    m.code.toLocaleLowerCase().includes(term));\n            }\n            else {\n                return members;\n            }\n        }));\n        this.totalItems$ = this.filteredMembers$.pipe(map(members => members.length));\n    }\n    ngOnChanges(changes) {\n        if ('members' in changes) {\n            this.membersInput$.next(this.members ?? []);\n        }\n        if ('activeZone' in changes) {\n            this.activeZoneInput$.next(this.activeZone);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    refresh() {\n        this.refresh$.next();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: { locationId: \"locationId\", members: \"members\", selectedMemberIds: \"selectedMemberIds\", activeZone: \"activeZone\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: ZoneMemberListHeaderDirective, descendants: true }, { propertyName: \"controlsTemplate\", first: true, predicate: ZoneMemberControlsDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneMemberListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-member-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }], propDecorators: { locationId: [{\n                type: Input\n            }], members: [{\n                type: Input\n            }], selectedMemberIds: [{\n                type: Input\n            }], activeZone: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: [ZoneMemberListHeaderDirective]\n            }], controlsTemplate: [{\n                type: ContentChild,\n                args: [ZoneMemberControlsDirective]\n            }] } });\n\nconst GET_ZONE_MEMBERS = gql `\r\n    query GetZoneMembers($zoneId: ID!) {\r\n        zone(id: $zoneId) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\nclass AddCountryToZoneDialogComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.selectedMemberIds = [];\n    }\n    ngOnInit() {\n        this.currentMembers$ = this.dataService\n            .query(GetZoneMembersDocument, { zoneId: this.zoneId })\n            .mapSingle(({ zone }) => zone?.members ?? []);\n        this.availableCountries$ = this.dataService\n            .query(GetCountryListDocument, {\n            options: { take: 999 },\n        })\n            .mapStream(data => data.countries.items)\n            .pipe(withLatestFrom(this.currentMembers$), map(([countries, currentMembers]) => countries.filter(c => !currentMembers.find(cm => cm.id === c.id))));\n    }\n    cancel() {\n        this.resolveWith();\n    }\n    add() {\n        this.resolveWith(this.selectedMemberIds);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddCountryToZoneDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AddCountryToZoneDialogComponent, selector: \"vdr-add-country-to-zone-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AddCountryToZoneDialogComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-add-country-to-zone-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\n/**\n * A table showing and allowing the setting of all possible CRUD permissions.\n */\nclass PermissionGridComponent {\n    constructor() {\n        this.readonly = false;\n        this.permissionChange = new EventEmitter();\n    }\n    ngOnInit() {\n        this.buildGrid();\n    }\n    setPermission(permission, value) {\n        if (!this.readonly) {\n            this.permissionChange.emit({ permission, value });\n        }\n    }\n    toggleAll(defs) {\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\n        for (const def of defs) {\n            this.permissionChange.emit({ permission: def.name, value });\n        }\n    }\n    buildGrid() {\n        const crudGroups = new Map();\n        const nonCrud = [];\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\n        for (const def of this.permissionDefinitions) {\n            const isCrud = crudRe.test(def.name);\n            if (isCrud) {\n                const groupName = def.name.match(crudRe)?.[2];\n                if (groupName) {\n                    const existing = crudGroups.get(groupName);\n                    if (existing) {\n                        existing.push(def);\n                    }\n                    else {\n                        crudGroups.set(groupName, [def]);\n                    }\n                }\n            }\n            else if (def.assignable) {\n                nonCrud.push(def);\n            }\n        }\n        this.gridData = [\n            ...nonCrud.map(d => ({\n                label: d.name,\n                description: d.description,\n                permissions: [d],\n            })),\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => ({\n                label,\n                description: this.extractCrudDescription(defs[0]),\n                permissions: defs,\n            })),\n        ];\n    }\n    extractCrudDescription(def) {\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PermissionGridComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: { permissionDefinitions: \"permissionDefinitions\", activePermissions: \"activePermissions\", readonly: \"readonly\" }, outputs: { permissionChange: \"permissionChange\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.SelectToggleComponent, selector: \"vdr-select-toggle\", inputs: [\"size\", \"selected\", \"hiddenWhenOff\", \"disabled\", \"label\"], outputs: [\"selectedChange\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PermissionGridComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-permission-grid', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"] }]\n        }], propDecorators: { permissionDefinitions: [{\n                type: Input\n            }], activePermissions: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], permissionChange: [{\n                type: Output\n            }] } });\n\nconst GET_ADMINISTRATOR_DETAIL = gql `\r\n    query GetAdministratorDetail($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\nclass AdminDetailComponent extends TypedBaseDetailComponent {\n    getAvailableChannels() {\n        return Object.values(this.selectedRolePermissions);\n    }\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            roles: [\n                [],\n            ],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.selectedRoles = [];\n        this.selectedRolePermissions = {};\n        this.selectedChannelId = null;\n    }\n    ngOnInit() {\n        this.init();\n        this.allRoles$ = this.dataService.administrator\n            .getRoles(999)\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.CreateAdministrator) &&\n                !userStatus.permissions.includes(Permission.UpdateAdministrator)) {\n                const rolesSelect = this.detailForm.get('roles');\n                if (rolesSelect) {\n                    rolesSelect.disable();\n                }\n            }\n        });\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    rolesChanged(roles) {\n        this.buildPermissionsMap();\n    }\n    getPermissionsForSelectedChannel() {\n        function getActivePermissions(input) {\n            return Object.entries(input)\n                .filter(([permission, active]) => active)\n                .map(([permission, active]) => permission);\n        }\n        if (this.selectedChannelId) {\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\n            if (selectedChannel) {\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\n                return getActivePermissions(permissionMap);\n            }\n        }\n        const channels = Object.values(this.selectedRolePermissions);\n        if (0 < channels.length) {\n            this.selectedChannelId = channels[0].channelId;\n            return getActivePermissions(channels[0].permissions);\n        }\n        return [];\n    }\n    create() {\n        const { emailAddress, firstName, lastName, password, customFields, roles } = this.detailForm.value;\n        if (!emailAddress || !firstName || !lastName || !password) {\n            return;\n        }\n        const administrator = {\n            emailAddress,\n            firstName,\n            lastName,\n            password,\n            customFields,\n            roleIds: roles?.map(role => role.id).filter(notNullOrUndefined) ?? [],\n        };\n        this.dataService.administrator.createAdministrator(administrator).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const administrator = {\n                id,\n                emailAddress: formValue.emailAddress,\n                firstName: formValue.firstName,\n                lastName: formValue.lastName,\n                password: formValue.password,\n                customFields: formValue.customFields,\n                roleIds: formValue.roles?.map(role => role.id),\n            };\n            return this.dataService.administrator.updateAdministrator(administrator);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            emailAddress: entity.emailAddress,\n            firstName: entity.firstName,\n            lastName: entity.lastName,\n            roles: entity.user.roles,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n        const passwordControl = this.detailForm.get('password');\n        if (passwordControl) {\n            if (!entity.id) {\n                passwordControl.setValidators([Validators.required]);\n            }\n            else {\n                passwordControl.setValidators([]);\n            }\n        }\n        this.buildPermissionsMap();\n    }\n    buildPermissionsMap() {\n        const permissionsControl = this.detailForm.get('roles');\n        if (permissionsControl) {\n            const roles = permissionsControl.value;\n            const channelIdPermissionsMap = new Map();\n            const channelIdCodeMap = new Map();\n            for (const role of roles ?? []) {\n                for (const channel of role.channels) {\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\n                    const permissionSet = channelPermissions || new Set();\n                    role.permissions.forEach(p => permissionSet.add(p));\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\n                    channelIdCodeMap.set(channel.id, channel.code);\n                }\n            }\n            this.selectedRolePermissions = {};\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const permissionSet = channelIdPermissionsMap.get(channelId);\n                const permissionsHash = {};\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\n                    permissionsHash[def.name] = permissionSet.has(def.name);\n                }\n                this.selectedRolePermissions[channelId] = {\n                    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n                    channelId,\n                    channelCode: channelIdCodeMap.get(channelId),\n                    permissions: permissionsHash,\n                    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n                };\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AdminDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AdminDetailComponent, selector: \"vdr-admin-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i4.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AdminDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-admin-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteAdministratorsBulkAction = createBulkDeleteAction({\n    location: 'administrator-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\n    getItemName: item => item.firstName + ' ' + item.lastName,\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteAdministrators(ids).pipe(map(res => res.deleteAdministrators)),\n});\n\nconst GET_ADMINISTRATOR_LIST = gql `\r\n    query GetAdministratorList($options: AdministratorListOptions) {\r\n        administrators(options: $options) {\r\n            items {\r\n                ...AdministratorListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment AdministratorListItem on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            lastLogin\r\n            roles {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                code\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\nclass AdministratorListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'firstName',\n            type: { kind: 'text' },\n            label: marker('settings.first-name'),\n            filterField: 'firstName',\n        })\n            .addFilter({\n            name: 'lastName',\n            type: { kind: 'text' },\n            label: marker('settings.last-name'),\n            filterField: 'lastName',\n        })\n            .addFilter({\n            name: 'emailAddress',\n            type: { kind: 'text' },\n            label: marker('settings.email-address'),\n            filterField: 'emailAddress',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'lastName' })\n            .addSort({ name: 'emailAddress' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetAdministratorListDocument,\n            getItems: data => data.administrators,\n            setVariables: (skip, take) => this.createSearchQuery(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    createSearchQuery(skip, take, searchTerm) {\n        let _filter = {};\n        let filterOperator = LogicalOperator.AND;\n        if (searchTerm) {\n            _filter = {\n                emailAddress: {\n                    contains: searchTerm,\n                },\n                firstName: {\n                    contains: searchTerm,\n                },\n                lastName: {\n                    contains: searchTerm,\n                },\n            };\n            filterOperator = LogicalOperator.OR;\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter: {\n                    ...(_filter ?? {}),\n                    ...this.filters.createFilterInput(),\n                },\n                sort: this.sorts.createSortInput(),\n                filterOperator,\n            },\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AdministratorListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: AdministratorListComponent, selector: \"vdr-administrator-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"administrator-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: AdministratorListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-administrator-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"administrator-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"administrator-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_CHANNEL_DETAIL = gql `\r\n    query GetChannelDetail($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\nclass ChannelDetailComponent extends TypedBaseDetailComponent {\n    constructor(serverConfigService, changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.serverConfigService = serverConfigService;\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.DEFAULT_CHANNEL_CODE = DEFAULT_CHANNEL_CODE;\n        this.customFields = this.getCustomFieldConfig('Channel');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            token: ['', Validators.required],\n            pricesIncludeTax: [false],\n            availableLanguageCodes: [[]],\n            availableCurrencyCodes: [[]],\n            defaultCurrencyCode: ['', Validators.required],\n            defaultShippingZoneId: ['', Validators.required],\n            defaultLanguageCode: [undefined, Validators.required],\n            defaultTaxZoneId: ['', Validators.required],\n            sellerId: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\n    }\n    ngOnInit() {\n        this.init();\n        // TODO: make this lazy-loaded autocomplete\n        this.sellers$ = this.dataService.settings.getSellerList().mapSingle(data => data.sellers.items);\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\n        this.detailForm.controls.availableCurrencyCodes.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            if (value) {\n                const defaultCurrencyCode = this.detailForm.controls.defaultCurrencyCode.value;\n                if (defaultCurrencyCode && !value.includes(defaultCurrencyCode)) {\n                    this.detailForm.controls.defaultCurrencyCode.setValue(value[0]);\n                }\n            }\n        });\n        this.detailForm.controls.availableLanguageCodes.valueChanges\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(value => {\n            if (value) {\n                const defaultLanguageCode = this.detailForm.controls.defaultLanguageCode.value;\n                if (defaultLanguageCode && !value.includes(defaultLanguageCode)) {\n                    this.detailForm.controls.defaultLanguageCode.setValue(value[0]);\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { code, token, defaultLanguageCode, pricesIncludeTax, defaultCurrencyCode, defaultShippingZoneId, defaultTaxZoneId, customFields, sellerId, } = this.detailForm.value;\n        if (!code ||\n            !token ||\n            !defaultLanguageCode ||\n            !defaultCurrencyCode ||\n            !defaultShippingZoneId ||\n            !defaultTaxZoneId) {\n            return;\n        }\n        const input = {\n            code,\n            token,\n            defaultLanguageCode,\n            pricesIncludeTax: !!pricesIncludeTax,\n            defaultCurrencyCode,\n            defaultShippingZoneId,\n            defaultTaxZoneId,\n            customFields,\n            sellerId,\n        };\n        this.dataService.settings\n            .createChannel(input)\n            .pipe(mergeMap(({ createChannel }) => this.dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\n            me,\n            createChannel,\n        })))), mergeMap(({ me, createChannel }) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.dataService.client.updateUserChannels(me.channels).pipe(map(() => createChannel))))\n            .subscribe(data => {\n            switch (data.__typename) {\n                case 'Channel':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Channel',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.id], { relativeTo: this.route });\n                    break;\n                case 'LanguageNotAvailableError':\n                    this.notificationService.error(data.message);\n                    break;\n            }\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(channel => {\n            const input = {\n                id: channel.id,\n                code: formValue.code,\n                token: formValue.token,\n                pricesIncludeTax: formValue.pricesIncludeTax,\n                availableLanguageCodes: formValue.availableLanguageCodes,\n                availableCurrencyCodes: formValue.availableCurrencyCodes,\n                defaultCurrencyCode: formValue.defaultCurrencyCode,\n                defaultShippingZoneId: formValue.defaultShippingZoneId,\n                defaultLanguageCode: formValue.defaultLanguageCode,\n                defaultTaxZoneId: formValue.defaultTaxZoneId,\n                customFields: formValue.customFields,\n                sellerId: formValue.sellerId,\n            };\n            return this.dataService.settings.updateChannel(input);\n        }))\n            .subscribe(({ updateChannel }) => {\n            switch (updateChannel.__typename) {\n                case 'Channel':\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Channel',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    break;\n                case 'LanguageNotAvailableError':\n                    this.notificationService.error(updateChannel.message);\n            }\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            code: entity.code,\n            token: entity.token || this.generateToken(),\n            pricesIncludeTax: entity.pricesIncludeTax,\n            availableLanguageCodes: entity.availableLanguageCodes,\n            availableCurrencyCodes: entity.availableCurrencyCodes,\n            defaultCurrencyCode: entity.defaultCurrencyCode,\n            defaultShippingZoneId: entity.defaultShippingZone?.id ?? '',\n            defaultLanguageCode: entity.defaultLanguageCode,\n            defaultTaxZoneId: entity.defaultTaxZone?.id ?? '',\n            sellerId: entity.seller?.id ?? '',\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\n            const codeControl = this.detailForm.get('code');\n            if (codeControl) {\n                codeControl.disable();\n            }\n        }\n    }\n    generateToken() {\n        return Array.from(crypto.getRandomValues(new Uint8Array(10)))\n            .map(b => b.toString(16).padStart(2, '0'))\n            .join('');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ChannelDetailComponent, deps: [{ token: i1.ServerConfigService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ChannelDetailComponent, selector: \"vdr-channel-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultCurrency\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertLightweight\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.CurrencyCodeSelectorComponent, selector: \"vdr-currency-code-selector\" }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.UpperCasePipe, name: \"uppercase\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleLanguageNamePipe, name: \"localeLanguageName\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ChannelDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-channel-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultCurrency\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.ServerConfigService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteChannelsBulkAction = createBulkDeleteAction({\n    location: 'channel-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.SuperAdmin) || userPermissions.includes(Permission.DeleteChannel),\n    getItemName: item => item.code,\n    bulkDelete: (dataService, ids) => {\n        return dataService.settings.deleteChannels(ids).pipe(mergeMap(({ deleteChannels }) => dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\n            me,\n            deleteChannels,\n        })))), mergeMap(({ me, deleteChannels }) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        dataService.client.updateUserChannels(me.channels).pipe(map(() => deleteChannels))));\n    },\n});\n\nconst GET_CHANNEL_LIST = gql `\r\n    query GetChannelList($options: ChannelListOptions) {\r\n        channels(options: $options) {\r\n            items {\r\n                ...Channel\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\nclass ChannelListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('Channel');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'token',\n            type: { kind: 'text' },\n            label: marker('settings.channel-token'),\n            filterField: 'token',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'token' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetChannelListDocument,\n            getItems: data => data.channels,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    isDefaultChannel(channelCode) {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ChannelListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ChannelListComponent, selector: \"vdr-channel-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"channel-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ChannelListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-channel-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"channel-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"channel-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_COUNTRY_DETAIL = gql `\r\n    query GetCountryDetail($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\nclass CountryDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Region');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            enabled: [true],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = createUpdatedTranslatable({\n            translatable: {\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                code: '',\n                name: '',\n                enabled: false,\n                translations: [],\n            },\n            updatedFields: formValue,\n            languageCode: this.languageCode,\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                name: formValue.name ?? '',\n                languageCode: this.languageCode,\n            },\n        });\n        this.dataService.settings.createCountry(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Country',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Country',\n            });\n        });\n    }\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([country, languageCode]) => {\n            const formValue = this.detailForm.value;\n            const input = createUpdatedTranslatable({\n                translatable: country,\n                updatedFields: formValue,\n                customFieldConfig: this.customFields,\n                languageCode,\n                defaultTranslation: {\n                    name: formValue.name ?? '',\n                    languageCode,\n                },\n            });\n            return this.dataService.settings.updateCountry(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Country',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Country',\n            });\n        });\n    }\n    setFormValues(country, languageCode) {\n        const currentTranslation = findTranslation(country, languageCode);\n        this.detailForm.patchValue({\n            code: country.code,\n            name: currentTranslation ? currentTranslation.name : '',\n            enabled: country.enabled,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), country, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CountryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CountryDetailComponent, selector: \"vdr-country-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CountryDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-country-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteCountriesBulkAction = createBulkDeleteAction({\n    location: 'country-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteCountry),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteCountries(ids).pipe(map(res => res.deleteCountries)),\n});\n\nconst GET_COUNTRY_LIST = gql `\r\n    query GetCountryList($options: CountryListOptions) {\r\n        countries(options: $options) {\r\n            items {\r\n                ...CountryListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment CountryListItem on Country {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        type\r\n        enabled\r\n    }\r\n`;\nclass CountryListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('Region');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('name', 'ASC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetCountryListDocument,\n            getItems: data => data.countries,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CountryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: CountryListComponent, selector: \"vdr-country-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"country-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: CountryListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-country-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"country-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"country-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_GLOBAL_SETTINGS_DETAIL = gql `\r\n    query GetGlobalSettingsDetail {\r\n        globalSettings {\r\n            ...GlobalSettingsDetail\r\n        }\r\n    }\r\n    fragment GlobalSettingsDetail on GlobalSettings {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n    }\r\n`;\nclass GlobalSettingsComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('GlobalSettings');\n        this.detailForm = this.formBuilder.group({\n            availableLanguages: [[]],\n            trackInventory: false,\n            outOfStockThreshold: [0, Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.languageCodes = Object.values(LanguageCode);\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\n                const languagesSelect = this.detailForm.get('availableLanguages');\n                if (languagesSelect) {\n                    languagesSelect.disable();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        this.dataService.settings\n            .updateGlobalSettings(this.detailForm.value)\n            .pipe(tap(({ updateGlobalSettings }) => {\n            switch (updateGlobalSettings.__typename) {\n                case 'GlobalSettings':\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Settings',\n                    });\n                    break;\n                case 'ChannelDefaultLanguageError':\n                    this.notificationService.error(updateGlobalSettings.message);\n            }\n        }), switchMap$1(() => this.serverConfigService.refreshGlobalSettings()), withLatestFrom(this.dataService.client.uiState().single$))\n            .subscribe(([{ globalSettings }, { uiState }]) => {\n            const availableLangs = globalSettings.availableLanguages;\n            if (availableLangs.length && !availableLangs.includes(uiState.contentLanguage)) {\n                this.dataService.client.setContentLanguage(availableLangs[0]).subscribe();\n            }\n        });\n    }\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            availableLanguages: entity.availableLanguages,\n            trackInventory: entity.trackInventory,\n            outOfStockThreshold: entity.outOfStockThreshold,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: GlobalSettingsComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: GlobalSettingsComponent, selector: \"vdr-global-settings\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-setting-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"global-setting-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: GlobalSettingsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-global-settings', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-setting-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"global-setting-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst GET_PAYMENT_METHOD_DETAIL = gql `\r\n    query GetPaymentMethodDetail($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\nclass PaymentMethodDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            enabled: [true, Validators.required],\n            checker: {},\n            handler: {},\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.checkers = [];\n        this.handlers = [];\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.settings.getPaymentMethodOperations().single$.subscribe(data => {\n            this.checkers = data.paymentMethodEligibilityCheckers;\n            this.handlers = data.paymentMethodHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(c => c.code === this.entity?.handler?.code);\n        });\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get('code');\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    selectChecker(checker) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n    selectHandler(handler) {\n        this.selectedHandlerDefinition = handler;\n        this.selectedHandler = configurableDefinitionToInstance(handler);\n        const formControl = this.detailForm.get('handler');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedHandler);\n        }\n        this.detailForm.markAsDirty();\n    }\n    removeChecker() {\n        this.selectedChecker = null;\n        this.detailForm.markAsDirty();\n    }\n    removeHandler() {\n        this.selectedHandler = null;\n        this.detailForm.markAsDirty();\n    }\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        const input = this.getUpdatedPaymentMethod({\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            name: '',\n            code: '',\n            description: '',\n            enabled: true,\n            checker: undefined,\n            handler: undefined,\n            translations: [],\n        }, this.detailForm, this.languageCode, selectedHandler, selectedChecker);\n        this.dataService.settings.createPaymentMethod(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'PaymentMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'PaymentMethod',\n            });\n        });\n    }\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedHandler = this.selectedHandler;\n        if (!selectedHandler) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1), mergeMap(([paymentMethod, languageCode]) => {\n            const input = this.getUpdatedPaymentMethod(paymentMethod, this.detailForm, languageCode, selectedHandler, selectedChecker);\n            return this.dataService.settings.updatePaymentMethod(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'PaymentMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'PaymentMethod',\n            });\n        });\n    }\n    /**\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\n     * can then be persisted to the API.\n     */\n    getUpdatedPaymentMethod(paymentMethod, formGroup, languageCode, selectedHandler, selectedChecker) {\n        const input = createUpdatedTranslatable({\n            translatable: paymentMethod,\n            updatedFields: formGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: paymentMethod.name || '',\n                description: paymentMethod.description || '',\n            },\n        });\n        return {\n            ...input,\n            checker: selectedChecker\n                ? toConfigurableOperationInput(selectedChecker, formGroup.value.checker)\n                : null,\n            handler: toConfigurableOperationInput(selectedHandler, formGroup.value.handler),\n        };\n    }\n    setFormValues(paymentMethod, languageCode) {\n        const currentTranslation = findTranslation(paymentMethod, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name,\n            code: paymentMethod.code,\n            description: currentTranslation?.description,\n            enabled: paymentMethod.enabled,\n            checker: paymentMethod.checker || {},\n            handler: paymentMethod.handler || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = paymentMethod.checker && {\n                code: paymentMethod.checker.code,\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedHandler) {\n            this.selectedHandler = paymentMethod.handler && {\n                code: paymentMethod.handler.code,\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), paymentMethod, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PaymentMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: PaymentMethodDetailComponent, selector: \"vdr-payment-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PaymentMethodDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deletePaymentMethodsBulkAction = createBulkDeleteAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    shouldRetryItem: (response, item) => !!response.message,\n    bulkDelete: (dataService, ids, retrying) => dataService.settings.deletePaymentMethods(ids, retrying).pipe(map(res => res.deletePaymentMethods)),\n});\nconst ASSIGN_PAYMENT_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignPaymentMethodsToChannel($input: AssignPaymentMethodsToChannelInput!) {\r\n        assignPaymentMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_PAYMENT_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemovePaymentMethodsFromChannel($input: RemovePaymentMethodsFromChannelInput!) {\r\n        removePaymentMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst assignPaymentMethodsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdatePaymentMethod) ||\n        userPermissions.includes(Permission.UpdateSettings),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, paymentMethodIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignPaymentMethodsToChannelDocument, {\n        input: {\n            channelId,\n            paymentMethodIds,\n        },\n    })\n        .pipe(map(res => res.assignPaymentMethodsToChannel))),\n});\nconst removePaymentMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'payment-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, paymentMethodIds, channelId) => dataService\n        .mutate(RemovePaymentMethodsFromChannelDocument, {\n        input: {\n            channelId,\n            paymentMethodIds,\n        },\n    })\n        .pipe(map(res => res.removePaymentMethodsFromChannel)),\n});\n\nconst GET_PAYMENT_METHOD_LIST = gql `\r\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\r\n        paymentMethods(options: $options) {\r\n            items {\r\n                ...PaymentMethodListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment PaymentMethodListItem on PaymentMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n        code\r\n        enabled\r\n    }\r\n`;\nclass PaymentMethodListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: marker('common.description'),\n            filterField: 'description',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'id' })\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetPaymentMethodListDocument,\n            getItems: data => data.paymentMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PaymentMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: PaymentMethodListComponent, selector: \"vdr-payment-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"payment-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.id' | translate\\\"\\r\\n        id=\\\"id\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('id')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: PaymentMethodListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-payment-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"payment-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"payment-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.id' | translate\\\"\\r\\n        id=\\\"id\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('id')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.name' | translate\\\"\\r\\n        id=\\\"name\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('name')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_PROFILE_DETAIL = gql `\r\n    query GetProfileDetail {\r\n        activeAdministrator {\r\n            ...ProfileDetail\r\n        }\r\n    }\r\n    fragment ProfileDetail on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            lastLogin\r\n            verified\r\n        }\r\n    }\r\n`;\nclass ProfileComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Administrator');\n        this.detailForm = this.formBuilder.group({\n            emailAddress: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            password: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const administrator = {\n                emailAddress: formValue.emailAddress,\n                firstName: formValue.firstName,\n                lastName: formValue.lastName,\n                password: formValue.password,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.administrator.updateActiveAdministrator(administrator);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Administrator',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Administrator',\n            });\n        });\n    }\n    setFormValues(administrator, languageCode) {\n        this.detailForm.patchValue({\n            emailAddress: administrator.emailAddress,\n            firstName: administrator.firstName,\n            lastName: administrator.lastName,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), administrator);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProfileComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ProfileComponent, selector: \"vdr-profile\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProfileComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-profile', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst GET_ROLE_DETAIL = gql `\r\n    query GetRoleDetail($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\nclass RoleDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            description: ['', Validators.required],\n            channelIds: [[]],\n            permissions: [[]],\n        });\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(nameValue) {\n        const codeControl = this.detailForm.get(['code']);\n        if (codeControl && codeControl.pristine) {\n            codeControl.setValue(normalizeString(nameValue, '-'));\n        }\n    }\n    setPermission(change) {\n        const permissionsControl = this.detailForm.get('permissions');\n        if (permissionsControl) {\n            const currentPermissions = permissionsControl.value;\n            const newValue = (change.value === true\n                ? unique([...currentPermissions, change.permission])\n                : currentPermissions.filter(p => p !== change.permission));\n            permissionsControl.setValue(newValue);\n            permissionsControl.markAsDirty();\n        }\n    }\n    create() {\n        const { code, description, permissions, channelIds } = this.detailForm.value;\n        if (!code || !description) {\n            return;\n        }\n        const role = {\n            code,\n            description,\n            permissions: permissions ?? [],\n            channelIds,\n        };\n        this.dataService.administrator.createRole(role).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Role' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Role',\n            });\n        });\n    }\n    save() {\n        this.entity$\n            .pipe(take(1), mergeMap(({ id }) => {\n            const formValue = this.detailForm.value;\n            const role = { id, ...formValue };\n            return this.dataService.administrator.updateRole(role);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Role' });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Role',\n            });\n        });\n    }\n    setFormValues(role, languageCode) {\n        this.detailForm.patchValue({\n            description: role.description,\n            code: role.code,\n            channelIds: role.channels.map(c => c.id),\n            permissions: role.permissions,\n        });\n        // This was required to get the channel selector component to\n        // correctly display its contents. A while spent debugging the root\n        // cause did not yield a solution, therefore this next line.\n        this.changeDetector.detectChanges();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: RoleDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: RoleDetailComponent, selector: \"vdr-role-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: RoleDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-role-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteRolesBulkAction = createBulkDeleteAction({\n    location: 'role-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\n    getItemName: item => item.description,\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteRoles(ids).pipe(map(res => res.deleteRoles)),\n});\n\nconst GET_ROLE_LIST = gql `\r\n    query GetRoleList($options: RoleListOptions) {\r\n        roles(options: $options) {\r\n            items {\r\n                ...Role\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\nclass RoleListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.initialLimit = 3;\n        this.displayLimit = {};\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetRoleListDocument,\n            getItems: data => data.roles,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    toggleDisplayLimit(role) {\n        if (this.displayLimit[role.id] === role.permissions.length) {\n            this.displayLimit[role.id] = this.initialLimit;\n        }\n        else {\n            this.displayLimit[role.id] = role.permissions.length;\n        }\n    }\n    isDefaultRole(role) {\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: RoleListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: RoleListComponent, selector: \"vdr-role-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"role-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: RoleListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-role-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"role-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"role-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_SELLER_DETAIL = gql `\r\n    query GetSellerDetail($id: ID!) {\r\n        seller(id: $id) {\r\n            ...SellerDetail\r\n        }\r\n    }\r\n    fragment SellerDetail on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass SellerDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Seller');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateSeller, Permission.CreateSeller];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        if (!formValue.name) {\n            return;\n        }\n        const input = {\n            name: formValue.name,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createSeller(input).subscribe(data => {\n            switch (data.createSeller.__typename) {\n                case 'Seller':\n                    this.notificationService.success(marker('common.notify-create-success'), {\n                        entity: 'Seller',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createSeller.id], { relativeTo: this.route });\n                    break;\n            }\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(seller => {\n            const input = {\n                id: seller.id,\n                name: formValue.name,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateSeller(input);\n        }))\n            .subscribe(({ updateSeller }) => {\n            switch (updateSeller.__typename) {\n                case 'Seller':\n                    this.notificationService.success(marker('common.notify-update-success'), {\n                        entity: 'Seller',\n                    });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    break;\n                // case 'LanguageNotAvailableError':\n                //     this.notificationService.error(updateSeller.message);\n            }\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SellerDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: SellerDetailComponent, selector: \"vdr-seller-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SellerDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-seller-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteSellersBulkAction = createBulkDeleteAction({\n    location: 'seller-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSeller),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteSellers(ids).pipe(map(res => res.deleteSellers)),\n});\n\nconst GET_SELLER_LIST = gql `\r\n    query GetSellerList($options: SellerListOptions) {\r\n        sellers(options: $options) {\r\n            items {\r\n                ...SellerListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment SellerListItem on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass SellerListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('Seller');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetSellerListDocument,\n            getItems: data => data.sellers,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SellerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: SellerListComponent, selector: \"vdr-seller-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"seller-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SellerListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-seller-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\" />\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"seller-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"seller-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nclass ShippingEligibilityTestResultComponent {\n    constructor() {\n        this.okToRun = false;\n        this.testDataUpdated = false;\n        this.runTest = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingEligibilityTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingEligibilityTestResultComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-eligibility-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"] }]\n        }], propDecorators: { testResult: [{\n                type: Input\n            }], okToRun: [{\n                type: Input\n            }], testDataUpdated: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], runTest: [{\n                type: Output\n            }] } });\n\nclass TestOrderBuilderComponent {\n    get subTotal() {\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\n    }\n    constructor(dataService, localStorageService) {\n        this.dataService = dataService;\n        this.localStorageService = localStorageService;\n        this.orderLinesChange = new EventEmitter();\n        this.lines = [];\n    }\n    ngOnInit() {\n        this.lines = this.loadFromLocalStorage();\n        if (this.lines) {\n            this.orderLinesChange.emit(this.lines);\n        }\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\n            this.currencyCode = result.activeChannel.defaultCurrencyCode;\n        });\n    }\n    selectResult(result) {\n        if (result) {\n            this.addToLines(result);\n        }\n    }\n    addToLines(result) {\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\n            this.lines.push({\n                id: result.productVariantId,\n                name: result.productVariantName,\n                preview: result.productAsset?.preview ?? '',\n                quantity: 1,\n                sku: result.sku,\n                unitPriceWithTax: (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\n            });\n            this.persistToLocalStorage();\n            this.orderLinesChange.emit(this.lines);\n        }\n    }\n    updateQuantity() {\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n    removeLine(line) {\n        this.lines = this.lines.filter(l => l.id !== line.id);\n        this.persistToLocalStorage();\n        this.orderLinesChange.emit(this.lines);\n    }\n    persistToLocalStorage() {\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\n    }\n    loadFromLocalStorage() {\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestOrderBuilderComponent, deps: [{ token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: { orderLinesChange: \"orderLinesChange\" }, ngImport: i0, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2$1.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.ProductVariantSelectorComponent, selector: \"vdr-product-variant-selector\", outputs: [\"productSelected\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestOrderBuilderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-order-builder', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.LocalStorageService }], propDecorators: { orderLinesChange: [{\n                type: Output\n            }] } });\n\nclass TestAddressFormComponent {\n    constructor(formBuilder, dataService, localStorageService) {\n        this.formBuilder = formBuilder;\n        this.dataService = dataService;\n        this.localStorageService = localStorageService;\n        this.addressChange = new EventEmitter();\n    }\n    ngOnInit() {\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items);\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\n        const initialValue = storedValue\n            ? storedValue\n            : {\n                city: '',\n                countryCode: '',\n                postalCode: '',\n                province: '',\n            };\n        this.addressChange.emit(initialValue);\n        this.form = this.formBuilder.group(initialValue);\n        this.subscription = this.form.valueChanges.subscribe(value => {\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\n            this.addressChange.emit(value);\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestAddressFormComponent, deps: [{ token: i2$1.UntypedFormBuilder }, { token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: { addressChange: \"addressChange\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestAddressFormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-address-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"] }]\n        }], ctorParameters: () => [{ type: i2$1.UntypedFormBuilder }, { type: i1.DataService }, { type: i1.LocalStorageService }], propDecorators: { addressChange: [{\n                type: Output\n            }] } });\n\nclass ShippingMethodTestResultComponent {\n    constructor() {\n        this.okToRun = false;\n        this.testDataUpdated = false;\n        this.runTest = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodTestResultComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"] }]\n        }], propDecorators: { testResult: [{\n                type: Input\n            }], okToRun: [{\n                type: Input\n            }], testDataUpdated: [{\n                type: Input\n            }], currencyCode: [{\n                type: Input\n            }], runTest: [{\n                type: Output\n            }] } });\n\nconst GET_SHIPPING_METHOD_DETAIL = gql `\r\n    query GetShippingMethodDetail($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\nclass ShippingMethodDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\n        this.detailForm = this.formBuilder.group({\n            code: ['', Validators.required],\n            name: ['', Validators.required],\n            description: '',\n            fulfillmentHandler: ['', Validators.required],\n            checker: {},\n            calculator: {},\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.checkers = [];\n        this.calculators = [];\n        this.fulfillmentHandlers = [];\n        this.testDataUpdated = false;\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\n        this.fetchTestResult$ = new Subject();\n    }\n    ngOnInit() {\n        this.init();\n        this.dataService.shippingMethod.getShippingMethodOperations().single$.subscribe(data => {\n            this.checkers = data.shippingEligibilityCheckers;\n            this.calculators = data.shippingCalculators;\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\n            this.changeDetector.markForCheck();\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(c => c.code === this.entity?.calculator?.code);\n        });\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\n            const { checker, calculator } = this.detailForm.value;\n            if (!this.selectedChecker || !this.selectedCalculator || !checker || !calculator) {\n                return of(undefined);\n            }\n            const input = {\n                shippingAddress: { ...address, streetLine1: 'test' },\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n                checker: toConfigurableOperationInput(this.selectedChecker, checker),\n                calculator: toConfigurableOperationInput(this.selectedCalculator, calculator),\n            };\n            return this.dataService.shippingMethod\n                .testShippingMethod(input)\n                .mapSingle(result => result.testShippingMethod);\n        }));\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\n        merge(this.detailForm.get(['checker']).valueChanges, this.detailForm.get(['calculator']).valueChanges)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => (this.testDataUpdated = true));\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    updateCode(currentCode, nameValue) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n    selectChecker(checker) {\n        this.selectedCheckerDefinition = checker;\n        this.selectedChecker = configurableDefinitionToInstance(checker);\n        const formControl = this.detailForm.get('checker');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedChecker);\n        }\n        this.detailForm.markAsDirty();\n    }\n    selectCalculator(calculator) {\n        this.selectedCalculatorDefinition = calculator;\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\n        const formControl = this.detailForm.get('calculator');\n        if (formControl) {\n            formControl.clearValidators();\n            formControl.updateValueAndValidity({ onlySelf: true });\n            formControl.patchValue(this.selectedCalculator);\n        }\n        this.detailForm.markAsDirty();\n    }\n    create() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        const { checker, calculator } = this.detailForm.value;\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            ...this.getUpdatedShippingMethod({\n                createdAt: '',\n                updatedAt: '',\n                id: '',\n                code: '',\n                name: '',\n                description: '',\n                fulfillmentHandlerCode: '',\n                checker: undefined,\n                calculator: undefined,\n                translations: [],\n            }, this.detailForm, this.languageCode),\n            checker: toConfigurableOperationInput(selectedChecker, checker),\n            calculator: toConfigurableOperationInput(selectedCalculator, calculator),\n        };\n        this.dataService.shippingMethod.createShippingMethod(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'ShippingMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'ShippingMethod',\n            });\n        });\n    }\n    save() {\n        const selectedChecker = this.selectedChecker;\n        const selectedCalculator = this.selectedCalculator;\n        const { checker, calculator } = this.detailForm.value;\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\n            return;\n        }\n        combineLatest([this.entity$, this.languageCode$])\n            .pipe(take(1), mergeMap(([shippingMethod, languageCode]) => {\n            const formValue = this.detailForm.value;\n            const input = {\n                ...this.getUpdatedShippingMethod(shippingMethod, this.detailForm, languageCode),\n                checker: toConfigurableOperationInput(selectedChecker, checker),\n                calculator: toConfigurableOperationInput(selectedCalculator, calculator),\n            };\n            return this.dataService.shippingMethod.updateShippingMethod(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'ShippingMethod',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'ShippingMethod',\n            });\n        });\n    }\n    setTestOrderLines(event) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n    setTestAddress(event) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n    allTestDataPresent() {\n        return !!(this.testAddress &&\n            this.testOrderLines &&\n            this.testOrderLines.length &&\n            this.selectedChecker &&\n            this.selectedCalculator);\n    }\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n    /**\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\n     * can then be persisted to the API.\n     */\n    getUpdatedShippingMethod(shippingMethod, formGroup, languageCode) {\n        const formValue = formGroup.value;\n        const input = createUpdatedTranslatable({\n            translatable: shippingMethod,\n            updatedFields: formValue,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: shippingMethod.name || '',\n                description: shippingMethod.description || '',\n            },\n        });\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\n    }\n    setFormValues(shippingMethod, languageCode) {\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\n        this.detailForm.patchValue({\n            name: currentTranslation?.name ?? '',\n            description: currentTranslation?.description ?? '',\n            code: shippingMethod.code,\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\n            checker: shippingMethod.checker || {},\n            calculator: shippingMethod.calculator || {},\n        });\n        if (!this.selectedChecker) {\n            this.selectedChecker = shippingMethod.checker && {\n                code: shippingMethod.checker.code,\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (!this.selectedCalculator) {\n            this.selectedCalculator = shippingMethod.calculator && {\n                code: shippingMethod.calculator?.code,\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\n            };\n        }\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), shippingMethod, currentTranslation);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ShippingMethodDetailComponent, selector: \"vdr-shipping-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\", \"hideDescription\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteShippingMethodsBulkAction = createBulkDeleteAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.shippingMethod.deleteShippingMethods(ids).pipe(map(res => res.deleteShippingMethods)),\n});\nconst ASSIGN_SHIPPING_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignShippingMethodsToChannel($input: AssignShippingMethodsToChannelInput!) {\r\n        assignShippingMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_SHIPPING_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemoveShippingMethodsFromChannel($input: RemoveShippingMethodsFromChannelInput!) {\r\n        removeShippingMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst assignShippingMethodsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateShippingMethod) ||\n        userPermissions.includes(Permission.UpdateSettings),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, shippingMethodIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignShippingMethodsToChannelDocument, {\n        input: {\n            channelId,\n            shippingMethodIds,\n        },\n    })\n        .pipe(map(res => res.assignShippingMethodsToChannel))),\n});\nconst removeShippingMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'shipping-method-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod) ||\n        userPermissions.includes(Permission.DeleteSettings),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, shippingMethodIds, channelId) => dataService\n        .mutate(RemoveShippingMethodsFromChannelDocument, {\n        input: {\n            channelId,\n            shippingMethodIds,\n        },\n    })\n        .pipe(map(res => res.removeShippingMethodsFromChannel)),\n});\n\nconst GET_SHIPPING_METHOD_LIST = gql `\r\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\r\n        shippingMethods(options: $options) {\r\n            items {\r\n                ...ShippingMethodListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment ShippingMethodListItem on ShippingMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        description\r\n        fulfillmentHandlerCode\r\n    }\r\n`;\nclass ShippingMethodListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: marker('common.code'),\n            filterField: 'code',\n        })\n            .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: marker('common.description'),\n            filterField: 'description',\n        })\n            .addFilter({\n            name: 'fulfillmentHandler',\n            type: { kind: 'text' },\n            label: marker('settings.fulfillment-handler'),\n            filterField: 'fulfillmentHandlerCode',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'code' })\n            .addSort({ name: 'description' })\n            .addSort({ name: 'fulfillmentHandlerCode' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetShippingMethodListDocument,\n            getItems: data => data.shippingMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ShippingMethodListComponent, selector: \"vdr-shipping-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"shipping-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ShippingMethodListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-shipping-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"shipping-method-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"shipping-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql `\r\n    fragment StockLocationDetail on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\nconst GET_STOCK_LOCATION_DETAIL = gql `\r\n    query GetStockLocationDetail($id: ID!) {\r\n        stockLocation(id: $id) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nconst CREATE_STOCK_LOCATION = gql `\r\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\r\n        createStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nconst UPDATE_STOCK_LOCATION = gql `\r\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\r\n        updateStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\nclass StockLocationDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('StockLocation');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            description: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, description, customFields } = this.detailForm.value;\n        if (!name) {\n            return;\n        }\n        const input = {\n            name,\n            description,\n            customFields,\n        };\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'StockLocation',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'StockLocation',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxRate => {\n            const input = {\n                id: taxRate.id,\n                name: formValue.name,\n                description: formValue.description,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.mutate(UpdateStockLocationDocument, { input });\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'StockLocation',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'StockLocation',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            description: entity.description,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: StockLocationDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: StockLocationDetailComponent, selector: \"vdr-stock-location-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: StockLocationDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-stock-location-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst DELETE_STOCK_LOCATIONS = gql `\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql `\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql `\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\nconst deleteStockLocationsBulkAction = createBulkDeleteAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteStockLocation) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService\n        .mutate(DeleteStockLocationsDocument, {\n        input: ids.map(id => ({ id })),\n    })\n        .pipe(map(res => res.deleteStockLocations)),\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\n});\nconst assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateStockLocation),\n    getItemName: item => item.name,\n    bulkAssignToChannel: (dataService, stockLocationIds, channelIds) => channelIds.map(channelId => dataService\n        .mutate(AssignStockLocationsToChannelDocument, {\n        input: {\n            channelId,\n            stockLocationIds,\n        },\n    })\n        .pipe(map(res => res.assignStockLocationsToChannel))),\n});\nconst removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction({\n    location: 'stock-location-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\n        userPermissions.includes(Permission.DeleteStockLocation),\n    getItemName: item => item.name,\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) => dataService\n        .mutate(RemoveStockLocationsFromChannelDocument, {\n        input: {\n            channelId,\n            stockLocationIds,\n        },\n    })\n        .pipe(map(res => res.removeStockLocationsFromChannel)),\n});\n\nconst GET_STOCK_LOCATION_LIST = gql `\r\n    query GetStockLocationList($options: StockLocationListOptions) {\r\n        stockLocations(options: $options) {\r\n            items {\r\n                ...StockLocationListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment StockLocationListItem on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\nclass StockLocationListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('StockLocation');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilters([\n            {\n                name: 'enabled',\n                type: { kind: 'text' },\n                label: marker('common.enabled'),\n                filterField: 'name',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: marker('catalog.sku'),\n                filterField: 'description',\n            },\n        ])\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'description' },\n        ])\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        this.configure({\n            document: GetStockLocationListDocument,\n            getItems: data => data.stockLocations,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: StockLocationListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: StockLocationListComponent, selector: \"vdr-stock-location-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\" />\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: StockLocationListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-stock-location-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\" />\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"stock-location-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"] }]\n        }], ctorParameters: () => [] });\n\nconst GET_TAX_CATEGORY_DETAIL = gql `\r\n    query GetTaxCategoryDetail($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\nclass TaxCategoryDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('TaxCategory');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            isDefault: false,\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            name: formValue.name,\n            isDefault: formValue.isDefault,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createTaxCategory(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'TaxCategory',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'TaxCategory',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxCategory => {\n            const input = {\n                id: taxCategory.id,\n                name: formValue.name,\n                isDefault: formValue.isDefault,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateTaxCategory(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'TaxCategory',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'TaxCategory',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            isDefault: entity.isDefault,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxCategoryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TaxCategoryDetailComponent, selector: \"vdr-tax-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxCategoryDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteTaxCategoriesBulkAction = createBulkDeleteAction({\n    location: 'tax-category-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteTaxCategory),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxCategories(ids).pipe(map(res => res.deleteTaxCategories)),\n});\n\nconst GET_TAX_CATEGORY_LIST = gql `\r\n    query GetTaxCategoryList($options: TaxCategoryListOptions) {\r\n        taxCategories(options: $options) {\r\n            items {\r\n                ...TaxCategory\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\nclass TaxCategoryListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.serverConfigService.getCustomFieldsFor('TaxCategory');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetTaxCategoryListDocument,\n            getItems: data => data.taxCategories,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxCategoryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TaxCategoryListComponent, selector: \"vdr-tax-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-category-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxCategoryListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-category-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-category-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nconst GET_TAX_RATE_DETAIL = gql `\r\n    query GetTaxRateDetail($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\nclass TaxRateDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('TaxRate');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            enabled: [true],\n            value: [0, Validators.required],\n            taxCategoryId: ['', Validators.required],\n            zoneId: ['', Validators.required],\n            customerGroupId: [''],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\n    }\n    ngOnInit() {\n        this.init();\n        this.taxCategories$ = this.dataService.settings\n            .getTaxCategories({ take: 100 })\n            .mapSingle(data => data.taxCategories.items);\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, enabled, value, taxCategoryId, zoneId, customerGroupId, customFields } = this.detailForm.value;\n        if (!name || enabled == null || value == null || !taxCategoryId || !zoneId) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        const input = {\n            name,\n            enabled,\n            value,\n            categoryId: taxCategoryId,\n            zoneId,\n            customerGroupId: formValue.customerGroupId,\n            customFields: formValue.customFields,\n        };\n        this.dataService.settings.createTaxRate(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'TaxRate',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'TaxRate',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(taxRate => {\n            const input = {\n                id: taxRate.id,\n                name: formValue.name,\n                enabled: formValue.enabled,\n                value: formValue.value,\n                categoryId: formValue.taxCategoryId,\n                zoneId: formValue.zoneId,\n                customerGroupId: formValue.customerGroupId,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateTaxRate(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'TaxRate',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'TaxRate',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n            enabled: entity.enabled,\n            value: entity.value,\n            taxCategoryId: entity.category ? entity.category.id : '',\n            zoneId: entity.zone ? entity.zone.id : '',\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxRateDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TaxRateDetailComponent, selector: \"vdr-tax-rate-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.AffixedInputComponent, selector: \"vdr-affixed-input\", inputs: [\"prefix\", \"suffix\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxRateDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-rate-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteTaxRatesBulkAction = createBulkDeleteAction({\n    location: 'tax-rate-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteTaxRate),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxRates(ids).pipe(map(res => res.deleteTaxRates)),\n});\n\nconst GET_TAX_RATE_LIST = gql `\r\n    query GetTaxRateList($options: TaxRateListOptions) {\r\n        taxRates(options: $options) {\r\n            items {\r\n                ...TaxRate\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\nclass TaxRateListComponent extends TypedBaseListComponent {\n    constructor() {\n        super();\n        this.customFields = this.getCustomFieldConfig('TaxRate');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: marker('common.enabled'),\n            filterField: 'enabled',\n        })\n            .addFilter({\n            name: 'value',\n            type: { kind: 'number' },\n            label: marker('common.value'),\n            filterField: 'value',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addSort({ name: 'value' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetTaxRateListDocument,\n            getItems: data => data.taxRates,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxRateListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TaxRateListComponent, selector: \"vdr-tax-rate-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-rate-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TaxRateListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-tax-rate-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"tax-rate-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-rate-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\n        }], ctorParameters: () => [] });\n\nclass TestShippingMethodsComponent {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.testDataUpdated = false;\n        this.fetchTestResult$ = new Subject();\n    }\n    ngOnInit() {\n        this.activeChannel$ = this.dataService.settings\n            .getActiveChannel()\n            .mapStream(data => data.activeChannel);\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\n            const input = {\n                shippingAddress: { ...address, streetLine1: 'test' },\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\n            };\n            return this.dataService.shippingMethod\n                .testEligibleShippingMethods(input)\n                .mapSingle(result => result.testEligibleShippingMethods);\n        }));\n    }\n    setTestOrderLines(event) {\n        this.testOrderLines = event;\n        this.testDataUpdated = true;\n    }\n    setTestAddress(event) {\n        this.testAddress = event;\n        this.testDataUpdated = true;\n    }\n    allTestDataPresent() {\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\n    }\n    runTest() {\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\n        this.testDataUpdated = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestShippingMethodsComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: TestShippingMethodsComponent, selector: \"vdr-test-shipping-methods\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"], dependencies: [{ kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: TestShippingMethodsComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-test-shipping-methods', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }] });\n\nconst GET_ZONE_DETAIL = gql `\r\n    query GetZoneDetail($id: ID!) {\r\n        zone(id: $id) {\r\n            ...ZoneDetail\r\n        }\r\n    }\r\n    fragment ZoneDetail on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass ZoneDetailComponent extends TypedBaseDetailComponent {\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\n        super();\n        this.changeDetector = changeDetector;\n        this.dataService = dataService;\n        this.formBuilder = formBuilder;\n        this.notificationService = notificationService;\n        this.customFields = this.getCustomFieldConfig('Zone');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\n        });\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateZone];\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    saveButtonEnabled() {\n        return this.detailForm.dirty && this.detailForm.valid;\n    }\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const { name, customFields } = this.detailForm.value;\n        if (!name) {\n            return;\n        }\n        const input = {\n            name,\n            customFields,\n        };\n        this.dataService.settings.createZone(input).subscribe(data => {\n            this.notificationService.success(marker('common.notify-create-success'), {\n                entity: 'Zone',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n            this.router.navigate(['../', data.createZone.id], { relativeTo: this.route });\n        }, err => {\n            this.notificationService.error(marker('common.notify-create-error'), {\n                entity: 'Zone',\n            });\n        });\n    }\n    save() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        const formValue = this.detailForm.value;\n        this.entity$\n            .pipe(take(1), mergeMap(zone => {\n            const input = {\n                id: zone.id,\n                name: formValue.name,\n                customFields: formValue.customFields,\n            };\n            return this.dataService.settings.updateZone(input);\n        }))\n            .subscribe(data => {\n            this.notificationService.success(marker('common.notify-update-success'), {\n                entity: 'Zone',\n            });\n            this.detailForm.markAsPristine();\n            this.changeDetector.markForCheck();\n        }, err => {\n            this.notificationService.error(marker('common.notify-update-error'), {\n                entity: 'Zone',\n            });\n        });\n    }\n    /**\n     * Update the form values when the entity changes.\n     */\n    setFormValues(entity, languageCode) {\n        this.detailForm.patchValue({\n            name: entity.name,\n        });\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ZoneDetailComponent, selector: \"vdr-zone-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"], outputs: [\"readOnlyToggleChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select, vdr-currency-input\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneDetailComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\" />\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-detail\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }] });\n\nconst deleteZonesBulkAction = createBulkDeleteAction({\n    location: 'zone-list',\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\n        userPermissions.includes(Permission.DeleteZone),\n    getItemName: item => item.name,\n    bulkDelete: (dataService, ids) => dataService.settings.deleteZones(ids).pipe(map(res => res.deleteZones)),\n});\n\nconst GET_ZONE_LIST = gql `\r\n    query GetZoneList($options: ZoneListOptions) {\r\n        zones(options: $options) {\r\n            items {\r\n                ...ZoneListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment ZoneListItem on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\nclass ZoneListComponent extends TypedBaseListComponent {\n    constructor(dataService, notificationService, modalService) {\n        super();\n        this.dataService = dataService;\n        this.notificationService = notificationService;\n        this.modalService = modalService;\n        this.selectedMemberIds = [];\n        this.customFields = this.serverConfigService.getCustomFieldsFor('Zone');\n        this.filters = this.createFilterCollection()\n            .addIdFilter()\n            .addDateFilters()\n            .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: marker('common.name'),\n            filterField: 'name',\n        })\n            .addCustomFieldFilters(this.customFields)\n            .connectToRoute(this.route);\n        this.sorts = this.createSortCollection()\n            .defaultSort('createdAt', 'DESC')\n            .addSort({ name: 'createdAt' })\n            .addSort({ name: 'updatedAt' })\n            .addSort({ name: 'name' })\n            .addCustomFieldSorts(this.customFields)\n            .connectToRoute(this.route);\n        super.configure({\n            document: GetZoneListDocument,\n            getItems: data => data.zones,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        const activeZoneId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged(), tap(() => (this.selectedMemberIds = [])));\n        this.activeZone$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\n            if (activeZoneId) {\n                return zones.find(z => z.id === activeZoneId);\n            }\n        }));\n        this.activeIndex$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\n            if (activeZoneId) {\n                return zones.findIndex(g => g.id === activeZoneId);\n            }\n            else {\n                return -1;\n            }\n        }));\n    }\n    setLanguage(code) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n    addToZone(zone) {\n        this.modalService\n            .fromComponent(AddCountryToZoneDialogComponent, {\n            locals: {\n                zoneName: zone.name,\n                zoneId: zone.id,\n            },\n            size: 'md',\n        })\n            .pipe(switchMap$1(memberIds => memberIds\n            ? this.dataService.settings\n                .addMembersToZone(zone.id, memberIds)\n                .pipe(mapTo(memberIds))\n            : EMPTY))\n            .subscribe({\n            next: result => {\n                this.notificationService.success(marker(`settings.add-countries-to-zone-success`), {\n                    countryCount: result.length,\n                    zoneName: zone.name,\n                });\n                this.refreshMemberList();\n            },\n            error: err => {\n                this.notificationService.error(err);\n            },\n        });\n    }\n    refreshMemberList() {\n        this.zoneMemberList?.refresh();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.4\", type: ZoneListComponent, selector: \"vdr-zone-list\", viewQueries: [{ propertyName: \"zoneMemberList\", first: true, predicate: ZoneMemberListComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"zone-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"info\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarDropdownMenuComponent, selector: \"vdr-action-bar-dropdown-menu\", inputs: [\"alwaysShow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\" }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ZoneListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'vdr-zone-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            />\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\" />\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n            <vdr-action-bar-dropdown-menu locationId=\\\"zone-list\\\" />\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"zone-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"] }]\n        }], ctorParameters: () => [{ type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }], propDecorators: { zoneMemberList: [{\n                type: ViewChild,\n                args: [ZoneMemberListComponent]\n            }] } });\n\nconst removeZoneMembersBulkAction = {\n    location: 'zone-members-list',\n    label: marker('settings.remove-from-zone'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: Permission.UpdateCustomerGroup,\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const zone = hostComponent.activeZone;\n        const memberIds = selection.map(s => s.id);\n        dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\n            complete: () => {\n                notificationService.success(marker(`settings.remove-countries-from-zone-success`), {\n                    countryCount: memberIds.length,\n                    zoneName: zone.name,\n                });\n                hostComponent.refresh();\n                clearSelection();\n            },\n        });\n    },\n};\n\nclass ProfileResolver extends BaseEntityResolver {\n    constructor(router, dataService) {\n        super(router, {\n            __typename: 'Administrator',\n            id: '',\n            createdAt: '',\n            updatedAt: '',\n            emailAddress: '',\n            firstName: '',\n            lastName: '',\n            user: { roles: [] },\n        }, id => dataService.administrator\n            .getActiveAdministrator()\n            .mapStream(data => data.activeAdministrator));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProfileResolver, deps: [{ token: i3$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProfileResolver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: ProfileResolver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: () => [{ type: i3$1.Router }, { type: i1.DataService }] });\n\nconst createRoutes = (pageService) => [\n    {\n        path: 'profile',\n        component: PageComponent,\n        data: {\n            breadcrumb: marker('breadcrumb.profile'),\n        },\n        resolve: {\n            detail: () => inject(DataService)\n                .query(GetProfileDetailDocument)\n                .mapSingle(data => ({ entity: of(data.activeAdministrator) })),\n        },\n        children: pageService.getPageTabRoutes('profile'),\n    },\n    {\n        path: 'administrators',\n        component: PageComponent,\n        data: {\n            locationId: 'administrator-list',\n            breadcrumb: marker('breadcrumb.administrators'),\n        },\n        children: pageService.getPageTabRoutes('administrator-list'),\n    },\n    {\n        path: 'administrators/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'administrator-detail',\n            breadcrumb: { label: marker('breadcrumb.administrators'), link: ['../', 'administrators'] },\n        },\n        children: pageService.getPageTabRoutes('administrator-detail'),\n    },\n    {\n        path: 'channels',\n        component: PageComponent,\n        data: {\n            locationId: 'channel-list',\n            breadcrumb: marker('breadcrumb.channels'),\n        },\n        children: pageService.getPageTabRoutes('channel-list'),\n    },\n    {\n        path: 'channels/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'channel-detail',\n            breadcrumb: { label: marker('breadcrumb.channels'), link: ['../', 'channels'] },\n        },\n        children: pageService.getPageTabRoutes('channel-detail'),\n    },\n    {\n        path: 'stock-locations',\n        component: PageComponent,\n        data: {\n            locationId: 'stock-location-list',\n            breadcrumb: marker('breadcrumb.stock-locations'),\n        },\n        children: pageService.getPageTabRoutes('stock-location-list'),\n    },\n    {\n        path: 'stock-locations/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'stock-location-detail',\n            breadcrumb: { label: marker('breadcrumb.stock-locations'), link: ['../', 'stock-locations'] },\n        },\n        children: pageService.getPageTabRoutes('stock-location-detail'),\n    },\n    {\n        path: 'sellers',\n        component: PageComponent,\n        data: {\n            locationId: 'seller-list',\n            breadcrumb: marker('breadcrumb.sellers'),\n        },\n        children: pageService.getPageTabRoutes('seller-list'),\n    },\n    {\n        path: 'sellers/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'seller-detail',\n            breadcrumb: { label: marker('breadcrumb.sellers'), link: ['../', 'sellers'] },\n        },\n        children: pageService.getPageTabRoutes('seller-detail'),\n    },\n    {\n        path: 'roles',\n        component: PageComponent,\n        data: {\n            locationId: 'role-list',\n            breadcrumb: marker('breadcrumb.roles'),\n        },\n        children: pageService.getPageTabRoutes('role-list'),\n    },\n    {\n        path: 'roles/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'role-detail',\n            breadcrumb: { label: marker('breadcrumb.roles'), link: ['../', 'roles'] },\n        },\n        children: pageService.getPageTabRoutes('role-detail'),\n    },\n    {\n        path: 'tax-categories',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-category-list',\n            breadcrumb: marker('breadcrumb.tax-categories'),\n        },\n        children: pageService.getPageTabRoutes('tax-category-list'),\n    },\n    {\n        path: 'tax-categories/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-category-detail',\n            breadcrumb: { label: marker('breadcrumb.tax-categories'), link: ['../', 'tax-categories'] },\n        },\n        children: pageService.getPageTabRoutes('tax-category-detail'),\n    },\n    {\n        path: 'tax-rates',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-rate-list',\n            breadcrumb: marker('breadcrumb.tax-rates'),\n        },\n        children: pageService.getPageTabRoutes('tax-rate-list'),\n    },\n    {\n        path: 'tax-rates/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'tax-rate-detail',\n            breadcrumb: { label: marker('breadcrumb.tax-rates'), link: ['../', 'tax-rates'] },\n        },\n        children: pageService.getPageTabRoutes('tax-rate-detail'),\n    },\n    {\n        path: 'countries',\n        component: PageComponent,\n        data: {\n            locationId: 'country-list',\n            breadcrumb: marker('breadcrumb.countries'),\n        },\n        children: pageService.getPageTabRoutes('country-list'),\n    },\n    {\n        path: 'countries/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'country-detail',\n            breadcrumb: { label: marker('breadcrumb.countries'), link: ['../', 'countries'] },\n        },\n        children: pageService.getPageTabRoutes('country-detail'),\n    },\n    {\n        path: 'zones',\n        component: PageComponent,\n        data: {\n            locationId: 'zone-list',\n            breadcrumb: marker('breadcrumb.zones'),\n        },\n        children: pageService.getPageTabRoutes('zone-list'),\n    },\n    {\n        path: 'zones/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'zone-detail',\n            breadcrumb: { label: marker('breadcrumb.zones'), link: ['../', 'zones'] },\n        },\n        children: pageService.getPageTabRoutes('zone-detail'),\n    },\n    {\n        path: 'shipping-methods',\n        component: PageComponent,\n        data: {\n            locationId: 'shipping-method-list',\n            breadcrumb: marker('breadcrumb.shipping-methods'),\n        },\n        children: pageService.getPageTabRoutes('shipping-method-list'),\n    },\n    {\n        path: 'shipping-methods/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'shipping-method-detail',\n            breadcrumb: { label: marker('breadcrumb.shipping-methods'), link: ['../', 'shipping-methods'] },\n        },\n        children: pageService.getPageTabRoutes('shipping-method-detail'),\n    },\n    {\n        path: 'payment-methods',\n        component: PageComponent,\n        data: {\n            locationId: 'payment-method-list',\n            breadcrumb: marker('breadcrumb.payment-methods'),\n        },\n        children: pageService.getPageTabRoutes('payment-method-list'),\n    },\n    {\n        path: 'payment-methods/:id',\n        component: PageComponent,\n        data: {\n            locationId: 'payment-method-detail',\n            breadcrumb: { label: marker('breadcrumb.payment-methods'), link: ['../', 'payment-methods'] },\n        },\n        children: pageService.getPageTabRoutes('payment-method-detail'),\n    },\n    {\n        path: 'global-settings',\n        component: PageComponent,\n        data: {\n            breadcrumb: marker('breadcrumb.global-settings'),\n            locationId: 'global-setting-detail',\n        },\n        resolve: {\n            detail: () => inject(DataService)\n                .query(GetGlobalSettingsDetailDocument)\n                .mapSingle(data => ({ entity: of(data.globalSettings) })),\n        },\n        children: pageService.getPageTabRoutes('global-setting-detail'),\n    },\n];\n\nclass SettingsModule {\n    static { this.hasRegisteredTabsAndBulkActions = false; }\n    constructor(bulkActionRegistryService, pageService) {\n        if (SettingsModule.hasRegisteredTabsAndBulkActions) {\n            return;\n        }\n        bulkActionRegistryService.registerBulkAction(deleteSellersBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteChannelsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteAdministratorsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteRolesBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignShippingMethodsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeShippingMethodsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteShippingMethodsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignPaymentMethodsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removePaymentMethodsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deletePaymentMethodsBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteTaxCategoriesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteTaxRatesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCountriesBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteZonesBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeZoneMembersBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'seller-list',\n            tab: marker('breadcrumb.sellers'),\n            route: '',\n            component: SellerListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'seller-detail',\n            tab: marker('settings.seller'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: SellerDetailComponent,\n                query: GetSellerDetailDocument,\n                entityKey: 'seller',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-seller'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'channel-list',\n            tab: marker('breadcrumb.channels'),\n            route: '',\n            component: ChannelListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'channel-detail',\n            tab: marker('settings.channel'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ChannelDetailComponent,\n                query: GetChannelDetailDocument,\n                entityKey: 'channel',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity\n                            ? entity.code === DEFAULT_CHANNEL_CODE\n                                ? 'common.default-channel'\n                                : entity.code\n                            : marker('settings.create-new-channel'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'administrator-list',\n            tab: marker('breadcrumb.administrators'),\n            route: '',\n            component: AdministratorListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'administrator-detail',\n            tab: marker('settings.administrator'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: AdminDetailComponent,\n                query: GetAdministratorDetailDocument,\n                entityKey: 'administrator',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity\n                            ? `${entity.firstName} ${entity.lastName}`\n                            : marker('admin.create-new-administrator'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'role-list',\n            tab: marker('breadcrumb.roles'),\n            route: '',\n            component: RoleListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'role-detail',\n            tab: marker('settings.role'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: RoleDetailComponent,\n                query: GetRoleDetailDocument,\n                entityKey: 'role',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.description : marker('settings.create-new-role'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-list',\n            tab: marker('breadcrumb.shipping-methods'),\n            route: '',\n            component: ShippingMethodListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-detail',\n            tab: marker('settings.shipping-method'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ShippingMethodDetailComponent,\n                query: GetShippingMethodDetailDocument,\n                entityKey: 'shippingMethod',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-shipping-method'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'shipping-method-list',\n            tab: marker('settings.test-shipping-methods'),\n            route: 'test',\n            component: TestShippingMethodsComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'payment-method-list',\n            tab: marker('breadcrumb.payment-methods'),\n            route: '',\n            component: PaymentMethodListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'payment-method-detail',\n            tab: marker('settings.payment-method'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: PaymentMethodDetailComponent,\n                query: GetPaymentMethodDetailDocument,\n                entityKey: 'paymentMethod',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-payment-method'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-category-list',\n            tab: marker('breadcrumb.tax-categories'),\n            route: '',\n            component: TaxCategoryListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-category-detail',\n            tab: marker('settings.tax-category'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: TaxCategoryDetailComponent,\n                query: GetTaxCategoryDetailDocument,\n                entityKey: 'taxCategory',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-tax-category'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-rate-list',\n            tab: marker('breadcrumb.tax-rates'),\n            route: '',\n            component: TaxRateListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'tax-rate-detail',\n            tab: marker('settings.tax-rate'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: TaxRateDetailComponent,\n                query: GetTaxRateDetailDocument,\n                entityKey: 'taxRate',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-tax-rate'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'country-list',\n            tab: marker('breadcrumb.countries'),\n            route: '',\n            component: CountryListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'country-detail',\n            tab: marker('settings.country'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: CountryDetailComponent,\n                query: GetCountryDetailDocument,\n                entityKey: 'country',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-country'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'zone-list',\n            tab: marker('breadcrumb.zones'),\n            route: '',\n            component: ZoneListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'zone-detail',\n            tab: marker('settings.zone'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: ZoneDetailComponent,\n                query: GetZoneDetailDocument,\n                entityKey: 'zone',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('settings.create-new-zone'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'global-setting-detail',\n            tab: marker('breadcrumb.global-settings'),\n            route: '',\n            component: GlobalSettingsComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'profile',\n            tab: marker('breadcrumb.profile'),\n            route: '',\n            component: ProfileComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'stock-location-list',\n            tab: marker('catalog.stock-locations'),\n            route: '',\n            component: StockLocationListComponent,\n        });\n        pageService.registerPageTab({\n            priority: 0,\n            location: 'stock-location-detail',\n            tab: marker('catalog.stock-location'),\n            route: '',\n            component: detailComponentWithResolver({\n                component: StockLocationDetailComponent,\n                query: GetStockLocationDetailDocument,\n                entityKey: 'stockLocation',\n                getBreadcrumbs: entity => [\n                    {\n                        label: entity ? entity.name : marker('catalog.create-new-stock-location'),\n                        link: [entity?.id],\n                    },\n                ],\n            }),\n        });\n        SettingsModule.hasRegisteredTabsAndBulkActions = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SettingsModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.4\", ngImport: i0, type: SettingsModule, declarations: [TaxCategoryListComponent,\n            TaxCategoryDetailComponent,\n            AdministratorListComponent,\n            RoleListComponent,\n            RoleDetailComponent,\n            AdminDetailComponent,\n            PermissionGridComponent,\n            CountryListComponent,\n            CountryDetailComponent,\n            TaxRateListComponent,\n            TaxRateDetailComponent,\n            ChannelListComponent,\n            ChannelDetailComponent,\n            ShippingMethodListComponent,\n            ShippingMethodDetailComponent,\n            PaymentMethodListComponent,\n            PaymentMethodDetailComponent,\n            GlobalSettingsComponent,\n            TestOrderBuilderComponent,\n            TestAddressFormComponent,\n            SellerDetailComponent,\n            SellerListComponent,\n            ShippingMethodTestResultComponent,\n            ShippingEligibilityTestResultComponent,\n            ZoneListComponent,\n            AddCountryToZoneDialogComponent,\n            ZoneMemberListComponent,\n            ZoneMemberListHeaderDirective,\n            ZoneMemberControlsDirective,\n            ProfileComponent,\n            TestShippingMethodsComponent,\n            ZoneDetailComponent,\n            StockLocationListComponent,\n            StockLocationDetailComponent], imports: [SharedModule, i3$1.RouterModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SettingsModule, providers: [\n            {\n                provide: ROUTES,\n                useFactory: (pageService) => createRoutes(pageService),\n                multi: true,\n                deps: [PageService],\n            },\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.4\", ngImport: i0, type: SettingsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [SharedModule, RouterModule.forChild([])],\n                    providers: [\n                        {\n                            provide: ROUTES,\n                            useFactory: (pageService) => createRoutes(pageService),\n                            multi: true,\n                            deps: [PageService],\n                        },\n                    ],\n                    declarations: [\n                        TaxCategoryListComponent,\n                        TaxCategoryDetailComponent,\n                        AdministratorListComponent,\n                        RoleListComponent,\n                        RoleDetailComponent,\n                        AdminDetailComponent,\n                        PermissionGridComponent,\n                        CountryListComponent,\n                        CountryDetailComponent,\n                        TaxRateListComponent,\n                        TaxRateDetailComponent,\n                        ChannelListComponent,\n                        ChannelDetailComponent,\n                        ShippingMethodListComponent,\n                        ShippingMethodDetailComponent,\n                        PaymentMethodListComponent,\n                        PaymentMethodDetailComponent,\n                        GlobalSettingsComponent,\n                        TestOrderBuilderComponent,\n                        TestAddressFormComponent,\n                        SellerDetailComponent,\n                        SellerListComponent,\n                        ShippingMethodTestResultComponent,\n                        ShippingEligibilityTestResultComponent,\n                        ZoneListComponent,\n                        AddCountryToZoneDialogComponent,\n                        ZoneMemberListComponent,\n                        ZoneMemberListHeaderDirective,\n                        ZoneMemberControlsDirective,\n                        ProfileComponent,\n                        TestShippingMethodsComponent,\n                        ZoneDetailComponent,\n                        StockLocationListComponent,\n                        StockLocationDetailComponent,\n                    ],\n                }]\n        }], ctorParameters: () => [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddCountryToZoneDialogComponent, AdminDetailComponent, AdministratorListComponent, CREATE_STOCK_LOCATION, ChannelDetailComponent, ChannelListComponent, CountryDetailComponent, CountryListComponent, GET_ADMINISTRATOR_DETAIL, GET_ADMINISTRATOR_LIST, GET_CHANNEL_DETAIL, GET_CHANNEL_LIST, GET_COUNTRY_DETAIL, GET_COUNTRY_LIST, GET_GLOBAL_SETTINGS_DETAIL, GET_PAYMENT_METHOD_DETAIL, GET_PAYMENT_METHOD_LIST, GET_PROFILE_DETAIL, GET_ROLE_DETAIL, GET_ROLE_LIST, GET_SELLER_DETAIL, GET_SHIPPING_METHOD_DETAIL, GET_SHIPPING_METHOD_LIST, GET_STOCK_LOCATION_DETAIL, GET_STOCK_LOCATION_LIST, GET_TAX_CATEGORY_DETAIL, GET_TAX_CATEGORY_LIST, GET_TAX_RATE_DETAIL, GET_TAX_RATE_LIST, GET_ZONE_DETAIL, GET_ZONE_LIST, GET_ZONE_MEMBERS, GlobalSettingsComponent, PaymentMethodDetailComponent, PaymentMethodListComponent, PermissionGridComponent, ProfileComponent, ProfileResolver, RoleDetailComponent, RoleListComponent, SellerDetailComponent, SellerListComponent, SettingsModule, ShippingEligibilityTestResultComponent, ShippingMethodDetailComponent, ShippingMethodListComponent, ShippingMethodTestResultComponent, StockLocationDetailComponent, StockLocationListComponent, TaxCategoryDetailComponent, TaxCategoryListComponent, TaxRateDetailComponent, TaxRateListComponent, TestAddressFormComponent, TestOrderBuilderComponent, TestShippingMethodsComponent, UPDATE_STOCK_LOCATION, ZoneDetailComponent, ZoneListComponent, ZoneMemberControlsDirective, ZoneMemberListComponent, ZoneMemberListHeaderDirective, assignPaymentMethodsToChannelBulkAction, assignShippingMethodsToChannelBulkAction, assignStockLocationsToChannelBulkAction, createRoutes, deleteAdministratorsBulkAction, deleteChannelsBulkAction, deleteCountriesBulkAction, deletePaymentMethodsBulkAction, deleteRolesBulkAction, deleteSellersBulkAction, deleteShippingMethodsBulkAction, deleteStockLocationsBulkAction, deleteTaxCategoriesBulkAction, deleteTaxRatesBulkAction, deleteZonesBulkAction, removePaymentMethodsFromChannelBulkAction, removeShippingMethodsFromChannelBulkAction, removeStockLocationsFromChannelBulkAction, removeZoneMembersBulkAction };\n"],"x_google_ignoreList":[0,1]}